name: CI (master)
on:
  schedule:
    - cron: '0 5 * * *' # daily at 05:00
  pull_request:
    branches:
      - master

env:
  RESOLVE_REGISTRY: https://repo.orl.eng.hitachivantara.com/artifactory/api/npm/npm/

jobs:
  Lint:
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Lint
        run: npm run lint

  Test-Jest:
    name: Test Jest
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Test
        run: npm run test

  Build-Documentation:
    name: Build Documentation
    runs-on: [self-hosted, Linux]
    container:
      image: node:12.14.1-buster
      options: -u 1000 # buildguy

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install
        run: |
          npm config set @hv:registry ${RESOLVE_REGISTRY}
          npm ci

      - name: Bootstrap
        run: npm run bootstrap

      - name: Generate Documentation
        run: npm run build-documentation

      - name: Archive Documentation
        uses: actions/upload-artifact@v1
        with:
          name: documentation
          path: dist

  Robot_pa11y:
    name: Test Robot pa11y
    needs: Build-Documentation
    runs-on: [self-hosted, Windows]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install PA11Y
        working-directory: ./automation/robot
        shell: cmd
        run: npm ci

      - name: Fetch Storybook
        uses: actions/download-artifact@v1
        with:
          name: documentation
          path: .github/storybook/www

      - name: Run Storybook
        uses: ./.github/storybook

      - name: Run PA11Y
        shell: cmd
        run: >-
          robot
          --variable STORYBOOK_URL:http://localhost:9002
          --include pa11y
          --outputdir reports
          --report report.html
          --log log.html
          automation\robot\storybook\core

      - name: Save Reports
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: pa11y-reports
          path: reports

  Robot:
    name: Test Robot
    needs: Build-Documentation
    runs-on: [self-hosted, Windows]
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        browser: [ie, chrome, firefox]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch Storybook
        uses: actions/download-artifact@v1
        with:
          name: documentation
          path: .github/storybook/www

      - name: Run Storybook
        uses: ./.github/storybook

      - name: Run SELENIUM Robot
        uses: ./.github/robot
        with:
          storybook-url: http://localhost:9002
          browser: ${{ matrix.browser }}
          excludes: |
            pa11y
            issueORissue-${{ matrix.browser }}ORimage
            bug-${{ matrix.browser }}ORbug-${{ matrix.browser }}-webdriverORbug-jenkins
            bug-${{ matrix.browser }}ORbug-${{ matrix.browser }}-webdriverORbug-jenkins
          output-dir: reports
          processes: 3
          path: ./automation/robot/storybook/core

      - name: Save Reports
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: ${{ matrix.browser }}-reports
          path: reports

  Release:
    if: github.event_name == 'schedule'
    needs: Robot
    runs-on: [self-hosted, Linux]
    steps:
      - name: Trigger Release
        uses: actions/github-script@0.8.0
        env:
          RELEASE_COMMIT_MESSAGE: 'chore(release): publish'
        with:
          # repo scope token is required to generate a dispatch event
          github-token: ${{ secrets.BUILD_TOKEN }}
          script: |
            const branch = await github.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: context.ref
            })

            const message = branch.data.commit.commit.message

            if(!message.includes('${{ env.RELEASE_COMMIT_MESSAGE }}')){
              console.log('Last commit not released, triggering a new release.')

              await github.repos.createDispatchEvent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                event_type: 'release'
              })
            } else {
              console.log('Last commit already released.')
            }
