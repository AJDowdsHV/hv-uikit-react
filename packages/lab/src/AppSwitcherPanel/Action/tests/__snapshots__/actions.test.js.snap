// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Action /> with an element icon should render correctly 1`] = `
<WithStyles(Action)
  application={
    Object {
      "iconElement": <Tool />,
      "id": "app-1",
      "name": "Mock App 1",
      "target": "_top",
      "url": "http://mockapp1/",
    }
  }
  key="mockKey"
>
  <Action
    application={
      Object {
        "iconElement": <Tool />,
        "id": "app-1",
        "name": "Mock App 1",
        "target": "_top",
        "url": "http://mockapp1/",
      }
    }
    classes={
      Object {
        "dummyImage": "HvAppSwitcherPanelAction-dummyImage",
        "iconInfo": "HvAppSwitcherPanelAction-iconInfo",
        "iconUrl": "HvAppSwitcherPanelAction-iconUrl",
        "link": "HvAppSwitcherPanelAction-link",
        "selected": "HvAppSwitcherPanelAction-selected",
        "typography": "HvAppSwitcherPanelAction-typography",
      }
    }
  >
    <a
      className="HvAppSwitcherPanelAction-link"
      href="http://mockapp1/"
      target="_top"
    >
      <WithStyles(ForwardRef)
        className="HvAppSwitcherPanelAction-typography"
        component="div"
        onClick={[Function]}
        role="button"
        tabIndex={0}
        variant="normalText"
      >
        <ForwardRef
          className="HvAppSwitcherPanelAction-typography"
          classes={
            Object {
              "3xlTitle": "HvTypography-3xlTitle",
              "4xlTitle": "HvTypography-4xlTitle",
              "5xlTitle": "HvTypography-5xlTitle",
              "disabledText": "HvTypography-disabledText",
              "highlightText": "HvTypography-highlightText",
              "lTitle": "HvTypography-lTitle",
              "link": "HvTypography-link",
              "mTitle": "HvTypography-mTitle",
              "noWrap": "HvTypography-noWrap",
              "normalText": "HvTypography-normalText",
              "placeholderText": "HvTypography-placeholderText",
              "root": "HvTypography-root",
              "sTitle": "HvTypography-sTitle",
              "sectionTitle": "HvTypography-sectionTitle",
              "selectedNavText": "HvTypography-selectedNavText",
              "vizText": "HvTypography-vizText",
              "vizTextDisabled": "HvTypography-vizTextDisabled",
              "xlTitle": "HvTypography-xlTitle",
              "xsInlineLink": "HvTypography-xsInlineLink",
              "xsTitle": "HvTypography-xsTitle",
              "xxlTitle": "HvTypography-xxlTitle",
              "xxsTitle": "HvTypography-xxsTitle",
            }
          }
          component="div"
          onClick={[Function]}
          role="button"
          tabIndex={0}
          variant="normalText"
        >
          <div
            className="HvAppSwitcherPanelAction-typography HvTypography-root HvTypography-normalText"
            onClick={[Function]}
            role="button"
            tabIndex={0}
          >
            <Tool>
              <HvIconBase
                iconSize="S"
                name="Tool"
              >
                <div
                  className="HvIconBase-root HvIconBase-s"
                  name="Tool"
                >
                  <svg
                    focusable={false}
                    height={16}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      className="color0"
                      d="M4.79431 14.03412l4.59619-4.5962.49494.07061a3.97211 3.97211 0 003.39415-1.13127 4.01469 4.01469 0 001.03528-3.86371L12.987 5.84145l-.41363.00069h-2.41551V3.42665l.00069-.41363 1.3279-1.32789a4.01606 4.01606 0 00-3.86371 1.03528 3.97211 3.97211 0 00-1.13127 3.39415l.07061.49494-4.5962 4.59619 2.82843 2.82843m0 1.41421L.55167 11.20569l4.94975-4.94975a5.00069 5.00069 0 017.70739-4.879l-2.05054 2.05058v1.41421h1.41421L14.623 2.79119a5.01258 5.01258 0 01-.63632 6.29318 4.96269 4.96269 0 01-4.24264 1.41421z"
                      fill="#414141"
                    />
                  </svg>
                </div>
              </HvIconBase>
            </Tool>
            <span
              title="Mock App 1"
            >
              Mock App 1
            </span>
          </div>
        </ForwardRef>
      </WithStyles(ForwardRef)>
    </a>
  </Action>
</WithStyles(Action)>
`;

exports[`<Action /> with description should render correctly 1`] = `
<WithStyles(Action)
  application={
    Object {
      "description": "Mock App 1 Description",
      "iconUrl": "http://mockapp1/icon",
      "id": "app-1",
      "name": "Mock App 1",
      "target": "_top",
      "url": "http://mockapp1/",
    }
  }
  key="mockKey"
>
  <Action
    application={
      Object {
        "description": "Mock App 1 Description",
        "iconUrl": "http://mockapp1/icon",
        "id": "app-1",
        "name": "Mock App 1",
        "target": "_top",
        "url": "http://mockapp1/",
      }
    }
    classes={
      Object {
        "dummyImage": "HvAppSwitcherPanelAction-dummyImage",
        "iconInfo": "HvAppSwitcherPanelAction-iconInfo",
        "iconUrl": "HvAppSwitcherPanelAction-iconUrl",
        "link": "HvAppSwitcherPanelAction-link",
        "selected": "HvAppSwitcherPanelAction-selected",
        "typography": "HvAppSwitcherPanelAction-typography",
      }
    }
  >
    <a
      className="HvAppSwitcherPanelAction-link"
      href="http://mockapp1/"
      target="_top"
    >
      <WithStyles(ForwardRef)
        className="HvAppSwitcherPanelAction-typography"
        component="div"
        onClick={[Function]}
        role="button"
        tabIndex={0}
        variant="normalText"
      >
        <ForwardRef
          className="HvAppSwitcherPanelAction-typography"
          classes={
            Object {
              "3xlTitle": "HvTypography-3xlTitle",
              "4xlTitle": "HvTypography-4xlTitle",
              "5xlTitle": "HvTypography-5xlTitle",
              "disabledText": "HvTypography-disabledText",
              "highlightText": "HvTypography-highlightText",
              "lTitle": "HvTypography-lTitle",
              "link": "HvTypography-link",
              "mTitle": "HvTypography-mTitle",
              "noWrap": "HvTypography-noWrap",
              "normalText": "HvTypography-normalText",
              "placeholderText": "HvTypography-placeholderText",
              "root": "HvTypography-root",
              "sTitle": "HvTypography-sTitle",
              "sectionTitle": "HvTypography-sectionTitle",
              "selectedNavText": "HvTypography-selectedNavText",
              "vizText": "HvTypography-vizText",
              "vizTextDisabled": "HvTypography-vizTextDisabled",
              "xlTitle": "HvTypography-xlTitle",
              "xsInlineLink": "HvTypography-xsInlineLink",
              "xsTitle": "HvTypography-xsTitle",
              "xxlTitle": "HvTypography-xxlTitle",
              "xxsTitle": "HvTypography-xxsTitle",
            }
          }
          component="div"
          onClick={[Function]}
          role="button"
          tabIndex={0}
          variant="normalText"
        >
          <div
            className="HvAppSwitcherPanelAction-typography HvTypography-root HvTypography-normalText"
            onClick={[Function]}
            role="button"
            tabIndex={0}
          >
            <img
              className="HvAppSwitcherPanelAction-iconUrl"
              onError={[Function]}
              src="http://mockapp1/icon"
            />
            <span
              title="Mock App 1"
            >
              Mock App 1
            </span>
            <Info
              className="HvAppSwitcherPanelAction-iconInfo"
              title="Mock App 1 Description"
            >
              <HvIconBase
                className="HvAppSwitcherPanelAction-iconInfo"
                iconSize="S"
                name="Info"
                title="Mock App 1 Description"
              >
                <div
                  className="HvAppSwitcherPanelAction-iconInfo HvIconBase-root HvIconBase-s"
                  name="Info"
                  title="Mock App 1 Description"
                >
                  <svg
                    focusable={false}
                    height={16}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      className="color0"
                      d="M8 16a8 8 0 118-8 8 8 0 01-8 8zM8 1a6.957 6.957 0 00-7 6.91373Q.99973 7.95687 1 8a6.957 6.957 0 006.91373 7q.04314.00027.08627 0a6.957 6.957 0 007-6.91373Q15.00027 8.04313 15 8a6.957 6.957 0 00-6.91373-7Q8.04313.99973 8 1zm-.5 11h1V6h-1zm0-7h1V4h-1z"
                      fill="#414141"
                    />
                  </svg>
                </div>
              </HvIconBase>
            </Info>
          </div>
        </ForwardRef>
      </WithStyles(ForwardRef)>
    </a>
  </Action>
</WithStyles(Action)>
`;

exports[`<Action /> without description should render correctly 1`] = `
<WithStyles(Action)
  application={
    Object {
      "iconUrl": "http://mockapp1/icon",
      "id": "app-1",
      "name": "Mock App 1",
      "target": "_top",
      "url": "http://mockapp1/",
    }
  }
  key="mockKey"
>
  <Action
    application={
      Object {
        "iconUrl": "http://mockapp1/icon",
        "id": "app-1",
        "name": "Mock App 1",
        "target": "_top",
        "url": "http://mockapp1/",
      }
    }
    classes={
      Object {
        "dummyImage": "HvAppSwitcherPanelAction-dummyImage",
        "iconInfo": "HvAppSwitcherPanelAction-iconInfo",
        "iconUrl": "HvAppSwitcherPanelAction-iconUrl",
        "link": "HvAppSwitcherPanelAction-link",
        "selected": "HvAppSwitcherPanelAction-selected",
        "typography": "HvAppSwitcherPanelAction-typography",
      }
    }
  >
    <a
      className="HvAppSwitcherPanelAction-link"
      href="http://mockapp1/"
      target="_top"
    >
      <WithStyles(ForwardRef)
        className="HvAppSwitcherPanelAction-typography"
        component="div"
        onClick={[Function]}
        role="button"
        tabIndex={0}
        variant="normalText"
      >
        <ForwardRef
          className="HvAppSwitcherPanelAction-typography"
          classes={
            Object {
              "3xlTitle": "HvTypography-3xlTitle",
              "4xlTitle": "HvTypography-4xlTitle",
              "5xlTitle": "HvTypography-5xlTitle",
              "disabledText": "HvTypography-disabledText",
              "highlightText": "HvTypography-highlightText",
              "lTitle": "HvTypography-lTitle",
              "link": "HvTypography-link",
              "mTitle": "HvTypography-mTitle",
              "noWrap": "HvTypography-noWrap",
              "normalText": "HvTypography-normalText",
              "placeholderText": "HvTypography-placeholderText",
              "root": "HvTypography-root",
              "sTitle": "HvTypography-sTitle",
              "sectionTitle": "HvTypography-sectionTitle",
              "selectedNavText": "HvTypography-selectedNavText",
              "vizText": "HvTypography-vizText",
              "vizTextDisabled": "HvTypography-vizTextDisabled",
              "xlTitle": "HvTypography-xlTitle",
              "xsInlineLink": "HvTypography-xsInlineLink",
              "xsTitle": "HvTypography-xsTitle",
              "xxlTitle": "HvTypography-xxlTitle",
              "xxsTitle": "HvTypography-xxsTitle",
            }
          }
          component="div"
          onClick={[Function]}
          role="button"
          tabIndex={0}
          variant="normalText"
        >
          <div
            className="HvAppSwitcherPanelAction-typography HvTypography-root HvTypography-normalText"
            onClick={[Function]}
            role="button"
            tabIndex={0}
          >
            <img
              className="HvAppSwitcherPanelAction-iconUrl"
              onError={[Function]}
              src="http://mockapp1/icon"
            />
            <span
              title="Mock App 1"
            >
              Mock App 1
            </span>
          </div>
        </ForwardRef>
      </WithStyles(ForwardRef)>
    </a>
  </Action>
</WithStyles(Action)>
`;
