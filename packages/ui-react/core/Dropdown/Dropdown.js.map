{"version":3,"sources":["../../src/Dropdown/Dropdown.js"],"names":["HvDropdown","props","dropdownIndicator","base","theme","palette","grey","greyInspire","inspire","padding","color","control","state","dropdownExpanded","primary","primaryMain","main","greyPlain","plain","borderColor","borderBottomColor","boxShadow","cursor","menu","marginTop","border","borderTop","menuList","spacing","spacingXs","xs","margin","option","common","greyClear","clear","greyRainy","rainy","commonWhite","white","lineHeight","background","isSelected","selectedOption","value","classes","label","options","disabled","onChange","reactSelectTheme","defaultTheme","borderRadius","controlHeight","baseUnit","menuGutter","reactSelectStyles","styles","getLabelText","l","selectGridLabel","selectGridLabelText","HvChevron","chevron","chevronUp","chevronDown","IndicatorSeparator","DropdownIndicator","components","selectGridContentStyles","selectGridContent","selectGridContentElement","setState","React","Component","propTypes","PropTypes","instanceOf","Object","isRequired","Array","string","bool","Function","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2018 Hitachi Vantara Corporation.\n *\n *  The copyright to the computer software herein is the property of\n *  Hitachi Vantara Corporation. The software may be used and/or copied only\n *  with the written permission of Hitachi Vantara Corporation or in accordance\n *  with the terms and conditions stipulated in the agreement/contract\n *  under which the software has been supplied.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Select, { components, defaultTheme } from \"react-select\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass HvDropdown extends React.Component {\n\n  styles = {\n    dropdownIndicator: (base, theme) => {\n      const {\n        palette: { grey: { inspire: greyInspire } } = { grey: {} }\n      } = theme || {};\n\n      return {\n        ...base,\n        padding: \"5px\",\n        color: greyInspire\n      };\n    },\n    control: (base, state, theme, dropdownExpanded) => {\n      const {\n        palette: {\n          primary: { main: primaryMain },\n          grey: { plain: greyPlain, inspire: greyInspire }\n        } = { primary: {}, grey: {} }\n      } = theme || {};\n\n      return {\n        ...base,\n        borderColor: dropdownExpanded ? greyInspire : greyPlain,\n        borderBottomColor: dropdownExpanded ? \"transparent\" : \"inherit\",\n        boxShadow: \"none\",\n        \"&:hover\": {\n          borderColor: dropdownExpanded ? greyInspire : primaryMain,\n          borderBottomColor: dropdownExpanded ? \"transparent\" : primaryMain,\n          cursor: \"pointer\"\n        }\n      };\n    },\n    menu: (base, theme) => {\n      const {\n        palette: { grey: { inspire: greyInspire } } = { grey: {} }\n      } = theme || {};\n\n      return {\n        ...base,\n        marginTop: \"-1px\",\n        boxShadow: \"none\",\n        border: `solid 1px ${greyInspire}`,\n        borderTop: \"transparent\"\n      };\n    },\n    menuList: (base, theme) => {\n      const {\n        spacing: { xs: spacingXs } = {}\n      } = theme || {};\n\n      return {\n        ...base,\n        margin: spacingXs,\n        padding: \"0px\"\n      };\n    },\n    option: (base, state, theme) => {\n      const {\n        palette: {\n          grey: { clear: greyClear, rainy: greyRainy, inspire: greyInspire },\n          common: { white: commonWhite }\n        } = { grey: {}, common: {} },\n        spacing: { xs: spacingXs } = {}\n      } = theme || {};\n\n      return {\n        ...base,\n        padding: spacingXs,\n        lineHeight: \"12px\",\n        background: state.isSelected ? greyRainy : commonWhite,\n        color: greyInspire,\n        \"&:hover\": {\n          background: greyClear,\n          cursor: \"pointer\"\n        }\n      };\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownExpanded: false,\n      selectedOption: props.value\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      ...state,\n      selectedOption: props.value\n    }\n  }\n\n  render() {\n    const {\n      theme,\n      classes,\n      label,\n      options,\n      disabled,\n      onChange\n    } = this.props;\n    const { dropdownExpanded, selectedOption } = this.state;\n\n    const reactSelectTheme = {\n      ...defaultTheme,\n      borderRadius: 0,\n      spacing: {\n        controlHeight: 32,\n        baseUnit: 4,\n        menuGutter: 0\n      }\n    };\n\n    const reactSelectStyles = {\n      dropdownIndicator: base => this.styles.dropdownIndicator(base, theme),\n      control: (base, state) =>\n        this.styles.control(base, state, theme, dropdownExpanded),\n      menu: base => this.styles.menu(base, theme),\n      menuList: base => this.styles.menuList(base, theme),\n      option: (base, state) => this.styles.option(base, state, theme)\n    };\n\n    const getLabelText = l => (\n      <Grid item xs={12} className={classes.selectGridLabel}>\n        <Typography variant=\"subtitle2\" className={classes.selectGridLabelText}>\n          {l}\n        </Typography>\n      </Grid>\n    );\n\n    const HvChevron = () => (\n      <div\n        className={classNames(classes.chevron, {\n          [classes.chevronUp]: dropdownExpanded,\n          [classes.chevronDown]: !dropdownExpanded\n        })}\n      />\n    );\n\n    const IndicatorSeparator = null;\n    const DropdownIndicator = props =>\n      components.DropdownIndicator && (\n        <components.DropdownIndicator {...props}>\n          <HvChevron />\n        </components.DropdownIndicator>\n      );\n\n    const selectGridContentStyles = classNames({\n      [classes.selectGridContent]: label !== null\n    });\n\n    return (\n      <Grid container>\n        {label !== null ? getLabelText(label) : null}\n        <Grid item xs={12} className={selectGridContentStyles}>\n          <Select\n            value={selectedOption}\n            className={classes.selectGridContentElement}\n            components={{ IndicatorSeparator, DropdownIndicator }}\n            options={options}\n            menuIsOpen={dropdownExpanded}\n            onMenuOpen={() => this.setState({ dropdownExpanded: true })}\n            onMenuClose={() => this.setState({ dropdownExpanded: false })}\n            theme={reactSelectTheme}\n            styles={reactSelectStyles}\n            isDisabled={disabled}\n            onChange={onChange}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nHvDropdown.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  options: PropTypes.instanceOf(Array),\n  value: PropTypes.instanceOf(Object),\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.instanceOf(Function)\n};\n\nHvDropdown.defaultProps = {\n  label: null,\n  options: [],\n  value: null,\n  disabled: false,\n  onChange: () => {}\n};\n\nexport default HvDropdown;\n"],"file":"Dropdown.js"}