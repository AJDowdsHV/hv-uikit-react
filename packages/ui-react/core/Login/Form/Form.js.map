{"version":3,"sources":["../../../src/Login/Form/Form.js"],"names":["SpinnerAdornment","styles","props","classes","color","spinner","Form","username","password","isLogging","e","preventDefault","state","login","setState","name","event","target","value","length","showPassword","root","handleSubmit","label","handleInputChange","input","fontSize","button","checkInput","React","Component","displayName","propTypes","PropTypes","instanceOf","Object","isRequired","Function"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AApBA;;;;;;;;;AAsBA,IAAMA,gBAAgB,GAAG,yBAAWC,eAAX,EAAmB,UAAAC,KAAK,EAAI;AAAA,MAC3CC,OAD2C,GAC/BD,KAD+B,CAC3CC,OAD2C;AAEnD,SACE,6BAAC,yBAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,SAAS,EAAED,OAAO,CAACE,OAFrB;AAGE,IAAA,IAAI,EAAE;AAHR,IADF;AAOD,CATwB,CAAzB;;IAWMC,I;;;;;;;;;;;;;;;;;8HACI;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,SAAS,EAAE;AAHL,K;;;;;;gCAMO,iBAAMC,CAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbA,gBAAAA,CAAC,CAACC,cAAF;AADa,8BAGkB,MAAKC,KAHvB,EAGLL,QAHK,eAGLA,QAHK,EAGKC,QAHL,eAGKA,QAHL;AAILK,gBAAAA,KAJK,GAIK,MAAKX,KAJV,CAILW,KAJK;;AAMb,sBAAKC,QAAL,CAAc;AAAEL,kBAAAA,SAAS,EAAE;AAAb,iBAAd;;AANa;AAAA;AAAA,uBASLI,KAAK,CAAC;AAAEN,kBAAAA,QAAQ,EAARA,QAAF;AAAYC,kBAAAA,QAAQ,EAARA;AAAZ,iBAAD,CATA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAcb,sBAAKM,QAAL,CAAc;AAAEL,kBAAAA,SAAS,EAAE;AAAb,iBAAd;;AAda;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;0IAiBK,UAAAM,IAAI;AAAA,aAAI,UAAAC,KAAK,EAAI;AACnC,cAAKF,QAAL,mCAAiBC,IAAjB,EAAwBC,KAAK,CAACC,MAAN,CAAaC,KAArC;AACD,OAFuB;AAAA,K;mIAIX,YAAM;AAAA,yBACc,MAAKN,KADnB;AAAA,UACTL,QADS,gBACTA,QADS;AAAA,UACCC,QADD,gBACCA,QADD;AAEjB,aAAOD,QAAQ,CAACY,MAAT,KAAoB,CAApB,IAAyBX,QAAQ,CAACW,MAAT,KAAoB,CAApD;AACD,K;;;;;;6BAEQ;AAAA;;AAAA,UACChB,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAAA,yBAEiD,KAAKS,KAFtD;AAAA,UAECQ,YAFD,gBAECA,YAFD;AAAA,UAEeb,QAFf,gBAEeA,QAFf;AAAA,UAEyBC,QAFzB,gBAEyBA,QAFzB;AAAA,UAEmCC,SAFnC,gBAEmCA,SAFnC;AAIP,aACE;AAAM,QAAA,SAAS,EAAEN,OAAO,CAACkB,IAAzB;AAA+B,QAAA,QAAQ,EAAE,kBAAAX,CAAC;AAAA,iBAAI,MAAI,CAACY,YAAL,CAAkBZ,CAAlB,CAAJ;AAAA;AAA1C,SACE,6BAAC,mBAAD;AAAY,QAAA,SAAS,EAAEP,OAAO,CAACoB;AAA/B,oBADF,EAEE,6BAAC,cAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEhB,QAHT;AAIE,QAAA,QAAQ,EAAE,KAAKiB,iBAAL,CAAuB,UAAvB,CAJZ;AAKE,QAAA,SAAS,EAAErB,OAAO,CAACsB,KALrB;AAME,QAAA,UAAU,EAAE;AAAEV,UAAAA,IAAI,EAAE;AAAR,SANd;AAOE,QAAA,cAAc,EACZ,6BAAC,uBAAD;AAAgB,UAAA,QAAQ,EAAC;AAAzB,WACE,6BAAC,eAAD;AAAQ,UAAA,KAAK,EAAE;AAAEW,YAAAA,QAAQ,EAAE;AAAZ;AAAf,UADF;AARJ,QAFF,EAeE,6BAAC,mBAAD;AAAY,QAAA,SAAS,EAAEvB,OAAO,CAACoB;AAA/B,oBAfF,EAgBE,6BAAC,cAAD;AACE,QAAA,IAAI,EAAEH,YAAY,GAAG,MAAH,GAAY,UADhC;AAEE,QAAA,KAAK,EAAEZ,QAFT;AAGE,QAAA,SAAS,EAAEL,OAAO,CAACsB,KAHrB;AAIE,QAAA,QAAQ,EAAE,KAAKD,iBAAL,CAAuB,UAAvB,CAJZ;AAKE,QAAA,UAAU,EAAE;AAAET,UAAAA,IAAI,EAAE;AAAR,SALd;AAME,QAAA,cAAc,EACZ,6BAAC,uBAAD;AAAgB,UAAA,QAAQ,EAAC;AAAzB,WACE,6BAAC,aAAD;AAAM,UAAA,KAAK,EAAE;AAAEW,YAAAA,QAAQ,EAAE;AAAZ;AAAb,UADF;AAPJ,QAhBF,EA4BE,6BAAC,eAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,SAAS,EAAEvB,OAAO,CAACwB,MAJrB;AAKE,QAAA,QAAQ,EAAE,KAAKC,UAAL;AALZ,SAOGnB,SAAS,GAAG,6BAAC,gBAAD,OAAH,GAA0B,QAPtC,CA5BF,CADF;AAwCD;;;EA7EgBoB,eAAMC,S;;AAgFzBxB,IAAI,CAACyB,WAAL,GAAmB,MAAnB;AAEAzB,IAAI,CAAC0B,SAAL,GAAiB;AACf7B,EAAAA,OAAO,EAAE8B,mBAAUC,UAAV,CAAqBC,MAArB,EAA6BC,UADvB;AAEfvB,EAAAA,KAAK,EAAEoB,mBAAUC,UAAV,CAAqBG,QAArB,EAA+BD;AAFvB,CAAjB;eAKe9B,I","sourcesContent":["/**\n * Copyright (c) 2018 Hitachi Vantara Corporation.\n *\n *  The copyright to the computer software herein is the property of\n *  Hitachi Vantara Corporation. The software may be used and/or copied only\n *  with the written permission of Hitachi Vantara Corporation or in accordance\n *  with the terms and conditions stipulated in the agreement/contract\n *  under which the software has been supplied.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Lock from \"@material-ui/icons/Lock\";\nimport Person from \"@material-ui/icons/Person\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from \"./styles\";\n\nconst SpinnerAdornment = withStyles(styles)(props => {\n  const { classes } = props;\n  return (\n    <CircularProgress\n      style={{ color: \"white\" }}\n      className={classes.spinner}\n      size={15}\n    />\n  );\n});\n\nclass Form extends React.Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    isLogging: false\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n    const { login } = this.props;\n\n    this.setState({ isLogging: true });\n\n    try {\n      await login({ username, password });\n    } catch (error) {\n      // TODO: handle authentication errors properly\n    }\n\n    this.setState({ isLogging: false });\n  };\n\n  handleInputChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  checkInput = () => {\n    const { username, password } = this.state;\n    return username.length === 0 || password.length === 0;\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { showPassword, username, password, isLogging } = this.state;\n\n    return (\n      <form className={classes.root} onSubmit={e => this.handleSubmit(e)}>\n        <InputLabel className={classes.label}>Username</InputLabel>\n        <Input\n          autoFocus\n          type=\"text\"\n          value={username}\n          onChange={this.handleInputChange(\"username\")}\n          className={classes.input}\n          inputProps={{ name: \"username\" }}\n          startAdornment={(\n            <InputAdornment position=\"start\">\n              <Person style={{ fontSize: 19 }} />\n            </InputAdornment>\n)}\n        />\n        <InputLabel className={classes.label}>Password</InputLabel>\n        <Input\n          type={showPassword ? \"text\" : \"password\"}\n          value={password}\n          className={classes.input}\n          onChange={this.handleInputChange(\"password\")}\n          inputProps={{ name: \"password\" }}\n          startAdornment={(\n            <InputAdornment position=\"start\">\n              <Lock style={{ fontSize: 19 }} />\n            </InputAdornment>\n)}\n        />\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          className={classes.button}\n          disabled={this.checkInput()}\n        >\n          {isLogging ? <SpinnerAdornment /> : \"Log in\"}\n        </Button>\n      </form>\n    );\n  }\n}\n\nForm.displayName = \"Form\";\n\nForm.propTypes = {\n  classes: PropTypes.instanceOf(Object).isRequired,\n  login: PropTypes.instanceOf(Function).isRequired\n};\n\nexport default Form;\n"],"file":"Form.js"}