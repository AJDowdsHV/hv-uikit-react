// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input should not have the validation section 1`] = `
<WithStyles(HvInput)
  showInfo={false}
>
  <HvInput
    classes={
      Object {
        "adornmentButton": "HvInput-adornmentButton",
        "adornmentsBox": "HvInput-adornmentsBox",
        "description": "HvInput-description",
        "error": "HvInput-error",
        "hasSuggestions": "HvInput-hasSuggestions",
        "icon": "HvInput-icon",
        "iconClear": "HvInput-iconClear",
        "input": "HvInput-input",
        "inputBorderContainer": "HvInput-inputBorderContainer",
        "inputExtension": "HvInput-inputExtension",
        "inputRoot": "HvInput-inputRoot",
        "inputRootDisabled": "HvInput-inputRootDisabled",
        "inputRootFocused": "HvInput-inputRootFocused",
        "inputRootMultiline": "HvInput-inputRootMultiline",
        "label": "HvInput-label",
        "labelContainer": "HvInput-labelContainer",
        "root": "HvInput-root",
        "suggestionList": "HvInput-suggestionList",
        "suggestionsContainer": "HvInput-suggestionsContainer",
      }
    }
    showInfo={false}
  >
    <WithStyles(WithId)
      className="HvInput-root"
      disabled={false}
      onBlur={[Function]}
      readOnly={false}
      required={false}
      status="standBy"
      value=""
    >
      <WithId
        className="HvInput-root"
        classes={
          Object {
            "root": "HvFormElement-root",
          }
        }
        disabled={false}
        onBlur={[Function]}
        readOnly={false}
        required={false}
        status="standBy"
        value=""
      >
        <HvFormElement
          className="HvInput-root"
          classes={
            Object {
              "root": "HvFormElement-root",
            }
          }
          disabled={false}
          id="hv-form-element-26"
          onBlur={[Function]}
          readOnly={false}
          required={false}
          status="standBy"
          value=""
        >
          <div
            className="HvInput-root HvFormElement-root"
            id="hv-form-element-26"
            onBlur={[Function]}
          >
            <WithStyles(HvBaseInput)
              autoFocus={false}
              classes={
                Object {
                  "input": "HvInput-input",
                  "inputBorderContainer": "HvInput-inputBorderContainer",
                  "inputRoot": "HvInput-inputRoot",
                  "inputRootDisabled": "HvInput-inputRootDisabled",
                  "inputRootFocused": "HvInput-inputRootFocused",
                  "inputRootMultiline": "HvInput-inputRootMultiline",
                }
              }
              disabled={false}
              endAdornment={null}
              id="hvinput25-input"
              inputProps={
                Object {
                  "aria-controls": undefined,
                  "aria-describedby": undefined,
                  "aria-errormessage": undefined,
                  "aria-invalid": undefined,
                  "aria-label": undefined,
                  "aria-labelledby": undefined,
                  "autoComplete": undefined,
                  "ref": Object {
                    "current": <input
                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                      id="hvinput25-input"
                      rows="10"
                      type="text"
                      value=""
                    />,
                  },
                }
              }
              inputRef={
                Object {
                  "current": <input
                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                    id="hvinput25-input"
                    rows="10"
                    type="text"
                    value=""
                  />,
                }
              }
              invalid={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              readOnly={false}
              required={false}
              showInfo={false}
              type="text"
              value=""
            >
              <HvBaseInput
                autoFocus={false}
                classes={
                  Object {
                    "disabled": "HvBaseInput-disabled",
                    "input": "HvBaseInput-input HvInput-input",
                    "inputBorderContainer": "HvBaseInput-inputBorderContainer HvInput-inputBorderContainer",
                    "inputResizable": "HvBaseInput-inputResizable",
                    "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot",
                    "inputRootDisabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                    "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                    "inputRootMultiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                    "invalid": "HvBaseInput-invalid",
                    "resizable": "HvBaseInput-resizable",
                    "root": "HvBaseInput-root",
                  }
                }
                disabled={false}
                endAdornment={null}
                id="hvinput25-input"
                inputProps={
                  Object {
                    "aria-controls": undefined,
                    "aria-describedby": undefined,
                    "aria-errormessage": undefined,
                    "aria-invalid": undefined,
                    "aria-label": undefined,
                    "aria-labelledby": undefined,
                    "autoComplete": undefined,
                    "ref": Object {
                      "current": <input
                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                        id="hvinput25-input"
                        rows="10"
                        type="text"
                        value=""
                      />,
                    },
                  }
                }
                inputRef={
                  Object {
                    "current": <input
                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                      id="hvinput25-input"
                      rows="10"
                      type="text"
                      value=""
                    />,
                  }
                }
                invalid={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={false}
                required={false}
                showInfo={false}
                type="text"
                value=""
              >
                <div
                  className="HvBaseInput-root"
                >
                  <WithStyles(ForwardRef(Input))
                    autoFocus={false}
                    classes={
                      Object {
                        "disabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                        "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                        "input": "HvBaseInput-input HvInput-input",
                        "multiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                        "root": "HvBaseInput-inputRoot HvInput-inputRoot",
                      }
                    }
                    disabled={false}
                    endAdornment={null}
                    id="hvinput25-input"
                    inputProps={
                      Object {
                        "aria-controls": undefined,
                        "aria-describedby": undefined,
                        "aria-errormessage": undefined,
                        "aria-invalid": undefined,
                        "aria-label": undefined,
                        "aria-labelledby": undefined,
                        "autoComplete": undefined,
                        "ref": Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hvinput25-input"
                            rows="10"
                            type="text"
                            value=""
                          />,
                        },
                        "required": false,
                      }
                    }
                    inputRef={
                      Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hvinput25-input"
                          rows="10"
                          type="text"
                          value=""
                        />,
                      }
                    }
                    multiline={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    readOnly={false}
                    rows={10}
                    showInfo={false}
                    type="text"
                    value=""
                  >
                    <ForwardRef(Input)
                      autoFocus={false}
                      classes={
                        Object {
                          "colorSecondary": "MuiInput-colorSecondary",
                          "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input HvBaseInput-input HvInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "marginDense": "MuiInput-marginDense",
                          "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                          "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                          "underline": "MuiInput-underline",
                        }
                      }
                      disableUnderline={true}
                      disabled={false}
                      endAdornment={null}
                      id="hvinput25-input"
                      inputProps={
                        Object {
                          "aria-controls": undefined,
                          "aria-describedby": undefined,
                          "aria-errormessage": undefined,
                          "aria-invalid": undefined,
                          "aria-label": undefined,
                          "aria-labelledby": undefined,
                          "autoComplete": undefined,
                          "ref": Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hvinput25-input"
                              rows="10"
                              type="text"
                              value=""
                            />,
                          },
                          "required": false,
                        }
                      }
                      inputRef={
                        Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hvinput25-input"
                            rows="10"
                            type="text"
                            value=""
                          />,
                        }
                      }
                      multiline={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      readOnly={false}
                      rows={10}
                      showInfo={false}
                      type="text"
                      value=""
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoFocus={false}
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input HvBaseInput-input HvInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                            "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                            "underline": null,
                          }
                        }
                        disabled={false}
                        endAdornment={null}
                        fullWidth={false}
                        id="hvinput25-input"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-controls": undefined,
                            "aria-describedby": undefined,
                            "aria-errormessage": undefined,
                            "aria-invalid": undefined,
                            "aria-label": undefined,
                            "aria-labelledby": undefined,
                            "autoComplete": undefined,
                            "ref": Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hvinput25-input"
                                rows="10"
                                type="text"
                                value=""
                              />,
                            },
                            "required": false,
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hvinput25-input"
                              rows="10"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        multiline={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        readOnly={false}
                        rows={10}
                        showInfo={false}
                        type="text"
                        value=""
                      >
                        <ForwardRef(InputBase)
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                              "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                              "root": "MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                            }
                          }
                          disabled={false}
                          endAdornment={null}
                          fullWidth={false}
                          id="hvinput25-input"
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-controls": undefined,
                              "aria-describedby": undefined,
                              "aria-errormessage": undefined,
                              "aria-invalid": undefined,
                              "aria-label": undefined,
                              "aria-labelledby": undefined,
                              "autoComplete": undefined,
                              "ref": Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hvinput25-input"
                                  rows="10"
                                  type="text"
                                  value=""
                                />,
                              },
                              "required": false,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hvinput25-input"
                                rows="10"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          multiline={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          rows={10}
                          showInfo={false}
                          type="text"
                          value=""
                        >
                          <div
                            className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot"
                            onClick={[Function]}
                            showInfo={false}
                          >
                            <input
                              autoFocus={false}
                              className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              disabled={false}
                              id="hvinput25-input"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              readOnly={false}
                              required={false}
                              rows={10}
                              type="text"
                              value=""
                            />
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(Input)>
                  </WithStyles(ForwardRef(Input))>
                  <div
                    className="HvBaseInput-inputBorderContainer HvInput-inputBorderContainer"
                    role="presentation"
                  />
                </div>
              </HvBaseInput>
            </WithStyles(HvBaseInput)>
          </div>
        </HvFormElement>
      </WithId>
    </WithStyles(WithId)>
  </HvInput>
</WithStyles(HvInput)>
`;

exports[`Input should pass other props to the child input component 1`] = `
<WithStyles(HvInput)
  inputProps={
    Object {
      "maxLength": 250,
    }
  }
>
  <HvInput
    classes={
      Object {
        "adornmentButton": "HvInput-adornmentButton",
        "adornmentsBox": "HvInput-adornmentsBox",
        "description": "HvInput-description",
        "error": "HvInput-error",
        "hasSuggestions": "HvInput-hasSuggestions",
        "icon": "HvInput-icon",
        "iconClear": "HvInput-iconClear",
        "input": "HvInput-input",
        "inputBorderContainer": "HvInput-inputBorderContainer",
        "inputExtension": "HvInput-inputExtension",
        "inputRoot": "HvInput-inputRoot",
        "inputRootDisabled": "HvInput-inputRootDisabled",
        "inputRootFocused": "HvInput-inputRootFocused",
        "inputRootMultiline": "HvInput-inputRootMultiline",
        "label": "HvInput-label",
        "labelContainer": "HvInput-labelContainer",
        "root": "HvInput-root",
        "suggestionList": "HvInput-suggestionList",
        "suggestionsContainer": "HvInput-suggestionsContainer",
      }
    }
    inputProps={
      Object {
        "maxLength": 250,
      }
    }
  >
    <WithStyles(WithId)
      className="HvInput-root"
      disabled={false}
      onBlur={[Function]}
      readOnly={false}
      required={false}
      status="standBy"
      value=""
    >
      <WithId
        className="HvInput-root"
        classes={
          Object {
            "root": "HvFormElement-root",
          }
        }
        disabled={false}
        onBlur={[Function]}
        readOnly={false}
        required={false}
        status="standBy"
        value=""
      >
        <HvFormElement
          className="HvInput-root"
          classes={
            Object {
              "root": "HvFormElement-root",
            }
          }
          disabled={false}
          id="hv-form-element-34"
          onBlur={[Function]}
          readOnly={false}
          required={false}
          status="standBy"
          value=""
        >
          <div
            className="HvInput-root HvFormElement-root"
            id="hv-form-element-34"
            onBlur={[Function]}
          >
            <WithStyles(HvBaseInput)
              autoFocus={false}
              classes={
                Object {
                  "input": "HvInput-input",
                  "inputBorderContainer": "HvInput-inputBorderContainer",
                  "inputRoot": "HvInput-inputRoot",
                  "inputRootDisabled": "HvInput-inputRootDisabled",
                  "inputRootFocused": "HvInput-inputRootFocused",
                  "inputRootMultiline": "HvInput-inputRootMultiline",
                }
              }
              disabled={false}
              endAdornment={null}
              id="hvinput33-input"
              inputProps={
                Object {
                  "aria-controls": undefined,
                  "aria-describedby": undefined,
                  "aria-errormessage": undefined,
                  "aria-invalid": undefined,
                  "aria-label": undefined,
                  "aria-labelledby": undefined,
                  "autoComplete": undefined,
                  "maxLength": 250,
                  "ref": Object {
                    "current": <input
                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                      id="hvinput33-input"
                      maxlength="250"
                      rows="10"
                      type="text"
                      value=""
                    />,
                  },
                }
              }
              inputRef={
                Object {
                  "current": <input
                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                    id="hvinput33-input"
                    maxlength="250"
                    rows="10"
                    type="text"
                    value=""
                  />,
                }
              }
              invalid={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              readOnly={false}
              required={false}
              type="text"
              value=""
            >
              <HvBaseInput
                autoFocus={false}
                classes={
                  Object {
                    "disabled": "HvBaseInput-disabled",
                    "input": "HvBaseInput-input HvInput-input",
                    "inputBorderContainer": "HvBaseInput-inputBorderContainer HvInput-inputBorderContainer",
                    "inputResizable": "HvBaseInput-inputResizable",
                    "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot",
                    "inputRootDisabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                    "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                    "inputRootMultiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                    "invalid": "HvBaseInput-invalid",
                    "resizable": "HvBaseInput-resizable",
                    "root": "HvBaseInput-root",
                  }
                }
                disabled={false}
                endAdornment={null}
                id="hvinput33-input"
                inputProps={
                  Object {
                    "aria-controls": undefined,
                    "aria-describedby": undefined,
                    "aria-errormessage": undefined,
                    "aria-invalid": undefined,
                    "aria-label": undefined,
                    "aria-labelledby": undefined,
                    "autoComplete": undefined,
                    "maxLength": 250,
                    "ref": Object {
                      "current": <input
                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                        id="hvinput33-input"
                        maxlength="250"
                        rows="10"
                        type="text"
                        value=""
                      />,
                    },
                  }
                }
                inputRef={
                  Object {
                    "current": <input
                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                      id="hvinput33-input"
                      maxlength="250"
                      rows="10"
                      type="text"
                      value=""
                    />,
                  }
                }
                invalid={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={false}
                required={false}
                type="text"
                value=""
              >
                <div
                  className="HvBaseInput-root"
                >
                  <WithStyles(ForwardRef(Input))
                    autoFocus={false}
                    classes={
                      Object {
                        "disabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                        "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                        "input": "HvBaseInput-input HvInput-input",
                        "multiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                        "root": "HvBaseInput-inputRoot HvInput-inputRoot",
                      }
                    }
                    disabled={false}
                    endAdornment={null}
                    id="hvinput33-input"
                    inputProps={
                      Object {
                        "aria-controls": undefined,
                        "aria-describedby": undefined,
                        "aria-errormessage": undefined,
                        "aria-invalid": undefined,
                        "aria-label": undefined,
                        "aria-labelledby": undefined,
                        "autoComplete": undefined,
                        "maxLength": 250,
                        "ref": Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hvinput33-input"
                            maxlength="250"
                            rows="10"
                            type="text"
                            value=""
                          />,
                        },
                        "required": false,
                      }
                    }
                    inputRef={
                      Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hvinput33-input"
                          maxlength="250"
                          rows="10"
                          type="text"
                          value=""
                        />,
                      }
                    }
                    multiline={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    readOnly={false}
                    rows={10}
                    type="text"
                    value=""
                  >
                    <ForwardRef(Input)
                      autoFocus={false}
                      classes={
                        Object {
                          "colorSecondary": "MuiInput-colorSecondary",
                          "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input HvBaseInput-input HvInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "marginDense": "MuiInput-marginDense",
                          "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                          "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                          "underline": "MuiInput-underline",
                        }
                      }
                      disableUnderline={true}
                      disabled={false}
                      endAdornment={null}
                      id="hvinput33-input"
                      inputProps={
                        Object {
                          "aria-controls": undefined,
                          "aria-describedby": undefined,
                          "aria-errormessage": undefined,
                          "aria-invalid": undefined,
                          "aria-label": undefined,
                          "aria-labelledby": undefined,
                          "autoComplete": undefined,
                          "maxLength": 250,
                          "ref": Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hvinput33-input"
                              maxlength="250"
                              rows="10"
                              type="text"
                              value=""
                            />,
                          },
                          "required": false,
                        }
                      }
                      inputRef={
                        Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hvinput33-input"
                            maxlength="250"
                            rows="10"
                            type="text"
                            value=""
                          />,
                        }
                      }
                      multiline={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      readOnly={false}
                      rows={10}
                      type="text"
                      value=""
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoFocus={false}
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input HvBaseInput-input HvInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                            "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                            "underline": null,
                          }
                        }
                        disabled={false}
                        endAdornment={null}
                        fullWidth={false}
                        id="hvinput33-input"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-controls": undefined,
                            "aria-describedby": undefined,
                            "aria-errormessage": undefined,
                            "aria-invalid": undefined,
                            "aria-label": undefined,
                            "aria-labelledby": undefined,
                            "autoComplete": undefined,
                            "maxLength": 250,
                            "ref": Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hvinput33-input"
                                maxlength="250"
                                rows="10"
                                type="text"
                                value=""
                              />,
                            },
                            "required": false,
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hvinput33-input"
                              maxlength="250"
                              rows="10"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        multiline={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        readOnly={false}
                        rows={10}
                        type="text"
                        value=""
                      >
                        <ForwardRef(InputBase)
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                              "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                              "root": "MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                            }
                          }
                          disabled={false}
                          endAdornment={null}
                          fullWidth={false}
                          id="hvinput33-input"
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-controls": undefined,
                              "aria-describedby": undefined,
                              "aria-errormessage": undefined,
                              "aria-invalid": undefined,
                              "aria-label": undefined,
                              "aria-labelledby": undefined,
                              "autoComplete": undefined,
                              "maxLength": 250,
                              "ref": Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hvinput33-input"
                                  maxlength="250"
                                  rows="10"
                                  type="text"
                                  value=""
                                />,
                              },
                              "required": false,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hvinput33-input"
                                maxlength="250"
                                rows="10"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          multiline={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          rows={10}
                          type="text"
                          value=""
                        >
                          <div
                            className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot"
                            onClick={[Function]}
                          >
                            <input
                              autoFocus={false}
                              className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              disabled={false}
                              id="hvinput33-input"
                              maxLength={250}
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              readOnly={false}
                              required={false}
                              rows={10}
                              type="text"
                              value=""
                            />
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(Input)>
                  </WithStyles(ForwardRef(Input))>
                  <div
                    className="HvBaseInput-inputBorderContainer HvInput-inputBorderContainer"
                    role="presentation"
                  />
                </div>
              </HvBaseInput>
            </WithStyles(HvBaseInput)>
            <WithStyles(HvWarningText)
              className="HvInput-error"
              disableBorder={true}
              id="hvinput33-error"
            >
              <HvWarningText
                className="HvInput-error"
                classes={
                  Object {
                    "defaultIcon": "HvWarningText-defaultIcon",
                    "hideText": "HvWarningText-hideText",
                    "root": "HvWarningText-root",
                    "show": "HvWarningText-show",
                    "topBorder": "HvWarningText-topBorder",
                    "topGutter": "HvWarningText-topGutter",
                    "warningText": "HvWarningText-warningText",
                  }
                }
                disableBorder={true}
                id="hvinput33-error"
              >
                <div
                  className="HvInput-error HvWarningText-root"
                >
                  <Fail
                    className="HvWarningText-defaultIcon"
                    semantic="sema4"
                  >
                    <HvIconBase
                      className="HvWarningText-defaultIcon"
                      iconSize="S"
                      name="Fail"
                    >
                      <div
                        className="HvWarningText-defaultIcon HvIconBase-root HvIconBase-s"
                        name="Fail"
                      >
                        <svg
                          focusable={false}
                          height={16}
                          viewBox="0 0 16 16"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            className="color0"
                            d="M7.5 4.001h1v6h-1zm0 8h1v-1h-1zM16 8a8 8 0 10-8 8 8 8 0 008-8zm-1 0a7 7 0 11-7-7 7 7 0 017 7z"
                            fill="#C62828"
                          />
                        </svg>
                      </div>
                    </HvIconBase>
                  </Fail>
                  <WithStyles(ForwardRef)
                    aria-atomic="true"
                    aria-live="polite"
                    aria-relevant="additions text"
                    className="HvWarningText-warningText HvWarningText-topGutter"
                    id="hvinput33-error"
                  >
                    <ForwardRef
                      aria-atomic="true"
                      aria-live="polite"
                      aria-relevant="additions text"
                      className="HvWarningText-warningText HvWarningText-topGutter"
                      classes={
                        Object {
                          "3xlTitle": "HvTypography-3xlTitle",
                          "4xlTitle": "HvTypography-4xlTitle",
                          "5xlTitle": "HvTypography-5xlTitle",
                          "disabledText": "HvTypography-disabledText",
                          "highlightText": "HvTypography-highlightText",
                          "lTitle": "HvTypography-lTitle",
                          "link": "HvTypography-link",
                          "mTitle": "HvTypography-mTitle",
                          "noWrap": "HvTypography-noWrap",
                          "normalText": "HvTypography-normalText",
                          "placeholderText": "HvTypography-placeholderText",
                          "root": "HvTypography-root",
                          "sTitle": "HvTypography-sTitle",
                          "sectionTitle": "HvTypography-sectionTitle",
                          "selectedNavText": "HvTypography-selectedNavText",
                          "vizText": "HvTypography-vizText",
                          "vizTextDisabled": "HvTypography-vizTextDisabled",
                          "xlTitle": "HvTypography-xlTitle",
                          "xsInlineLink": "HvTypography-xsInlineLink",
                          "xsTitle": "HvTypography-xsTitle",
                          "xxlTitle": "HvTypography-xxlTitle",
                          "xxsTitle": "HvTypography-xxsTitle",
                        }
                      }
                      id="hvinput33-error"
                    >
                      <p
                        aria-atomic="true"
                        aria-live="polite"
                        aria-relevant="additions text"
                        className="HvWarningText-warningText HvWarningText-topGutter HvTypography-root HvTypography-normalText"
                        id="hvinput33-error"
                      />
                    </ForwardRef>
                  </WithStyles(ForwardRef)>
                </div>
              </HvWarningText>
            </WithStyles(HvWarningText)>
          </div>
        </HvFormElement>
      </WithId>
    </WithStyles(WithId)>
  </HvInput>
</WithStyles(HvInput)>
`;

exports[`Input should render correctly 1`] = `
<WithStyles(HvInput)>
  <HvInput
    classes={
      Object {
        "adornmentButton": "HvInput-adornmentButton",
        "adornmentsBox": "HvInput-adornmentsBox",
        "description": "HvInput-description",
        "error": "HvInput-error",
        "hasSuggestions": "HvInput-hasSuggestions",
        "icon": "HvInput-icon",
        "iconClear": "HvInput-iconClear",
        "input": "HvInput-input",
        "inputBorderContainer": "HvInput-inputBorderContainer",
        "inputExtension": "HvInput-inputExtension",
        "inputRoot": "HvInput-inputRoot",
        "inputRootDisabled": "HvInput-inputRootDisabled",
        "inputRootFocused": "HvInput-inputRootFocused",
        "inputRootMultiline": "HvInput-inputRootMultiline",
        "label": "HvInput-label",
        "labelContainer": "HvInput-labelContainer",
        "root": "HvInput-root",
        "suggestionList": "HvInput-suggestionList",
        "suggestionsContainer": "HvInput-suggestionsContainer",
      }
    }
  >
    <WithStyles(WithId)
      className="HvInput-root"
      disabled={false}
      onBlur={[Function]}
      readOnly={false}
      required={false}
      status="standBy"
      value=""
    >
      <WithId
        className="HvInput-root"
        classes={
          Object {
            "root": "HvFormElement-root",
          }
        }
        disabled={false}
        onBlur={[Function]}
        readOnly={false}
        required={false}
        status="standBy"
        value=""
      >
        <HvFormElement
          className="HvInput-root"
          classes={
            Object {
              "root": "HvFormElement-root",
            }
          }
          disabled={false}
          id="hv-form-element-6"
          onBlur={[Function]}
          readOnly={false}
          required={false}
          status="standBy"
          value=""
        >
          <div
            className="HvInput-root HvFormElement-root"
            id="hv-form-element-6"
            onBlur={[Function]}
          >
            <WithStyles(HvBaseInput)
              autoFocus={false}
              classes={
                Object {
                  "input": "HvInput-input",
                  "inputBorderContainer": "HvInput-inputBorderContainer",
                  "inputRoot": "HvInput-inputRoot",
                  "inputRootDisabled": "HvInput-inputRootDisabled",
                  "inputRootFocused": "HvInput-inputRootFocused",
                  "inputRootMultiline": "HvInput-inputRootMultiline",
                }
              }
              disabled={false}
              endAdornment={null}
              id="hvinput5-input"
              inputProps={
                Object {
                  "aria-controls": undefined,
                  "aria-describedby": undefined,
                  "aria-errormessage": undefined,
                  "aria-invalid": undefined,
                  "aria-label": undefined,
                  "aria-labelledby": undefined,
                  "autoComplete": undefined,
                  "ref": Object {
                    "current": <input
                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                      id="hvinput5-input"
                      rows="10"
                      type="text"
                      value=""
                    />,
                  },
                }
              }
              inputRef={
                Object {
                  "current": <input
                    class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                    id="hvinput5-input"
                    rows="10"
                    type="text"
                    value=""
                  />,
                }
              }
              invalid={false}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              readOnly={false}
              required={false}
              type="text"
              value=""
            >
              <HvBaseInput
                autoFocus={false}
                classes={
                  Object {
                    "disabled": "HvBaseInput-disabled",
                    "input": "HvBaseInput-input HvInput-input",
                    "inputBorderContainer": "HvBaseInput-inputBorderContainer HvInput-inputBorderContainer",
                    "inputResizable": "HvBaseInput-inputResizable",
                    "inputRoot": "HvBaseInput-inputRoot HvInput-inputRoot",
                    "inputRootDisabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                    "inputRootFocused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                    "inputRootMultiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                    "invalid": "HvBaseInput-invalid",
                    "resizable": "HvBaseInput-resizable",
                    "root": "HvBaseInput-root",
                  }
                }
                disabled={false}
                endAdornment={null}
                id="hvinput5-input"
                inputProps={
                  Object {
                    "aria-controls": undefined,
                    "aria-describedby": undefined,
                    "aria-errormessage": undefined,
                    "aria-invalid": undefined,
                    "aria-label": undefined,
                    "aria-labelledby": undefined,
                    "autoComplete": undefined,
                    "ref": Object {
                      "current": <input
                        class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                        id="hvinput5-input"
                        rows="10"
                        type="text"
                        value=""
                      />,
                    },
                  }
                }
                inputRef={
                  Object {
                    "current": <input
                      class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                      id="hvinput5-input"
                      rows="10"
                      type="text"
                      value=""
                    />,
                  }
                }
                invalid={false}
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={false}
                required={false}
                type="text"
                value=""
              >
                <div
                  className="HvBaseInput-root"
                >
                  <WithStyles(ForwardRef(Input))
                    autoFocus={false}
                    classes={
                      Object {
                        "disabled": "HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                        "focused": "HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                        "input": "HvBaseInput-input HvInput-input",
                        "multiline": "HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                        "root": "HvBaseInput-inputRoot HvInput-inputRoot",
                      }
                    }
                    disabled={false}
                    endAdornment={null}
                    id="hvinput5-input"
                    inputProps={
                      Object {
                        "aria-controls": undefined,
                        "aria-describedby": undefined,
                        "aria-errormessage": undefined,
                        "aria-invalid": undefined,
                        "aria-label": undefined,
                        "aria-labelledby": undefined,
                        "autoComplete": undefined,
                        "ref": Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hvinput5-input"
                            rows="10"
                            type="text"
                            value=""
                          />,
                        },
                        "required": false,
                      }
                    }
                    inputRef={
                      Object {
                        "current": <input
                          class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                          id="hvinput5-input"
                          rows="10"
                          type="text"
                          value=""
                        />,
                      }
                    }
                    multiline={false}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    readOnly={false}
                    rows={10}
                    type="text"
                    value=""
                  >
                    <ForwardRef(Input)
                      autoFocus={false}
                      classes={
                        Object {
                          "colorSecondary": "MuiInput-colorSecondary",
                          "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                          "formControl": "MuiInput-formControl",
                          "fullWidth": "MuiInput-fullWidth",
                          "input": "MuiInput-input HvBaseInput-input HvInput-input",
                          "inputMarginDense": "MuiInput-inputMarginDense",
                          "inputMultiline": "MuiInput-inputMultiline",
                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                          "marginDense": "MuiInput-marginDense",
                          "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                          "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                          "underline": "MuiInput-underline",
                        }
                      }
                      disableUnderline={true}
                      disabled={false}
                      endAdornment={null}
                      id="hvinput5-input"
                      inputProps={
                        Object {
                          "aria-controls": undefined,
                          "aria-describedby": undefined,
                          "aria-errormessage": undefined,
                          "aria-invalid": undefined,
                          "aria-label": undefined,
                          "aria-labelledby": undefined,
                          "autoComplete": undefined,
                          "ref": Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hvinput5-input"
                              rows="10"
                              type="text"
                              value=""
                            />,
                          },
                          "required": false,
                        }
                      }
                      inputRef={
                        Object {
                          "current": <input
                            class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                            id="hvinput5-input"
                            rows="10"
                            type="text"
                            value=""
                          />,
                        }
                      }
                      multiline={false}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      readOnly={false}
                      rows={10}
                      type="text"
                      value=""
                    >
                      <WithStyles(ForwardRef(InputBase))
                        autoFocus={false}
                        classes={
                          Object {
                            "colorSecondary": "MuiInput-colorSecondary",
                            "disabled": "Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                            "formControl": "MuiInput-formControl",
                            "fullWidth": "MuiInput-fullWidth",
                            "input": "MuiInput-input HvBaseInput-input HvInput-input",
                            "inputMarginDense": "MuiInput-inputMarginDense",
                            "inputMultiline": "MuiInput-inputMultiline",
                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                            "marginDense": "MuiInput-marginDense",
                            "multiline": "MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                            "root": "MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                            "underline": null,
                          }
                        }
                        disabled={false}
                        endAdornment={null}
                        fullWidth={false}
                        id="hvinput5-input"
                        inputComponent="input"
                        inputProps={
                          Object {
                            "aria-controls": undefined,
                            "aria-describedby": undefined,
                            "aria-errormessage": undefined,
                            "aria-invalid": undefined,
                            "aria-label": undefined,
                            "aria-labelledby": undefined,
                            "autoComplete": undefined,
                            "ref": Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hvinput5-input"
                                rows="10"
                                type="text"
                                value=""
                              />,
                            },
                            "required": false,
                          }
                        }
                        inputRef={
                          Object {
                            "current": <input
                              class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              id="hvinput5-input"
                              rows="10"
                              type="text"
                              value=""
                            />,
                          }
                        }
                        multiline={false}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        onKeyDown={[Function]}
                        readOnly={false}
                        rows={10}
                        type="text"
                        value=""
                      >
                        <ForwardRef(InputBase)
                          autoFocus={false}
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled HvBaseInput-inputRootDisabled HvInput-inputRootDisabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused HvBaseInput-inputRootFocused HvInput-inputRootFocused",
                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                              "input": "MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiInput-multiline HvBaseInput-inputRootMultiline HvInput-inputRootMultiline",
                              "root": "MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot",
                            }
                          }
                          disabled={false}
                          endAdornment={null}
                          fullWidth={false}
                          id="hvinput5-input"
                          inputComponent="input"
                          inputProps={
                            Object {
                              "aria-controls": undefined,
                              "aria-describedby": undefined,
                              "aria-errormessage": undefined,
                              "aria-invalid": undefined,
                              "aria-label": undefined,
                              "aria-labelledby": undefined,
                              "autoComplete": undefined,
                              "ref": Object {
                                "current": <input
                                  class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                  id="hvinput5-input"
                                  rows="10"
                                  type="text"
                                  value=""
                                />,
                              },
                              "required": false,
                            }
                          }
                          inputRef={
                            Object {
                              "current": <input
                                class="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                                id="hvinput5-input"
                                rows="10"
                                type="text"
                                value=""
                              />,
                            }
                          }
                          multiline={false}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          readOnly={false}
                          rows={10}
                          type="text"
                          value=""
                        >
                          <div
                            className="MuiInputBase-root MuiInput-root HvBaseInput-inputRoot HvInput-inputRoot"
                            onClick={[Function]}
                          >
                            <input
                              autoFocus={false}
                              className="MuiInputBase-input MuiInput-input HvBaseInput-input HvInput-input"
                              disabled={false}
                              id="hvinput5-input"
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              readOnly={false}
                              required={false}
                              rows={10}
                              type="text"
                              value=""
                            />
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(Input)>
                  </WithStyles(ForwardRef(Input))>
                  <div
                    className="HvBaseInput-inputBorderContainer HvInput-inputBorderContainer"
                    role="presentation"
                  />
                </div>
              </HvBaseInput>
            </WithStyles(HvBaseInput)>
          </div>
        </HvFormElement>
      </WithId>
    </WithStyles(WithId)>
  </HvInput>
</WithStyles(HvInput)>
`;
