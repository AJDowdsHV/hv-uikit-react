// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<List /> Multi selection should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  router={null}
  theme={null}
  uiKitTheme="dawn"
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1270,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "hv": Object {
          "deprecated": Object {
            "palette": Object {
              "accent": Object {},
              "atmosphere": Object {},
              "base": Object {},
              "semantic": Object {},
              "support": Object {},
            },
            "typography": Object {
              "disabledText": Object {},
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {},
                "polarizes": Object {},
                "sequential": Object {},
                "undefinedState": Object {},
              },
            },
          },
          "name": "dawn",
          "palette": Object {
            "accent": Object {
              "acce0": "#FFFFFF",
              "acce1": "#414141",
              "acce2": "#146BD2",
              "acce2h": "#4389DB",
              "acce3": "#CC0000",
            },
            "atmosphere": Object {
              "atmo1": "#FFFFFF",
              "atmo2": "#F9F9F9",
              "atmo3": "#F5F5F5",
              "atmo4": "#F0F0F0",
              "atmo5": "#DEDEDE",
              "atmo6": "#BCBCBC",
              "atmo7": "#999999",
            },
            "base": Object {
              "base1": "#FFFFFF",
              "base2": "#414141",
            },
            "semantic": Object {
              "sema1": "#63A621",
              "sema10": "#EF9A9A",
              "sema11": "#E57373",
              "sema12": "#EF5350",
              "sema13": "#E53935",
              "sema14": "#C62828",
              "sema15": "#80DEEA",
              "sema16": "#4DD0E1",
              "sema17": "#26C6DA",
              "sema18": "#00ACC1",
              "sema19": "#00838F",
              "sema2": "#72CCCB",
              "sema3": "#E68C17",
              "sema4": "#FF5252",
              "sema5": "#C51162",
              "sema6": "#AA00FF",
              "sema7": "#D3E3F6",
              "sema8": "#DFECD1",
              "sema9": "#F5D8D8",
            },
            "support": Object {
              "supp1": "#0F8B8D",
              "supp2": "#734B6D",
              "supp3": "#4E7599",
              "supp4": "#C19C31",
              "supp5": "#546B6B",
            },
          },
          "spacing": Object {
            "lg": "60",
            "md": "30",
            "sm": "20",
            "xl": "90",
            "xs": "10",
          },
          "type": "light",
          "typography": Object {
            "3xlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "4xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "5xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "disabledButtonText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "disabledText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "highlightText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "infoText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "inlineLink": Object {
              "color": "#146BD2",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "lTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "labelText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "mTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "normalText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "placeholderText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "sLink": Object {
              "color": "#146BD2",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "selectedNavText": Object {
              "color": "#CC0000",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "selectedText": Object {
              "background": "#414141",
              "color": "#F9F9F9",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "vizText": Object {
              "color": "#414141",
              "fontSize": "10px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "15px",
            },
            "xlTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "xsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
            "xxlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "xxsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
          },
          "viz": Object {
            "palette": Object {
              "categorical": Object {
                "cviz1": "#2DB3E0",
                "cviz10": "#419393",
                "cviz11": "#58C9DD",
                "cviz12": "#F8C189",
                "cviz13": "#528BBF",
                "cviz14": "#DE64BD",
                "cviz15": "#73BF9C",
                "cviz16": "#9672C1",
                "cviz17": "#EB95AF",
                "cviz18": "#646A98",
                "cviz19": "#D88136",
                "cviz2": "#FF990D",
                "cviz20": "#309B59",
                "cviz3": "#D31F6B",
                "cviz4": "#FFD00A",
                "cviz5": "#18C38A",
                "cviz6": "#098CB2",
                "cviz7": "#EA5B86",
                "cviz8": "#9B469B",
                "cviz9": "#F4763D",
              },
              "polarizes": Object {
                "cviz21": "#869F1E",
                "cviz22": "#A4991C",
                "cviz23": "#C4931A",
                "cviz24": "#E68C17",
                "cviz25": "#F27034",
                "cviz26": "#FF5252",
                "cviz27": "#EC3D57",
                "cviz28": "#D8265D",
                "sema1": "#63A621",
                "sema5": "#C51162",
              },
              "sequential": Object {
                "cviz1": "#2DB3E0",
                "cviz1_100": "#E3F1F6",
                "cviz1_200": "#CFEAF3",
                "cviz1_300": "#BAE3F3",
                "cviz1_400": "#A6DCEE",
                "cviz1_500": "#92D5EC",
                "cviz1_600": "#7ECEE9",
                "cviz1_700": "#69C7E7",
                "cviz1_800": "#55C0E4",
                "cviz1_900": "#40B9E2",
              },
              "undefinedState": Object {
                "atmo5": "#DEDEDE",
              },
            },
          },
        },
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiAppBar": Object {
            "colorDefault": Object {
              "backgroundColor": "#FFFFFF",
              "contrastText": "#414141",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "height": "50px",
              },
              "borderTop": "4px solid #CC0000",
            },
          },
          "MuiIconButton": Object {
            "root": Object {
              "&:focus": Object {
                "outlineColor": "Highlight",
                "outlineOffset": -2,
                "outlineStyle": "auto",
                "outlineWidth": 4,
              },
              "&:hover": Object {
                "backgroundColor": "#F0F0F0",
              },
              "borderRadius": 0,
              "padding": 0,
            },
          },
          "MuiToolbar": Object {
            "dense": Object {
              "minHeight": "46px",
            },
            "gutters": Object {
              "@media (min-width:600px)": Object {
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "paddingLeft": "20px",
              "paddingRight": "20px",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "minHeight": "46px",
              },
              "alignItems": "center",
            },
          },
        },
        "palette": Object {
          "acce0": "#FFFFFF",
          "acce1": "#414141",
          "acce2": "#146BD2",
          "acce2h": "#4389DB",
          "acce3": "#CC0000",
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "atmo1": "#FFFFFF",
          "atmo2": "#F9F9F9",
          "atmo3": "#F5F5F5",
          "atmo4": "#F0F0F0",
          "atmo5": "#DEDEDE",
          "atmo6": "#BCBCBC",
          "atmo7": "#999999",
          "augmentColor": [Function],
          "background": Object {
            "default": "#F9F9F9",
            "paper": "#fff",
          },
          "base1": "#FFFFFF",
          "base2": "#414141",
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(14, 74, 147)",
            "light": "#4389DB",
            "main": "#146BD2",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "rgb(45, 45, 45)",
            "light": "#999999",
            "main": "#414141",
          },
          "sema1": "#63A621",
          "sema10": "#EF9A9A",
          "sema11": "#E57373",
          "sema12": "#EF5350",
          "sema13": "#E53935",
          "sema14": "#C62828",
          "sema15": "#80DEEA",
          "sema16": "#4DD0E1",
          "sema17": "#26C6DA",
          "sema18": "#00ACC1",
          "sema19": "#00838F",
          "sema2": "#72CCCB",
          "sema3": "#E68C17",
          "sema4": "#FF5252",
          "sema5": "#C51162",
          "sema6": "#AA00FF",
          "sema7": "#D3E3F6",
          "sema8": "#DFECD1",
          "sema9": "#F5D8D8",
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "supp1": "#0F8B8D",
          "supp2": "#734B6D",
          "supp3": "#4E7599",
          "supp4": "#C19C31",
          "supp5": "#546B6B",
          "text": Object {
            "disabled": "#999999",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "#414141",
            "secondary": "rgba(0, 0, 0, 0.54)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {
          "MuiButtonBase": Object {
            "disableRipple": true,
          },
          "MuiInput": Object {
            "disableUnderline": true,
          },
        },
        "shadows": Array [
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
        ],
        "shape": Object {
          "borderRadius": 0,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "body2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "button": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": Array [
            "'Open Sans'",
            "Arial",
            "Helvetica",
            "sans-serif",
          ],
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h3": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h4": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h5": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "subtitle2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "12px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "16px",
          },
          "suppressDeprecationWarnings": true,
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <WithStyles(CssBaseline)>
      <CssBaseline
        classes={Object {}}
      />
    </WithStyles(CssBaseline)>
    <WithStyles(List)
      condensed={false}
      hasTooltips={false}
      id=""
      labels={
        Object {
          "selectAll": "All",
          "selectionConjunction": "of",
        }
      }
      multiSelect={true}
      onChange={
        [MockFunction] {
          "calls": Array [
            Array [
              Array [
                Object {
                  "label": "Value 1",
                  "selected": true,
                },
                Object {
                  "label": "Value 2",
                  "selected": false,
                },
                Object {
                  "label": "Value 3",
                  "selected": false,
                },
              ],
            ],
            Array [
              Array [
                Object {
                  "label": "Value 1",
                  "selected": false,
                },
                Object {
                  "label": "Value 2",
                  "selected": true,
                },
                Object {
                  "label": "Value 3",
                  "selected": false,
                },
              ],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      onClick={[Function]}
      selectDefault={false}
      selectable={true}
      showSelectAll={true}
      singleSelectionToggle={true}
      useRouter={false}
      useSelector={false}
      values={
        Array [
          Object {
            "label": "Value 1",
            "selected": true,
          },
          Object {
            "label": "Value 2",
          },
          Object {
            "label": "Value 3",
            "selected": true,
          },
        ]
      }
    >
      <List
        classes={
          Object {
            "box": "HvList-box-396",
            "condensed": "HvList-condensed-385",
            "disabled": "HvList-disabled-390",
            "label": "HvList-label-392",
            "labelIconLeftPadding": "HvList-labelIconLeftPadding-393",
            "listItem": "HvList-listItem-384",
            "noIconLeftPadding": "HvList-noIconLeftPadding-394",
            "root": "HvList-root-383",
            "selectAll": "HvList-selectAll-389",
            "selected": "HvList-selected-388",
            "selector": "HvList-selector-386",
            "selectorContainer": "HvList-selectorContainer-387",
            "textDisabled": "HvList-textDisabled-391",
            "truncate": "HvList-truncate-395",
          }
        }
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={true}
        onChange={
          [MockFunction] {
            "calls": Array [
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        onClick={[Function]}
        selectDefault={false}
        selectable={true}
        showSelectAll={true}
        singleSelectionToggle={true}
        useRouter={false}
        useSelector={false}
        values={
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ]
        }
      >
        <div>
          <ul
            aria-multiselectable={true}
            className="HvList-root-383"
            id="hv-list-8"
            role="listbox"
          >
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": 0,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="0"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      aria-multiselectable="true"
                      class="HvList-root-383"
                      id="hv-list-8"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                        id="hv-list-8-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <p
                          class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvList-listItem-384 Focus-root-397 Focus-focusDisabled-400"
                        id="hv-list-8-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-415 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                        id="hv-list-8-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        >
                          Value 3
                        </p>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={true}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-399",
                    "externalReference": "Focus-externalReference-402",
                    "falseFocus": "Focus-falseFocus-403",
                    "focusDisabled": "Focus-focusDisabled-400",
                    "focused": "Focus-focused-401",
                    "root": "Focus-root-397",
                    "selected": "Focus-selected-398",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root-383"
                        id="hv-list-8"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                          id="hv-list-8-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem-384 Focus-root-397 Focus-focusDisabled-400"
                          id="hv-list-8-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-415 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                          id="hv-list-8-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={true}
                    className="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                    id="hv-list-8-item-0"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={true}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        component={null}
                        paragraph={false}
                        variant="selectedText"
                      >
                        <ForwardRef
                          className="HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-406",
                              "4xlTitle": "HvTypography-4xlTitle-405",
                              "5xlTitle": "HvTypography-5xlTitle-404",
                              "baseFontFamily": "HvTypography-baseFontFamily-427",
                              "disabledButtonText": "HvTypography-disabledButtonText-418",
                              "disabledText": "HvTypography-disabledText-425",
                              "highlightText": "HvTypography-highlightText-414",
                              "infoText": "HvTypography-infoText-423",
                              "inlineLink": "HvTypography-inlineLink-417",
                              "lTitle": "HvTypography-lTitle-409",
                              "labelText": "HvTypography-labelText-422",
                              "mTitle": "HvTypography-mTitle-410",
                              "margin": "HvTypography-margin-428",
                              "normalText": "HvTypography-normalText-415",
                              "placeholderText": "HvTypography-placeholderText-419",
                              "sLink": "HvTypography-sLink-424",
                              "sText": "HvTypography-sText-421",
                              "sTitle": "HvTypography-sTitle-411",
                              "selectedNavText": "HvTypography-selectedNavText-420",
                              "selectedText": "HvTypography-selectedText-416",
                              "vizText": "HvTypography-vizText-426",
                              "xlTitle": "HvTypography-xlTitle-408",
                              "xsTitle": "HvTypography-xsTitle-412",
                              "xxlTitle": "HvTypography-xxlTitle-407",
                              "xxsTitle": "HvTypography-xxsTitle-413",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="selectedText"
                        >
                          <p
                            className="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 1
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="1"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      aria-multiselectable="true"
                      class="HvList-root-383"
                      id="hv-list-8"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                        id="hv-list-8-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <p
                          class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvList-listItem-384 Focus-root-397 Focus-focusDisabled-400"
                        id="hv-list-8-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-415 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                        id="hv-list-8-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        >
                          Value 3
                        </p>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-399",
                    "externalReference": "Focus-externalReference-402",
                    "falseFocus": "Focus-falseFocus-403",
                    "focusDisabled": "Focus-focusDisabled-400",
                    "focused": "Focus-focused-401",
                    "root": "Focus-root-397",
                    "selected": "Focus-selected-398",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root-383"
                        id="hv-list-8"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                          id="hv-list-8-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem-384 Focus-root-397 Focus-focusDisabled-400"
                          id="hv-list-8-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-415 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                          id="hv-list-8-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={false}
                    className="HvList-listItem-384 Focus-root-397 Focus-focusDisabled-400"
                    id="hv-list-8-item-1"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-392 HvList-truncate-395"
                        component={null}
                        paragraph={false}
                        variant="normalText"
                      >
                        <ForwardRef
                          className="HvList-label-392 HvList-truncate-395"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-406",
                              "4xlTitle": "HvTypography-4xlTitle-405",
                              "5xlTitle": "HvTypography-5xlTitle-404",
                              "baseFontFamily": "HvTypography-baseFontFamily-427",
                              "disabledButtonText": "HvTypography-disabledButtonText-418",
                              "disabledText": "HvTypography-disabledText-425",
                              "highlightText": "HvTypography-highlightText-414",
                              "infoText": "HvTypography-infoText-423",
                              "inlineLink": "HvTypography-inlineLink-417",
                              "lTitle": "HvTypography-lTitle-409",
                              "labelText": "HvTypography-labelText-422",
                              "mTitle": "HvTypography-mTitle-410",
                              "margin": "HvTypography-margin-428",
                              "normalText": "HvTypography-normalText-415",
                              "placeholderText": "HvTypography-placeholderText-419",
                              "sLink": "HvTypography-sLink-424",
                              "sText": "HvTypography-sText-421",
                              "sTitle": "HvTypography-sTitle-411",
                              "selectedNavText": "HvTypography-selectedNavText-420",
                              "selectedText": "HvTypography-selectedText-416",
                              "vizText": "HvTypography-vizText-426",
                              "xlTitle": "HvTypography-xlTitle-408",
                              "xsTitle": "HvTypography-xsTitle-412",
                              "xxlTitle": "HvTypography-xxlTitle-407",
                              "xxsTitle": "HvTypography-xxsTitle-413",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="normalText"
                        >
                          <p
                            className="HvTypography-normalText-415 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395"
                          >
                            Value 2
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="2"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      aria-multiselectable="true"
                      class="HvList-root-383"
                      id="hv-list-8"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                        id="hv-list-8-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <p
                          class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvList-listItem-384 Focus-root-397 Focus-focusDisabled-400"
                        id="hv-list-8-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-415 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                        id="hv-list-8-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        >
                          Value 3
                        </p>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={true}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-399",
                    "externalReference": "Focus-externalReference-402",
                    "falseFocus": "Focus-falseFocus-403",
                    "focusDisabled": "Focus-focusDisabled-400",
                    "focused": "Focus-focused-401",
                    "root": "Focus-root-397",
                    "selected": "Focus-selected-398",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root-383"
                        id="hv-list-8"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                          id="hv-list-8-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem-384 Focus-root-397 Focus-focusDisabled-400"
                          id="hv-list-8-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-415 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                          id="hv-list-8-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={true}
                    className="HvList-listItem-384 HvList-selected-388 Focus-root-397 Focus-selected-398 Focus-focusDisabled-400"
                    id="hv-list-8-item-2"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={true}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-392 HvList-truncate-395 HvList-selected-388"
                        component={null}
                        paragraph={false}
                        variant="selectedText"
                      >
                        <ForwardRef
                          className="HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-406",
                              "4xlTitle": "HvTypography-4xlTitle-405",
                              "5xlTitle": "HvTypography-5xlTitle-404",
                              "baseFontFamily": "HvTypography-baseFontFamily-427",
                              "disabledButtonText": "HvTypography-disabledButtonText-418",
                              "disabledText": "HvTypography-disabledText-425",
                              "highlightText": "HvTypography-highlightText-414",
                              "infoText": "HvTypography-infoText-423",
                              "inlineLink": "HvTypography-inlineLink-417",
                              "lTitle": "HvTypography-lTitle-409",
                              "labelText": "HvTypography-labelText-422",
                              "mTitle": "HvTypography-mTitle-410",
                              "margin": "HvTypography-margin-428",
                              "normalText": "HvTypography-normalText-415",
                              "placeholderText": "HvTypography-placeholderText-419",
                              "sLink": "HvTypography-sLink-424",
                              "sText": "HvTypography-sText-421",
                              "sTitle": "HvTypography-sTitle-411",
                              "selectedNavText": "HvTypography-selectedNavText-420",
                              "selectedText": "HvTypography-selectedText-416",
                              "vizText": "HvTypography-vizText-426",
                              "xlTitle": "HvTypography-xlTitle-408",
                              "xsTitle": "HvTypography-xsTitle-412",
                              "xxlTitle": "HvTypography-xxlTitle-407",
                              "xxsTitle": "HvTypography-xxsTitle-413",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="selectedText"
                        >
                          <p
                            className="HvTypography-selectedText-416 HvTypography-baseFontFamily-427 HvTypography-margin-428 HvList-label-392 HvList-truncate-395 HvList-selected-388"
                          >
                            Value 3
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
          </ul>
        </div>
      </List>
    </WithStyles(List)>
  </ThemeProvider>
</HvProvider>
`;

exports[`<List /> Multi selection with selectors should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  router={null}
  theme={null}
  uiKitTheme="dawn"
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1270,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "hv": Object {
          "deprecated": Object {
            "palette": Object {
              "accent": Object {},
              "atmosphere": Object {},
              "base": Object {},
              "semantic": Object {},
              "support": Object {},
            },
            "typography": Object {
              "disabledText": Object {},
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {},
                "polarizes": Object {},
                "sequential": Object {},
                "undefinedState": Object {},
              },
            },
          },
          "name": "dawn",
          "palette": Object {
            "accent": Object {
              "acce0": "#FFFFFF",
              "acce1": "#414141",
              "acce2": "#146BD2",
              "acce2h": "#4389DB",
              "acce3": "#CC0000",
            },
            "atmosphere": Object {
              "atmo1": "#FFFFFF",
              "atmo2": "#F9F9F9",
              "atmo3": "#F5F5F5",
              "atmo4": "#F0F0F0",
              "atmo5": "#DEDEDE",
              "atmo6": "#BCBCBC",
              "atmo7": "#999999",
            },
            "base": Object {
              "base1": "#FFFFFF",
              "base2": "#414141",
            },
            "semantic": Object {
              "sema1": "#63A621",
              "sema10": "#EF9A9A",
              "sema11": "#E57373",
              "sema12": "#EF5350",
              "sema13": "#E53935",
              "sema14": "#C62828",
              "sema15": "#80DEEA",
              "sema16": "#4DD0E1",
              "sema17": "#26C6DA",
              "sema18": "#00ACC1",
              "sema19": "#00838F",
              "sema2": "#72CCCB",
              "sema3": "#E68C17",
              "sema4": "#FF5252",
              "sema5": "#C51162",
              "sema6": "#AA00FF",
              "sema7": "#D3E3F6",
              "sema8": "#DFECD1",
              "sema9": "#F5D8D8",
            },
            "support": Object {
              "supp1": "#0F8B8D",
              "supp2": "#734B6D",
              "supp3": "#4E7599",
              "supp4": "#C19C31",
              "supp5": "#546B6B",
            },
          },
          "spacing": Object {
            "lg": "60",
            "md": "30",
            "sm": "20",
            "xl": "90",
            "xs": "10",
          },
          "type": "light",
          "typography": Object {
            "3xlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "4xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "5xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "disabledButtonText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "disabledText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "highlightText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "infoText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "inlineLink": Object {
              "color": "#146BD2",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "lTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "labelText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "mTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "normalText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "placeholderText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "sLink": Object {
              "color": "#146BD2",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "selectedNavText": Object {
              "color": "#CC0000",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "selectedText": Object {
              "background": "#414141",
              "color": "#F9F9F9",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "vizText": Object {
              "color": "#414141",
              "fontSize": "10px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "15px",
            },
            "xlTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "xsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
            "xxlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "xxsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
          },
          "viz": Object {
            "palette": Object {
              "categorical": Object {
                "cviz1": "#2DB3E0",
                "cviz10": "#419393",
                "cviz11": "#58C9DD",
                "cviz12": "#F8C189",
                "cviz13": "#528BBF",
                "cviz14": "#DE64BD",
                "cviz15": "#73BF9C",
                "cviz16": "#9672C1",
                "cviz17": "#EB95AF",
                "cviz18": "#646A98",
                "cviz19": "#D88136",
                "cviz2": "#FF990D",
                "cviz20": "#309B59",
                "cviz3": "#D31F6B",
                "cviz4": "#FFD00A",
                "cviz5": "#18C38A",
                "cviz6": "#098CB2",
                "cviz7": "#EA5B86",
                "cviz8": "#9B469B",
                "cviz9": "#F4763D",
              },
              "polarizes": Object {
                "cviz21": "#869F1E",
                "cviz22": "#A4991C",
                "cviz23": "#C4931A",
                "cviz24": "#E68C17",
                "cviz25": "#F27034",
                "cviz26": "#FF5252",
                "cviz27": "#EC3D57",
                "cviz28": "#D8265D",
                "sema1": "#63A621",
                "sema5": "#C51162",
              },
              "sequential": Object {
                "cviz1": "#2DB3E0",
                "cviz1_100": "#E3F1F6",
                "cviz1_200": "#CFEAF3",
                "cviz1_300": "#BAE3F3",
                "cviz1_400": "#A6DCEE",
                "cviz1_500": "#92D5EC",
                "cviz1_600": "#7ECEE9",
                "cviz1_700": "#69C7E7",
                "cviz1_800": "#55C0E4",
                "cviz1_900": "#40B9E2",
              },
              "undefinedState": Object {
                "atmo5": "#DEDEDE",
              },
            },
          },
        },
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiAppBar": Object {
            "colorDefault": Object {
              "backgroundColor": "#FFFFFF",
              "contrastText": "#414141",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "height": "50px",
              },
              "borderTop": "4px solid #CC0000",
            },
          },
          "MuiIconButton": Object {
            "root": Object {
              "&:focus": Object {
                "outlineColor": "Highlight",
                "outlineOffset": -2,
                "outlineStyle": "auto",
                "outlineWidth": 4,
              },
              "&:hover": Object {
                "backgroundColor": "#F0F0F0",
              },
              "borderRadius": 0,
              "padding": 0,
            },
          },
          "MuiToolbar": Object {
            "dense": Object {
              "minHeight": "46px",
            },
            "gutters": Object {
              "@media (min-width:600px)": Object {
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "paddingLeft": "20px",
              "paddingRight": "20px",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "minHeight": "46px",
              },
              "alignItems": "center",
            },
          },
        },
        "palette": Object {
          "acce0": "#FFFFFF",
          "acce1": "#414141",
          "acce2": "#146BD2",
          "acce2h": "#4389DB",
          "acce3": "#CC0000",
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "atmo1": "#FFFFFF",
          "atmo2": "#F9F9F9",
          "atmo3": "#F5F5F5",
          "atmo4": "#F0F0F0",
          "atmo5": "#DEDEDE",
          "atmo6": "#BCBCBC",
          "atmo7": "#999999",
          "augmentColor": [Function],
          "background": Object {
            "default": "#F9F9F9",
            "paper": "#fff",
          },
          "base1": "#FFFFFF",
          "base2": "#414141",
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(14, 74, 147)",
            "light": "#4389DB",
            "main": "#146BD2",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "rgb(45, 45, 45)",
            "light": "#999999",
            "main": "#414141",
          },
          "sema1": "#63A621",
          "sema10": "#EF9A9A",
          "sema11": "#E57373",
          "sema12": "#EF5350",
          "sema13": "#E53935",
          "sema14": "#C62828",
          "sema15": "#80DEEA",
          "sema16": "#4DD0E1",
          "sema17": "#26C6DA",
          "sema18": "#00ACC1",
          "sema19": "#00838F",
          "sema2": "#72CCCB",
          "sema3": "#E68C17",
          "sema4": "#FF5252",
          "sema5": "#C51162",
          "sema6": "#AA00FF",
          "sema7": "#D3E3F6",
          "sema8": "#DFECD1",
          "sema9": "#F5D8D8",
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "supp1": "#0F8B8D",
          "supp2": "#734B6D",
          "supp3": "#4E7599",
          "supp4": "#C19C31",
          "supp5": "#546B6B",
          "text": Object {
            "disabled": "#999999",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "#414141",
            "secondary": "rgba(0, 0, 0, 0.54)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {
          "MuiButtonBase": Object {
            "disableRipple": true,
          },
          "MuiInput": Object {
            "disableUnderline": true,
          },
        },
        "shadows": Array [
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
        ],
        "shape": Object {
          "borderRadius": 0,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "body2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "button": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": Array [
            "'Open Sans'",
            "Arial",
            "Helvetica",
            "sans-serif",
          ],
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h3": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h4": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h5": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "subtitle2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "12px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "16px",
          },
          "suppressDeprecationWarnings": true,
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <WithStyles(CssBaseline)>
      <CssBaseline
        classes={Object {}}
      />
    </WithStyles(CssBaseline)>
    <WithStyles(List)
      condensed={false}
      hasTooltips={false}
      id=""
      labels={
        Object {
          "selectAll": "All",
          "selectionConjunction": "of",
        }
      }
      multiSelect={true}
      onChange={
        [MockFunction] {
          "calls": Array [
            Array [
              Array [
                Object {
                  "label": "Value 1",
                  "selected": true,
                },
                Object {
                  "label": "Value 2",
                  "selected": false,
                },
                Object {
                  "label": "Value 3",
                  "selected": false,
                },
              ],
            ],
            Array [
              Array [
                Object {
                  "label": "Value 1",
                  "selected": false,
                },
                Object {
                  "label": "Value 2",
                  "selected": true,
                },
                Object {
                  "label": "Value 3",
                  "selected": false,
                },
              ],
            ],
            Array [
              Array [
                Object {
                  "label": "Value 1",
                  "selected": true,
                },
                Object {
                  "label": "Value 2",
                  "selected": true,
                },
                Object {
                  "label": "Value 3",
                  "selected": true,
                },
              ],
            ],
            Array [
              Array [
                Object {
                  "label": "Value 1",
                  "selected": false,
                },
                Object {
                  "label": "Value 2",
                  "selected": false,
                },
                Object {
                  "label": "Value 3",
                  "selected": true,
                },
              ],
            ],
            Array [
              Array [
                Object {
                  "label": "Value 1",
                  "selected": false,
                },
                Object {
                  "label": "Value 2",
                  "selected": false,
                },
                Object {
                  "label": "Value 3",
                  "selected": false,
                },
              ],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      onClick={[Function]}
      selectDefault={false}
      selectable={true}
      showSelectAll={true}
      singleSelectionToggle={true}
      useRouter={false}
      useSelector={true}
      values={
        Array [
          Object {
            "label": "Value 1",
            "selected": true,
          },
          Object {
            "label": "Value 2",
          },
          Object {
            "label": "Value 3",
            "selected": true,
          },
        ]
      }
    >
      <List
        classes={
          Object {
            "box": "HvList-box-672",
            "condensed": "HvList-condensed-661",
            "disabled": "HvList-disabled-666",
            "label": "HvList-label-668",
            "labelIconLeftPadding": "HvList-labelIconLeftPadding-669",
            "listItem": "HvList-listItem-660",
            "noIconLeftPadding": "HvList-noIconLeftPadding-670",
            "root": "HvList-root-659",
            "selectAll": "HvList-selectAll-665",
            "selected": "HvList-selected-664",
            "selector": "HvList-selector-662",
            "selectorContainer": "HvList-selectorContainer-663",
            "textDisabled": "HvList-textDisabled-667",
            "truncate": "HvList-truncate-671",
          }
        }
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={true}
        onChange={
          [MockFunction] {
            "calls": Array [
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": true,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": true,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": true,
                  },
                ],
              ],
              Array [
                Array [
                  Object {
                    "label": "Value 1",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 2",
                    "selected": false,
                  },
                  Object {
                    "label": "Value 3",
                    "selected": false,
                  },
                ],
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          }
        }
        onClick={[Function]}
        selectDefault={false}
        selectable={true}
        showSelectAll={true}
        singleSelectionToggle={true}
        useRouter={false}
        useSelector={true}
        values={
          Array [
            Object {
              "label": "Value 1",
              "selected": true,
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
              "selected": true,
            },
          ]
        }
      >
        <div>
          <WithStyles(HvCheckbox)
            checked={false}
            className="HvList-selectAll-665"
            classes={
              Object {
                "container": "HvList-selectorContainer-663",
              }
            }
            disabled={false}
            indeterminate={true}
            label="2 of 3"
            labelPlacement="end"
            onChange={[Function]}
            value=""
          >
            <HvCheckbox
              checked={false}
              className="HvList-selectAll-665"
              classes={
                Object {
                  "checkBox": "HvCheckBox-checkBox-679",
                  "container": "HvCheckBox-container-673 HvList-selectorContainer-663",
                  "disableFocus": "HvCheckBox-disableFocus-674",
                  "icon": "HvCheckBox-icon-680",
                  "labelDisabled": "HvCheckBox-labelDisabled-676",
                  "labelEnd": "HvCheckBox-labelEnd-677",
                  "labelStart": "HvCheckBox-labelStart-678",
                  "labelTypography": "HvCheckBox-labelTypography-675",
                }
              }
              disabled={false}
              indeterminate={true}
              label="2 of 3"
              labelPlacement="end"
              onChange={[Function]}
              value=""
            >
              <WithStyles(ForwardRef(FormControlLabel))
                className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                classes={
                  Object {
                    "disabled": "HvCheckBox-labelDisabled-676",
                    "label": "HvCheckBox-labelTypography-675",
                  }
                }
                control={
                  <ForwardRef(WithStyles)
                    checked={false}
                    checkedIcon={
                      <ForwardRef(WithStyles)
                        className="HvCheckBox-icon-680"
                      />
                    }
                    className="HvCheckBox-checkBox-679"
                    color="default"
                    disableRipple={true}
                    disabled={false}
                    icon={
                      <ForwardRef(WithStyles)
                        className="HvCheckBox-icon-680"
                      />
                    }
                    id="hv-checkbox-15-input"
                    indeterminate={true}
                    indeterminateIcon={
                      <ForwardRef(WithStyles)
                        className="HvCheckBox-icon-680"
                      />
                    }
                    onBlur={[Function]}
                    onChange={[Function]}
                    value=""
                  />
                }
                disabled={false}
                id="hv-checkbox-15"
                label="2 of 3"
                labelPlacement="end"
              >
                <ForwardRef(FormControlLabel)
                  className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                  classes={
                    Object {
                      "disabled": "Mui-disabled HvCheckBox-labelDisabled-676",
                      "label": "MuiFormControlLabel-label HvCheckBox-labelTypography-675",
                      "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                      "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                      "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                      "root": "MuiFormControlLabel-root",
                    }
                  }
                  control={
                    <ForwardRef(WithStyles)
                      checked={false}
                      checkedIcon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon-680"
                        />
                      }
                      className="HvCheckBox-checkBox-679"
                      color="default"
                      disableRipple={true}
                      disabled={false}
                      icon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon-680"
                        />
                      }
                      id="hv-checkbox-15-input"
                      indeterminate={true}
                      indeterminateIcon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon-680"
                        />
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      value=""
                    />
                  }
                  disabled={false}
                  id="hv-checkbox-15"
                  label="2 of 3"
                  labelPlacement="end"
                >
                  <label
                    className="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                    id="hv-checkbox-15"
                  >
                    <WithStyles(ForwardRef(Checkbox))
                      checked={false}
                      checkedIcon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon-680"
                        />
                      }
                      className="HvCheckBox-checkBox-679"
                      color="default"
                      disableRipple={true}
                      disabled={false}
                      icon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon-680"
                        />
                      }
                      id="hv-checkbox-15-input"
                      indeterminate={true}
                      indeterminateIcon={
                        <ForwardRef(WithStyles)
                          className="HvCheckBox-icon-680"
                        />
                      }
                      onBlur={[Function]}
                      onChange={[Function]}
                      value=""
                    >
                      <ForwardRef(Checkbox)
                        checked={false}
                        checkedIcon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon-680"
                          />
                        }
                        className="HvCheckBox-checkBox-679"
                        classes={
                          Object {
                            "checked": "Mui-checked",
                            "colorPrimary": "MuiCheckbox-colorPrimary",
                            "colorSecondary": "MuiCheckbox-colorSecondary",
                            "disabled": "Mui-disabled",
                            "indeterminate": "MuiCheckbox-indeterminate",
                            "root": "MuiCheckbox-root",
                          }
                        }
                        color="default"
                        disableRipple={true}
                        disabled={false}
                        icon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon-680"
                          />
                        }
                        id="hv-checkbox-15-input"
                        indeterminate={true}
                        indeterminateIcon={
                          <ForwardRef(WithStyles)
                            className="HvCheckBox-icon-680"
                          />
                        }
                        onBlur={[Function]}
                        onChange={[Function]}
                        value=""
                      >
                        <WithStyles(ForwardRef(SwitchBase))
                          checked={false}
                          checkedIcon={
                            <ForwardRef(WithStyles)
                              className="HvCheckBox-icon-680"
                              fontSize="default"
                            />
                          }
                          className="HvCheckBox-checkBox-679"
                          classes={
                            Object {
                              "checked": "Mui-checked",
                              "disabled": "Mui-disabled",
                              "root": "MuiCheckbox-root MuiCheckbox-indeterminate",
                            }
                          }
                          color="default"
                          disableRipple={true}
                          disabled={false}
                          icon={
                            <ForwardRef(WithStyles)
                              className="HvCheckBox-icon-680"
                              fontSize="default"
                            />
                          }
                          id="hv-checkbox-15-input"
                          inputProps={
                            Object {
                              "data-indeterminate": true,
                            }
                          }
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="checkbox"
                          value=""
                        >
                          <ForwardRef(SwitchBase)
                            checked={false}
                            checkedIcon={
                              <ForwardRef(WithStyles)
                                className="HvCheckBox-icon-680"
                                fontSize="default"
                              />
                            }
                            className="HvCheckBox-checkBox-679"
                            classes={
                              Object {
                                "checked": "PrivateSwitchBase-checked-694 Mui-checked",
                                "disabled": "PrivateSwitchBase-disabled-695 Mui-disabled",
                                "input": "PrivateSwitchBase-input-696",
                                "root": "PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate",
                              }
                            }
                            color="default"
                            disableRipple={true}
                            disabled={false}
                            icon={
                              <ForwardRef(WithStyles)
                                className="HvCheckBox-icon-680"
                                fontSize="default"
                              />
                            }
                            id="hv-checkbox-15-input"
                            inputProps={
                              Object {
                                "data-indeterminate": true,
                              }
                            }
                            onBlur={[Function]}
                            onChange={[Function]}
                            type="checkbox"
                            value=""
                          >
                            <WithStyles(ForwardRef(IconButton))
                              className="PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                              color="default"
                              component="span"
                              disableRipple={true}
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ForwardRef(IconButton)
                                className="PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                                classes={
                                  Object {
                                    "colorInherit": "MuiIconButton-colorInherit",
                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                    "edgeStart": "MuiIconButton-edgeStart",
                                    "label": "MuiIconButton-label",
                                    "root": "MuiIconButton-root",
                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                  }
                                }
                                color="default"
                                component="span"
                                disableRipple={true}
                                disabled={false}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <WithStyles(ForwardRef(ButtonBase))
                                  centerRipple={true}
                                  className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                                  component="span"
                                  disableRipple={true}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                >
                                  <ForwardRef(ButtonBase)
                                    centerRipple={true}
                                    className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "focusVisible": "Mui-focusVisible",
                                        "root": "MuiButtonBase-root",
                                      }
                                    }
                                    component="span"
                                    disableRipple={true}
                                    disabled={false}
                                    focusRipple={true}
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      aria-disabled={false}
                                      className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                                      onBlur={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      tabIndex={null}
                                    >
                                      <span
                                        className="MuiIconButton-label"
                                      >
                                        <input
                                          checked={false}
                                          className="PrivateSwitchBase-input-696"
                                          data-indeterminate={true}
                                          disabled={false}
                                          id="hv-checkbox-15-input"
                                          onChange={[Function]}
                                          type="checkbox"
                                          value=""
                                        />
                                        <WithStyles(CheckboxPartial)
                                          className="HvCheckBox-icon-680"
                                          fontSize="default"
                                        >
                                          <CheckboxPartial
                                            className="HvCheckBox-icon-680"
                                            classes={
                                              Object {
                                                "root": "HvIconCheckboxPartial-root-709",
                                                "rootL": "HvIconCheckboxPartial-rootL-713",
                                                "rootM": "HvIconCheckboxPartial-rootM-712",
                                                "rootS": "HvIconCheckboxPartial-rootS-711",
                                                "rootXs": "HvIconCheckboxPartial-rootXs-710",
                                              }
                                            }
                                            fontSize="default"
                                          >
                                            <div
                                              className="HvCheckBox-icon-680 HvIconCheckboxPartial-root-709 HvIconCheckboxPartial-rootS-711"
                                              fontSize="default"
                                            >
                                              <svg
                                                focusable={false}
                                                height="16px"
                                                viewBox="0 0 16 16"
                                                width="16px"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  className="color0"
                                                  d="M0 0h16v16H0z"
                                                  fill="#FFFFFF"
                                                />
                                                <g
                                                  className="color1"
                                                  fill="#414141"
                                                >
                                                  <path
                                                    d="M0 0v16h16V0zm15 15H1V1h14z"
                                                  />
                                                  <path
                                                    d="M4 7h8v2H4z"
                                                  />
                                                </g>
                                              </svg>
                                            </div>
                                          </CheckboxPartial>
                                        </WithStyles(CheckboxPartial)>
                                      </span>
                                    </span>
                                  </ForwardRef(ButtonBase)>
                                </WithStyles(ForwardRef(ButtonBase))>
                              </ForwardRef(IconButton)>
                            </WithStyles(ForwardRef(IconButton))>
                          </ForwardRef(SwitchBase)>
                        </WithStyles(ForwardRef(SwitchBase))>
                      </ForwardRef(Checkbox)>
                    </WithStyles(ForwardRef(Checkbox))>
                    <WithStyles(ForwardRef(Typography))
                      className="MuiFormControlLabel-label HvCheckBox-labelTypography-675"
                      component="span"
                    >
                      <ForwardRef(Typography)
                        className="MuiFormControlLabel-label HvCheckBox-labelTypography-675"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        component="span"
                      >
                        <span
                          className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 MuiTypography-body1"
                        >
                          2 of 3
                        </span>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                  </label>
                </ForwardRef(FormControlLabel)>
              </WithStyles(ForwardRef(FormControlLabel))>
            </HvCheckbox>
          </WithStyles(HvCheckbox)>
          <ul
            aria-multiselectable={true}
            className="HvList-root-659"
            id="hv-list-14"
            role="listbox"
          >
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": 0,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="0"
              rootRef={
                Object {
                  "current": <div>
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                      id="hv-checkbox-15"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-696"
                            data-indeterminate="true"
                            id="hv-checkbox-15-input"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon-680 HvIconCheckboxPartial-root-709 HvIconCheckboxPartial-rootS-711"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#FFFFFF"
                              />
                              <g
                                class="color1"
                                fill="#414141"
                              >
                                <path
                                  d="M0 0v16h16V0zm15 15H1V1h14z"
                                />
                                <path
                                  d="M4 7h8v2H4z"
                                />
                              </g>
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 MuiTypography-body1"
                      >
                        2 of 3
                      </span>
                    </label>
                    <ul
                      aria-multiselectable="true"
                      class="HvList-root-659"
                      id="hv-list-14"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                        id="hv-list-14-item-0"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-0-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-0-selector-input"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-focusDisabled-747"
                        id="hv-list-14-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-1-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-1-selector-input"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckbox-root-756 HvIconCheckbox-rootS-758"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                        id="hv-list-14-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-2-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-2-selector-input"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={true}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-746",
                    "externalReference": "Focus-externalReference-749",
                    "falseFocus": "Focus-falseFocus-750",
                    "focusDisabled": "Focus-focusDisabled-747",
                    "focused": "Focus-focused-748",
                    "root": "Focus-root-744",
                    "selected": "Focus-selected-745",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                        id="hv-checkbox-15"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-696"
                              data-indeterminate="true"
                              id="hv-checkbox-15-input"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon-680 HvIconCheckboxPartial-root-709 HvIconCheckboxPartial-rootS-711"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <g
                                  class="color1"
                                  fill="#414141"
                                >
                                  <path
                                    d="M0 0v16h16V0zm15 15H1V1h14z"
                                  />
                                  <path
                                    d="M4 7h8v2H4z"
                                  />
                                </g>
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 MuiTypography-body1"
                        >
                          2 of 3
                        </span>
                      </label>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root-659"
                        id="hv-list-14"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                          id="hv-list-14-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-0-selector-input"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-focusDisabled-747"
                          id="hv-list-14-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-1-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckbox-root-756 HvIconCheckbox-rootS-758"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                          id="hv-list-14-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-2-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={true}
                    className="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                    id="hv-list-14-item-0"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={true}
                  >
                    <WithStyles(HvCheckbox)
                      checked={true}
                      className=""
                      classes={
                        Object {
                          "container": "HvList-selectorContainer-663",
                          "labelTypography": "HvList-truncate-671",
                        }
                      }
                      disabled={false}
                      id="hv-list-14-item-0-selector"
                      label="Value 1"
                      labelPlacement="end"
                      onChange={[Function]}
                      value=""
                    >
                      <HvCheckbox
                        checked={true}
                        className=""
                        classes={
                          Object {
                            "checkBox": "HvCheckBox-checkBox-679",
                            "container": "HvCheckBox-container-673 HvList-selectorContainer-663",
                            "disableFocus": "HvCheckBox-disableFocus-674",
                            "icon": "HvCheckBox-icon-680",
                            "labelDisabled": "HvCheckBox-labelDisabled-676",
                            "labelEnd": "HvCheckBox-labelEnd-677",
                            "labelStart": "HvCheckBox-labelStart-678",
                            "labelTypography": "HvCheckBox-labelTypography-675 HvList-truncate-671",
                          }
                        }
                        disabled={false}
                        id="hv-list-14-item-0-selector"
                        label="Value 1"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          classes={
                            Object {
                              "disabled": "HvCheckBox-labelDisabled-676",
                              "label": "HvCheckBox-labelTypography-675 HvList-truncate-671",
                            }
                          }
                          control={
                            <ForwardRef(WithStyles)
                              checked={true}
                              checkedIcon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              className="HvCheckBox-checkBox-679"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              id="hv-list-14-item-0-selector-input"
                              indeterminateIcon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          disabled={false}
                          id="hv-list-14-item-0-selector"
                          label="Value 1"
                          labelPlacement="end"
                        >
                          <ForwardRef(FormControlLabel)
                            className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            classes={
                              Object {
                                "disabled": "Mui-disabled HvCheckBox-labelDisabled-676",
                                "label": "MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                className="HvCheckBox-checkBox-679"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                id="hv-list-14-item-0-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            disabled={false}
                            id="hv-list-14-item-0-selector"
                            label="Value 1"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                              id="hv-list-14-item-0-selector"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                className="HvCheckBox-checkBox-679"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                id="hv-list-14-item-0-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <ForwardRef(Checkbox)
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  className="HvCheckBox-checkBox-679"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  id="hv-list-14-item-0-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={true}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon-680"
                                        fontSize="default"
                                      />
                                    }
                                    className="HvCheckBox-checkBox-679"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon-680"
                                        fontSize="default"
                                      />
                                    }
                                    id="hv-list-14-item-0-selector-input"
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value=""
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={true}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon-680"
                                          fontSize="default"
                                        />
                                      }
                                      className="HvCheckBox-checkBox-679"
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-694 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-695 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-696",
                                          "root": "PrivateSwitchBase-root-693 MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon-680"
                                          fontSize="default"
                                        />
                                      }
                                      id="hv-list-14-item-0-selector-input"
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="checkbox"
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="PrivateSwitchBase-input-696"
                                                    data-indeterminate={false}
                                                    disabled={false}
                                                    id="hv-list-14-item-0-selector-input"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                    value=""
                                                  />
                                                  <WithStyles(CheckboxCheck)
                                                    className="HvCheckBox-icon-680"
                                                    fontSize="default"
                                                  >
                                                    <CheckboxCheck
                                                      className="HvCheckBox-icon-680"
                                                      classes={
                                                        Object {
                                                          "root": "HvIconCheckboxCheck-root-751",
                                                          "rootL": "HvIconCheckboxCheck-rootL-755",
                                                          "rootM": "HvIconCheckboxCheck-rootM-754",
                                                          "rootS": "HvIconCheckboxCheck-rootS-753",
                                                          "rootXs": "HvIconCheckboxCheck-rootXs-752",
                                                        }
                                                      }
                                                      fontSize="default"
                                                    >
                                                      <div
                                                        className="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                                        fontSize="default"
                                                      >
                                                        <svg
                                                          focusable={false}
                                                          height="16px"
                                                          viewBox="0 0 16 16"
                                                          width="16px"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            className="color0"
                                                            d="M0 0h16v16H0z"
                                                            fill="#414141"
                                                          />
                                                          <path
                                                            className="color1"
                                                            d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                                            fill="#FFFFFF"
                                                          />
                                                        </svg>
                                                      </div>
                                                    </CheckboxCheck>
                                                  </WithStyles(CheckboxCheck)>
                                                </span>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                                  >
                                    Value 1
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </HvCheckbox>
                    </WithStyles(HvCheckbox)>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="1"
              rootRef={
                Object {
                  "current": <div>
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                      id="hv-checkbox-15"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-696"
                            data-indeterminate="true"
                            id="hv-checkbox-15-input"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon-680 HvIconCheckboxPartial-root-709 HvIconCheckboxPartial-rootS-711"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#FFFFFF"
                              />
                              <g
                                class="color1"
                                fill="#414141"
                              >
                                <path
                                  d="M0 0v16h16V0zm15 15H1V1h14z"
                                />
                                <path
                                  d="M4 7h8v2H4z"
                                />
                              </g>
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 MuiTypography-body1"
                      >
                        2 of 3
                      </span>
                    </label>
                    <ul
                      aria-multiselectable="true"
                      class="HvList-root-659"
                      id="hv-list-14"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                        id="hv-list-14-item-0"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-0-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-0-selector-input"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-focusDisabled-747"
                        id="hv-list-14-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-1-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-1-selector-input"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckbox-root-756 HvIconCheckbox-rootS-758"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                        id="hv-list-14-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-2-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-2-selector-input"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-746",
                    "externalReference": "Focus-externalReference-749",
                    "falseFocus": "Focus-falseFocus-750",
                    "focusDisabled": "Focus-focusDisabled-747",
                    "focused": "Focus-focused-748",
                    "root": "Focus-root-744",
                    "selected": "Focus-selected-745",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                        id="hv-checkbox-15"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-696"
                              data-indeterminate="true"
                              id="hv-checkbox-15-input"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon-680 HvIconCheckboxPartial-root-709 HvIconCheckboxPartial-rootS-711"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <g
                                  class="color1"
                                  fill="#414141"
                                >
                                  <path
                                    d="M0 0v16h16V0zm15 15H1V1h14z"
                                  />
                                  <path
                                    d="M4 7h8v2H4z"
                                  />
                                </g>
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 MuiTypography-body1"
                        >
                          2 of 3
                        </span>
                      </label>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root-659"
                        id="hv-list-14"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                          id="hv-list-14-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-0-selector-input"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-focusDisabled-747"
                          id="hv-list-14-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-1-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckbox-root-756 HvIconCheckbox-rootS-758"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                          id="hv-list-14-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-2-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={false}
                    className="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-focusDisabled-747"
                    id="hv-list-14-item-1"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <WithStyles(HvCheckbox)
                      checked={false}
                      className=""
                      classes={
                        Object {
                          "container": "HvList-selectorContainer-663",
                          "labelTypography": "HvList-truncate-671",
                        }
                      }
                      disabled={false}
                      id="hv-list-14-item-1-selector"
                      label="Value 2"
                      labelPlacement="end"
                      onChange={[Function]}
                      value=""
                    >
                      <HvCheckbox
                        checked={false}
                        className=""
                        classes={
                          Object {
                            "checkBox": "HvCheckBox-checkBox-679",
                            "container": "HvCheckBox-container-673 HvList-selectorContainer-663",
                            "disableFocus": "HvCheckBox-disableFocus-674",
                            "icon": "HvCheckBox-icon-680",
                            "labelDisabled": "HvCheckBox-labelDisabled-676",
                            "labelEnd": "HvCheckBox-labelEnd-677",
                            "labelStart": "HvCheckBox-labelStart-678",
                            "labelTypography": "HvCheckBox-labelTypography-675 HvList-truncate-671",
                          }
                        }
                        disabled={false}
                        id="hv-list-14-item-1-selector"
                        label="Value 2"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          classes={
                            Object {
                              "disabled": "HvCheckBox-labelDisabled-676",
                              "label": "HvCheckBox-labelTypography-675 HvList-truncate-671",
                            }
                          }
                          control={
                            <ForwardRef(WithStyles)
                              checked={false}
                              checkedIcon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              className="HvCheckBox-checkBox-679"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              id="hv-list-14-item-1-selector-input"
                              indeterminateIcon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          disabled={false}
                          id="hv-list-14-item-1-selector"
                          label="Value 2"
                          labelPlacement="end"
                        >
                          <ForwardRef(FormControlLabel)
                            className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            classes={
                              Object {
                                "disabled": "Mui-disabled HvCheckBox-labelDisabled-676",
                                "label": "MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                className="HvCheckBox-checkBox-679"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                id="hv-list-14-item-1-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            disabled={false}
                            id="hv-list-14-item-1-selector"
                            label="Value 2"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                              id="hv-list-14-item-1-selector"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                className="HvCheckBox-checkBox-679"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                id="hv-list-14-item-1-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <ForwardRef(Checkbox)
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  className="HvCheckBox-checkBox-679"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  id="hv-list-14-item-1-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon-680"
                                        fontSize="default"
                                      />
                                    }
                                    className="HvCheckBox-checkBox-679"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon-680"
                                        fontSize="default"
                                      />
                                    }
                                    id="hv-list-14-item-1-selector-input"
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value=""
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon-680"
                                          fontSize="default"
                                        />
                                      }
                                      className="HvCheckBox-checkBox-679"
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-694 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-695 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-696",
                                          "root": "PrivateSwitchBase-root-693 MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon-680"
                                          fontSize="default"
                                        />
                                      }
                                      id="hv-list-14-item-1-selector-input"
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="checkbox"
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-696"
                                                    data-indeterminate={false}
                                                    disabled={false}
                                                    id="hv-list-14-item-1-selector-input"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                    value=""
                                                  />
                                                  <WithStyles(Checkbox)
                                                    className="HvCheckBox-icon-680"
                                                    fontSize="default"
                                                  >
                                                    <Checkbox
                                                      className="HvCheckBox-icon-680"
                                                      classes={
                                                        Object {
                                                          "root": "HvIconCheckbox-root-756",
                                                          "rootL": "HvIconCheckbox-rootL-760",
                                                          "rootM": "HvIconCheckbox-rootM-759",
                                                          "rootS": "HvIconCheckbox-rootS-758",
                                                          "rootXs": "HvIconCheckbox-rootXs-757",
                                                        }
                                                      }
                                                      fontSize="default"
                                                    >
                                                      <div
                                                        className="HvCheckBox-icon-680 HvIconCheckbox-root-756 HvIconCheckbox-rootS-758"
                                                        fontSize="default"
                                                      >
                                                        <svg
                                                          focusable={false}
                                                          height="16px"
                                                          viewBox="0 0 16 16"
                                                          width="16px"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            className="color0"
                                                            d="M0 0h16v16H0z"
                                                            fill="#FFFFFF"
                                                          />
                                                          <path
                                                            className="color1"
                                                            d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                                            fill="#414141"
                                                          />
                                                        </svg>
                                                      </div>
                                                    </Checkbox>
                                                  </WithStyles(Checkbox)>
                                                </span>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                                  >
                                    Value 2
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </HvCheckbox>
                    </WithStyles(HvCheckbox)>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="2"
              rootRef={
                Object {
                  "current": <div>
                    <label
                      class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                      id="hv-checkbox-15"
                    >
                      <span
                        aria-disabled="false"
                        class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                      >
                        <span
                          class="MuiIconButton-label"
                        >
                          <input
                            class="PrivateSwitchBase-input-696"
                            data-indeterminate="true"
                            id="hv-checkbox-15-input"
                            type="checkbox"
                            value=""
                          />
                          <div
                            class="HvCheckBox-icon-680 HvIconCheckboxPartial-root-709 HvIconCheckboxPartial-rootS-711"
                            font-size="default"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M0 0h16v16H0z"
                                fill="#FFFFFF"
                              />
                              <g
                                class="color1"
                                fill="#414141"
                              >
                                <path
                                  d="M0 0v16h16V0zm15 15H1V1h14z"
                                />
                                <path
                                  d="M4 7h8v2H4z"
                                />
                              </g>
                            </svg>
                          </div>
                        </span>
                      </span>
                      <span
                        class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 MuiTypography-body1"
                      >
                        2 of 3
                      </span>
                    </label>
                    <ul
                      aria-multiselectable="true"
                      class="HvList-root-659"
                      id="hv-list-14"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                        id="hv-list-14-item-0"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-0-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-0-selector-input"
                                tabindex="0"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="false"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-focusDisabled-747"
                        id="hv-list-14-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-1-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-1-selector-input"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckbox-root-756 HvIconCheckbox-rootS-758"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        aria-selected="true"
                        class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                        id="hv-list-14-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          id="hv-list-14-item-2-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-696"
                                data-indeterminate="false"
                                id="hv-list-14-item-2-selector-input"
                                tabindex="-1"
                                type="checkbox"
                                value=""
                              />
                              <div
                                class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                font-size="default"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M0 0h16v16H0z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={true}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-746",
                    "externalReference": "Focus-externalReference-749",
                    "falseFocus": "Focus-falseFocus-750",
                    "focusDisabled": "Focus-focusDisabled-747",
                    "focused": "Focus-focused-748",
                    "root": "Focus-root-744",
                    "selected": "Focus-selected-745",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <label
                        class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677 HvList-selectAll-665"
                        id="hv-checkbox-15"
                      >
                        <span
                          aria-disabled="false"
                          class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root MuiCheckbox-indeterminate HvCheckBox-checkBox-679"
                        >
                          <span
                            class="MuiIconButton-label"
                          >
                            <input
                              class="PrivateSwitchBase-input-696"
                              data-indeterminate="true"
                              id="hv-checkbox-15-input"
                              type="checkbox"
                              value=""
                            />
                            <div
                              class="HvCheckBox-icon-680 HvIconCheckboxPartial-root-709 HvIconCheckboxPartial-rootS-711"
                              font-size="default"
                            >
                              <svg
                                focusable="false"
                                height="16px"
                                viewBox="0 0 16 16"
                                width="16px"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  class="color0"
                                  d="M0 0h16v16H0z"
                                  fill="#FFFFFF"
                                />
                                <g
                                  class="color1"
                                  fill="#414141"
                                >
                                  <path
                                    d="M0 0v16h16V0zm15 15H1V1h14z"
                                  />
                                  <path
                                    d="M4 7h8v2H4z"
                                  />
                                </g>
                              </svg>
                            </div>
                          </span>
                        </span>
                        <span
                          class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 MuiTypography-body1"
                        >
                          2 of 3
                        </span>
                      </label>
                      <ul
                        aria-multiselectable="true"
                        class="HvList-root-659"
                        id="hv-list-14"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                          id="hv-list-14-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-0-selector-input"
                                  tabindex="0"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="false"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-focusDisabled-747"
                          id="hv-list-14-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-1-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckbox-root-756 HvIconCheckbox-rootS-758"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M0-.00291v16h16v-16zm15 15H1v-14h14z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          aria-selected="true"
                          class="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                          id="hv-list-14-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            id="hv-list-14-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-696"
                                  data-indeterminate="false"
                                  id="hv-list-14-item-2-selector-input"
                                  tabindex="-1"
                                  type="checkbox"
                                  value=""
                                />
                                <div
                                  class="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                  font-size="default"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M0 0h16v16H0z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={true}
                    className="HvList-listItem-660 HvList-selector-662 Focus-root-744 Focus-selected-745 Focus-focusDisabled-747"
                    id="hv-list-14-item-2"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={true}
                  >
                    <WithStyles(HvCheckbox)
                      checked={true}
                      className=""
                      classes={
                        Object {
                          "container": "HvList-selectorContainer-663",
                          "labelTypography": "HvList-truncate-671",
                        }
                      }
                      disabled={false}
                      id="hv-list-14-item-2-selector"
                      label="Value 3"
                      labelPlacement="end"
                      onChange={[Function]}
                      value=""
                    >
                      <HvCheckbox
                        checked={true}
                        className=""
                        classes={
                          Object {
                            "checkBox": "HvCheckBox-checkBox-679",
                            "container": "HvCheckBox-container-673 HvList-selectorContainer-663",
                            "disableFocus": "HvCheckBox-disableFocus-674",
                            "icon": "HvCheckBox-icon-680",
                            "labelDisabled": "HvCheckBox-labelDisabled-676",
                            "labelEnd": "HvCheckBox-labelEnd-677",
                            "labelStart": "HvCheckBox-labelStart-678",
                            "labelTypography": "HvCheckBox-labelTypography-675 HvList-truncate-671",
                          }
                        }
                        disabled={false}
                        id="hv-list-14-item-2-selector"
                        label="Value 3"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                          classes={
                            Object {
                              "disabled": "HvCheckBox-labelDisabled-676",
                              "label": "HvCheckBox-labelTypography-675 HvList-truncate-671",
                            }
                          }
                          control={
                            <ForwardRef(WithStyles)
                              checked={true}
                              checkedIcon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              className="HvCheckBox-checkBox-679"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              id="hv-list-14-item-2-selector-input"
                              indeterminateIcon={
                                <ForwardRef(WithStyles)
                                  className="HvCheckBox-icon-680"
                                />
                              }
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          disabled={false}
                          id="hv-list-14-item-2-selector"
                          label="Value 3"
                          labelPlacement="end"
                        >
                          <ForwardRef(FormControlLabel)
                            className="HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                            classes={
                              Object {
                                "disabled": "Mui-disabled HvCheckBox-labelDisabled-676",
                                "label": "MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                className="HvCheckBox-checkBox-679"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                id="hv-list-14-item-2-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            disabled={false}
                            id="hv-list-14-item-2-selector"
                            label="Value 3"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root HvCheckBox-container-673 HvList-selectorContainer-663 HvCheckBox-labelEnd-677"
                              id="hv-list-14-item-2-selector"
                            >
                              <WithStyles(ForwardRef(Checkbox))
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                className="HvCheckBox-checkBox-679"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                id="hv-list-14-item-2-selector-input"
                                indeterminateIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvCheckBox-icon-680"
                                  />
                                }
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <ForwardRef(Checkbox)
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  className="HvCheckBox-checkBox-679"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiCheckbox-colorPrimary",
                                      "colorSecondary": "MuiCheckbox-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "indeterminate": "MuiCheckbox-indeterminate",
                                      "root": "MuiCheckbox-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  id="hv-list-14-item-2-selector-input"
                                  indeterminateIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvCheckBox-icon-680"
                                    />
                                  }
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={true}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon-680"
                                        fontSize="default"
                                      />
                                    }
                                    className="HvCheckBox-checkBox-679"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiCheckbox-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvCheckBox-icon-680"
                                        fontSize="default"
                                      />
                                    }
                                    id="hv-list-14-item-2-selector-input"
                                    inputProps={
                                      Object {
                                        "data-indeterminate": false,
                                      }
                                    }
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="checkbox"
                                    value=""
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={true}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon-680"
                                          fontSize="default"
                                        />
                                      }
                                      className="HvCheckBox-checkBox-679"
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-694 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-695 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-696",
                                          "root": "PrivateSwitchBase-root-693 MuiCheckbox-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvCheckBox-icon-680"
                                          fontSize="default"
                                        />
                                      }
                                      id="hv-list-14-item-2-selector-input"
                                      inputProps={
                                        Object {
                                          "data-indeterminate": false,
                                        }
                                      }
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="checkbox"
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-693 MuiCheckbox-root HvCheckBox-checkBox-679 PrivateSwitchBase-checked-694 Mui-checked"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="PrivateSwitchBase-input-696"
                                                    data-indeterminate={false}
                                                    disabled={false}
                                                    id="hv-list-14-item-2-selector-input"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                    value=""
                                                  />
                                                  <WithStyles(CheckboxCheck)
                                                    className="HvCheckBox-icon-680"
                                                    fontSize="default"
                                                  >
                                                    <CheckboxCheck
                                                      className="HvCheckBox-icon-680"
                                                      classes={
                                                        Object {
                                                          "root": "HvIconCheckboxCheck-root-751",
                                                          "rootL": "HvIconCheckboxCheck-rootL-755",
                                                          "rootM": "HvIconCheckboxCheck-rootM-754",
                                                          "rootS": "HvIconCheckboxCheck-rootS-753",
                                                          "rootXs": "HvIconCheckboxCheck-rootXs-752",
                                                        }
                                                      }
                                                      fontSize="default"
                                                    >
                                                      <div
                                                        className="HvCheckBox-icon-680 HvIconCheckboxCheck-root-751 HvIconCheckboxCheck-rootS-753"
                                                        fontSize="default"
                                                      >
                                                        <svg
                                                          focusable={false}
                                                          height="16px"
                                                          viewBox="0 0 16 16"
                                                          width="16px"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            className="color0"
                                                            d="M0 0h16v16H0z"
                                                            fill="#414141"
                                                          />
                                                          <path
                                                            className="color1"
                                                            d="M5.95 13.1l-3.7-3.8 1.4-1.4 2.3 2.2 6.2-7.2 1.6 1.4z"
                                                            fill="#FFFFFF"
                                                          />
                                                        </svg>
                                                      </div>
                                                    </CheckboxCheck>
                                                  </WithStyles(CheckboxCheck)>
                                                </span>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Checkbox)>
                              </WithStyles(ForwardRef(Checkbox))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label HvCheckBox-labelTypography-675 HvList-truncate-671 MuiTypography-body1"
                                  >
                                    Value 3
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </HvCheckbox>
                    </WithStyles(HvCheckbox)>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
          </ul>
        </div>
      </List>
    </WithStyles(List)>
  </ThemeProvider>
</HvProvider>
`;

exports[`<List /> Single selection should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  router={null}
  theme={null}
  uiKitTheme="dawn"
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1270,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "hv": Object {
          "deprecated": Object {
            "palette": Object {
              "accent": Object {},
              "atmosphere": Object {},
              "base": Object {},
              "semantic": Object {},
              "support": Object {},
            },
            "typography": Object {
              "disabledText": Object {},
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {},
                "polarizes": Object {},
                "sequential": Object {},
                "undefinedState": Object {},
              },
            },
          },
          "name": "dawn",
          "palette": Object {
            "accent": Object {
              "acce0": "#FFFFFF",
              "acce1": "#414141",
              "acce2": "#146BD2",
              "acce2h": "#4389DB",
              "acce3": "#CC0000",
            },
            "atmosphere": Object {
              "atmo1": "#FFFFFF",
              "atmo2": "#F9F9F9",
              "atmo3": "#F5F5F5",
              "atmo4": "#F0F0F0",
              "atmo5": "#DEDEDE",
              "atmo6": "#BCBCBC",
              "atmo7": "#999999",
            },
            "base": Object {
              "base1": "#FFFFFF",
              "base2": "#414141",
            },
            "semantic": Object {
              "sema1": "#63A621",
              "sema10": "#EF9A9A",
              "sema11": "#E57373",
              "sema12": "#EF5350",
              "sema13": "#E53935",
              "sema14": "#C62828",
              "sema15": "#80DEEA",
              "sema16": "#4DD0E1",
              "sema17": "#26C6DA",
              "sema18": "#00ACC1",
              "sema19": "#00838F",
              "sema2": "#72CCCB",
              "sema3": "#E68C17",
              "sema4": "#FF5252",
              "sema5": "#C51162",
              "sema6": "#AA00FF",
              "sema7": "#D3E3F6",
              "sema8": "#DFECD1",
              "sema9": "#F5D8D8",
            },
            "support": Object {
              "supp1": "#0F8B8D",
              "supp2": "#734B6D",
              "supp3": "#4E7599",
              "supp4": "#C19C31",
              "supp5": "#546B6B",
            },
          },
          "spacing": Object {
            "lg": "60",
            "md": "30",
            "sm": "20",
            "xl": "90",
            "xs": "10",
          },
          "type": "light",
          "typography": Object {
            "3xlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "4xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "5xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "disabledButtonText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "disabledText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "highlightText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "infoText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "inlineLink": Object {
              "color": "#146BD2",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "lTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "labelText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "mTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "normalText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "placeholderText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "sLink": Object {
              "color": "#146BD2",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "selectedNavText": Object {
              "color": "#CC0000",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "selectedText": Object {
              "background": "#414141",
              "color": "#F9F9F9",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "vizText": Object {
              "color": "#414141",
              "fontSize": "10px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "15px",
            },
            "xlTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "xsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
            "xxlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "xxsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
          },
          "viz": Object {
            "palette": Object {
              "categorical": Object {
                "cviz1": "#2DB3E0",
                "cviz10": "#419393",
                "cviz11": "#58C9DD",
                "cviz12": "#F8C189",
                "cviz13": "#528BBF",
                "cviz14": "#DE64BD",
                "cviz15": "#73BF9C",
                "cviz16": "#9672C1",
                "cviz17": "#EB95AF",
                "cviz18": "#646A98",
                "cviz19": "#D88136",
                "cviz2": "#FF990D",
                "cviz20": "#309B59",
                "cviz3": "#D31F6B",
                "cviz4": "#FFD00A",
                "cviz5": "#18C38A",
                "cviz6": "#098CB2",
                "cviz7": "#EA5B86",
                "cviz8": "#9B469B",
                "cviz9": "#F4763D",
              },
              "polarizes": Object {
                "cviz21": "#869F1E",
                "cviz22": "#A4991C",
                "cviz23": "#C4931A",
                "cviz24": "#E68C17",
                "cviz25": "#F27034",
                "cviz26": "#FF5252",
                "cviz27": "#EC3D57",
                "cviz28": "#D8265D",
                "sema1": "#63A621",
                "sema5": "#C51162",
              },
              "sequential": Object {
                "cviz1": "#2DB3E0",
                "cviz1_100": "#E3F1F6",
                "cviz1_200": "#CFEAF3",
                "cviz1_300": "#BAE3F3",
                "cviz1_400": "#A6DCEE",
                "cviz1_500": "#92D5EC",
                "cviz1_600": "#7ECEE9",
                "cviz1_700": "#69C7E7",
                "cviz1_800": "#55C0E4",
                "cviz1_900": "#40B9E2",
              },
              "undefinedState": Object {
                "atmo5": "#DEDEDE",
              },
            },
          },
        },
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiAppBar": Object {
            "colorDefault": Object {
              "backgroundColor": "#FFFFFF",
              "contrastText": "#414141",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "height": "50px",
              },
              "borderTop": "4px solid #CC0000",
            },
          },
          "MuiIconButton": Object {
            "root": Object {
              "&:focus": Object {
                "outlineColor": "Highlight",
                "outlineOffset": -2,
                "outlineStyle": "auto",
                "outlineWidth": 4,
              },
              "&:hover": Object {
                "backgroundColor": "#F0F0F0",
              },
              "borderRadius": 0,
              "padding": 0,
            },
          },
          "MuiToolbar": Object {
            "dense": Object {
              "minHeight": "46px",
            },
            "gutters": Object {
              "@media (min-width:600px)": Object {
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "paddingLeft": "20px",
              "paddingRight": "20px",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "minHeight": "46px",
              },
              "alignItems": "center",
            },
          },
        },
        "palette": Object {
          "acce0": "#FFFFFF",
          "acce1": "#414141",
          "acce2": "#146BD2",
          "acce2h": "#4389DB",
          "acce3": "#CC0000",
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "atmo1": "#FFFFFF",
          "atmo2": "#F9F9F9",
          "atmo3": "#F5F5F5",
          "atmo4": "#F0F0F0",
          "atmo5": "#DEDEDE",
          "atmo6": "#BCBCBC",
          "atmo7": "#999999",
          "augmentColor": [Function],
          "background": Object {
            "default": "#F9F9F9",
            "paper": "#fff",
          },
          "base1": "#FFFFFF",
          "base2": "#414141",
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(14, 74, 147)",
            "light": "#4389DB",
            "main": "#146BD2",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "rgb(45, 45, 45)",
            "light": "#999999",
            "main": "#414141",
          },
          "sema1": "#63A621",
          "sema10": "#EF9A9A",
          "sema11": "#E57373",
          "sema12": "#EF5350",
          "sema13": "#E53935",
          "sema14": "#C62828",
          "sema15": "#80DEEA",
          "sema16": "#4DD0E1",
          "sema17": "#26C6DA",
          "sema18": "#00ACC1",
          "sema19": "#00838F",
          "sema2": "#72CCCB",
          "sema3": "#E68C17",
          "sema4": "#FF5252",
          "sema5": "#C51162",
          "sema6": "#AA00FF",
          "sema7": "#D3E3F6",
          "sema8": "#DFECD1",
          "sema9": "#F5D8D8",
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "supp1": "#0F8B8D",
          "supp2": "#734B6D",
          "supp3": "#4E7599",
          "supp4": "#C19C31",
          "supp5": "#546B6B",
          "text": Object {
            "disabled": "#999999",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "#414141",
            "secondary": "rgba(0, 0, 0, 0.54)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {
          "MuiButtonBase": Object {
            "disableRipple": true,
          },
          "MuiInput": Object {
            "disableUnderline": true,
          },
        },
        "shadows": Array [
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
        ],
        "shape": Object {
          "borderRadius": 0,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "body2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "button": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": Array [
            "'Open Sans'",
            "Arial",
            "Helvetica",
            "sans-serif",
          ],
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h3": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h4": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h5": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "subtitle2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "12px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "16px",
          },
          "suppressDeprecationWarnings": true,
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <WithStyles(CssBaseline)>
      <CssBaseline
        classes={Object {}}
      />
    </WithStyles(CssBaseline)>
    <WithStyles(List)
      condensed={false}
      hasTooltips={false}
      id=""
      labels={
        Object {
          "selectAll": "All",
          "selectionConjunction": "of",
        }
      }
      multiSelect={false}
      onChange={[MockFunction]}
      onClick={[MockFunction]}
      selectDefault={true}
      selectable={true}
      showSelectAll={false}
      singleSelectionToggle={false}
      useRouter={false}
      useSelector={false}
      values={
        Array [
          Object {
            "label": "Value 1",
          },
          Object {
            "label": "Value 2",
          },
          Object {
            "label": "Value 3",
          },
        ]
      }
    >
      <List
        classes={
          Object {
            "box": "HvList-box-14",
            "condensed": "HvList-condensed-3",
            "disabled": "HvList-disabled-8",
            "label": "HvList-label-10",
            "labelIconLeftPadding": "HvList-labelIconLeftPadding-11",
            "listItem": "HvList-listItem-2",
            "noIconLeftPadding": "HvList-noIconLeftPadding-12",
            "root": "HvList-root-1",
            "selectAll": "HvList-selectAll-7",
            "selected": "HvList-selected-6",
            "selector": "HvList-selector-4",
            "selectorContainer": "HvList-selectorContainer-5",
            "textDisabled": "HvList-textDisabled-9",
            "truncate": "HvList-truncate-13",
          }
        }
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={false}
        onChange={[MockFunction]}
        onClick={[MockFunction]}
        selectDefault={true}
        selectable={true}
        showSelectAll={false}
        singleSelectionToggle={false}
        useRouter={false}
        useSelector={false}
        values={
          Array [
            Object {
              "label": "Value 1",
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
            },
          ]
        }
      >
        <div>
          <ul
            className="HvList-root-1"
            id="hv-list-1"
            role="listbox"
          >
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": 0,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="0"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-1"
                      id="hv-list-1"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-2 HvList-selected-6 Focus-root-15 Focus-selected-16 Focus-focusDisabled-18"
                        id="hv-list-1-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <p
                          class="HvTypography-selectedText-34 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13 HvList-selected-6"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                        id="hv-list-1-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                        id="hv-list-1-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                        >
                          Value 3
                        </p>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={true}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-17",
                    "externalReference": "Focus-externalReference-20",
                    "falseFocus": "Focus-falseFocus-21",
                    "focusDisabled": "Focus-focusDisabled-18",
                    "focused": "Focus-focused-19",
                    "root": "Focus-root-15",
                    "selected": "Focus-selected-16",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-1"
                        id="hv-list-1"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-2 HvList-selected-6 Focus-root-15 Focus-selected-16 Focus-focusDisabled-18"
                          id="hv-list-1-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText-34 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13 HvList-selected-6"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                          id="hv-list-1-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                          id="hv-list-1-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={true}
                    className="HvList-listItem-2 HvList-selected-6 Focus-root-15 Focus-selected-16 Focus-focusDisabled-18"
                    id="hv-list-1-item-0"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={true}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-10 HvList-truncate-13 HvList-selected-6"
                        component={null}
                        paragraph={false}
                        variant="selectedText"
                      >
                        <ForwardRef
                          className="HvList-label-10 HvList-truncate-13 HvList-selected-6"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-24",
                              "4xlTitle": "HvTypography-4xlTitle-23",
                              "5xlTitle": "HvTypography-5xlTitle-22",
                              "baseFontFamily": "HvTypography-baseFontFamily-45",
                              "disabledButtonText": "HvTypography-disabledButtonText-36",
                              "disabledText": "HvTypography-disabledText-43",
                              "highlightText": "HvTypography-highlightText-32",
                              "infoText": "HvTypography-infoText-41",
                              "inlineLink": "HvTypography-inlineLink-35",
                              "lTitle": "HvTypography-lTitle-27",
                              "labelText": "HvTypography-labelText-40",
                              "mTitle": "HvTypography-mTitle-28",
                              "margin": "HvTypography-margin-46",
                              "normalText": "HvTypography-normalText-33",
                              "placeholderText": "HvTypography-placeholderText-37",
                              "sLink": "HvTypography-sLink-42",
                              "sText": "HvTypography-sText-39",
                              "sTitle": "HvTypography-sTitle-29",
                              "selectedNavText": "HvTypography-selectedNavText-38",
                              "selectedText": "HvTypography-selectedText-34",
                              "vizText": "HvTypography-vizText-44",
                              "xlTitle": "HvTypography-xlTitle-26",
                              "xsTitle": "HvTypography-xsTitle-30",
                              "xxlTitle": "HvTypography-xxlTitle-25",
                              "xxsTitle": "HvTypography-xxsTitle-31",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="selectedText"
                        >
                          <p
                            className="HvTypography-selectedText-34 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13 HvList-selected-6"
                          >
                            Value 1
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="1"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-1"
                      id="hv-list-1"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-2 HvList-selected-6 Focus-root-15 Focus-selected-16 Focus-focusDisabled-18"
                        id="hv-list-1-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <p
                          class="HvTypography-selectedText-34 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13 HvList-selected-6"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                        id="hv-list-1-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                        id="hv-list-1-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                        >
                          Value 3
                        </p>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-17",
                    "externalReference": "Focus-externalReference-20",
                    "falseFocus": "Focus-falseFocus-21",
                    "focusDisabled": "Focus-focusDisabled-18",
                    "focused": "Focus-focused-19",
                    "root": "Focus-root-15",
                    "selected": "Focus-selected-16",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-1"
                        id="hv-list-1"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-2 HvList-selected-6 Focus-root-15 Focus-selected-16 Focus-focusDisabled-18"
                          id="hv-list-1-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText-34 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13 HvList-selected-6"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                          id="hv-list-1-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                          id="hv-list-1-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    className="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                    id="hv-list-1-item-1"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-10 HvList-truncate-13"
                        component={null}
                        paragraph={false}
                        variant="normalText"
                      >
                        <ForwardRef
                          className="HvList-label-10 HvList-truncate-13"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-24",
                              "4xlTitle": "HvTypography-4xlTitle-23",
                              "5xlTitle": "HvTypography-5xlTitle-22",
                              "baseFontFamily": "HvTypography-baseFontFamily-45",
                              "disabledButtonText": "HvTypography-disabledButtonText-36",
                              "disabledText": "HvTypography-disabledText-43",
                              "highlightText": "HvTypography-highlightText-32",
                              "infoText": "HvTypography-infoText-41",
                              "inlineLink": "HvTypography-inlineLink-35",
                              "lTitle": "HvTypography-lTitle-27",
                              "labelText": "HvTypography-labelText-40",
                              "mTitle": "HvTypography-mTitle-28",
                              "margin": "HvTypography-margin-46",
                              "normalText": "HvTypography-normalText-33",
                              "placeholderText": "HvTypography-placeholderText-37",
                              "sLink": "HvTypography-sLink-42",
                              "sText": "HvTypography-sText-39",
                              "sTitle": "HvTypography-sTitle-29",
                              "selectedNavText": "HvTypography-selectedNavText-38",
                              "selectedText": "HvTypography-selectedText-34",
                              "vizText": "HvTypography-vizText-44",
                              "xlTitle": "HvTypography-xlTitle-26",
                              "xsTitle": "HvTypography-xsTitle-30",
                              "xxlTitle": "HvTypography-xxlTitle-25",
                              "xxsTitle": "HvTypography-xxsTitle-31",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="normalText"
                        >
                          <p
                            className="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 2
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="2"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-1"
                      id="hv-list-1"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-2 HvList-selected-6 Focus-root-15 Focus-selected-16 Focus-focusDisabled-18"
                        id="hv-list-1-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <p
                          class="HvTypography-selectedText-34 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13 HvList-selected-6"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                        id="hv-list-1-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                        id="hv-list-1-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                        >
                          Value 3
                        </p>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-17",
                    "externalReference": "Focus-externalReference-20",
                    "falseFocus": "Focus-falseFocus-21",
                    "focusDisabled": "Focus-focusDisabled-18",
                    "focused": "Focus-focused-19",
                    "root": "Focus-root-15",
                    "selected": "Focus-selected-16",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-1"
                        id="hv-list-1"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-2 HvList-selected-6 Focus-root-15 Focus-selected-16 Focus-focusDisabled-18"
                          id="hv-list-1-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <p
                            class="HvTypography-selectedText-34 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13 HvList-selected-6"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                          id="hv-list-1-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                          id="hv-list-1-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 3
                          </p>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    className="HvList-listItem-2 Focus-root-15 Focus-focusDisabled-18"
                    id="hv-list-1-item-2"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-10 HvList-truncate-13"
                        component={null}
                        paragraph={false}
                        variant="normalText"
                      >
                        <ForwardRef
                          className="HvList-label-10 HvList-truncate-13"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-24",
                              "4xlTitle": "HvTypography-4xlTitle-23",
                              "5xlTitle": "HvTypography-5xlTitle-22",
                              "baseFontFamily": "HvTypography-baseFontFamily-45",
                              "disabledButtonText": "HvTypography-disabledButtonText-36",
                              "disabledText": "HvTypography-disabledText-43",
                              "highlightText": "HvTypography-highlightText-32",
                              "infoText": "HvTypography-infoText-41",
                              "inlineLink": "HvTypography-inlineLink-35",
                              "lTitle": "HvTypography-lTitle-27",
                              "labelText": "HvTypography-labelText-40",
                              "mTitle": "HvTypography-mTitle-28",
                              "margin": "HvTypography-margin-46",
                              "normalText": "HvTypography-normalText-33",
                              "placeholderText": "HvTypography-placeholderText-37",
                              "sLink": "HvTypography-sLink-42",
                              "sText": "HvTypography-sText-39",
                              "sTitle": "HvTypography-sTitle-29",
                              "selectedNavText": "HvTypography-selectedNavText-38",
                              "selectedText": "HvTypography-selectedText-34",
                              "vizText": "HvTypography-vizText-44",
                              "xlTitle": "HvTypography-xlTitle-26",
                              "xsTitle": "HvTypography-xsTitle-30",
                              "xxlTitle": "HvTypography-xxlTitle-25",
                              "xxsTitle": "HvTypography-xxsTitle-31",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="normalText"
                        >
                          <p
                            className="HvTypography-normalText-33 HvTypography-baseFontFamily-45 HvTypography-margin-46 HvList-label-10 HvList-truncate-13"
                          >
                            Value 3
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
          </ul>
        </div>
      </List>
    </WithStyles(List)>
  </ThemeProvider>
</HvProvider>
`;

exports[`<List /> Single selection with icons should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  router={null}
  theme={null}
  uiKitTheme="dawn"
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1270,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "hv": Object {
          "deprecated": Object {
            "palette": Object {
              "accent": Object {},
              "atmosphere": Object {},
              "base": Object {},
              "semantic": Object {},
              "support": Object {},
            },
            "typography": Object {
              "disabledText": Object {},
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {},
                "polarizes": Object {},
                "sequential": Object {},
                "undefinedState": Object {},
              },
            },
          },
          "name": "dawn",
          "palette": Object {
            "accent": Object {
              "acce0": "#FFFFFF",
              "acce1": "#414141",
              "acce2": "#146BD2",
              "acce2h": "#4389DB",
              "acce3": "#CC0000",
            },
            "atmosphere": Object {
              "atmo1": "#FFFFFF",
              "atmo2": "#F9F9F9",
              "atmo3": "#F5F5F5",
              "atmo4": "#F0F0F0",
              "atmo5": "#DEDEDE",
              "atmo6": "#BCBCBC",
              "atmo7": "#999999",
            },
            "base": Object {
              "base1": "#FFFFFF",
              "base2": "#414141",
            },
            "semantic": Object {
              "sema1": "#63A621",
              "sema10": "#EF9A9A",
              "sema11": "#E57373",
              "sema12": "#EF5350",
              "sema13": "#E53935",
              "sema14": "#C62828",
              "sema15": "#80DEEA",
              "sema16": "#4DD0E1",
              "sema17": "#26C6DA",
              "sema18": "#00ACC1",
              "sema19": "#00838F",
              "sema2": "#72CCCB",
              "sema3": "#E68C17",
              "sema4": "#FF5252",
              "sema5": "#C51162",
              "sema6": "#AA00FF",
              "sema7": "#D3E3F6",
              "sema8": "#DFECD1",
              "sema9": "#F5D8D8",
            },
            "support": Object {
              "supp1": "#0F8B8D",
              "supp2": "#734B6D",
              "supp3": "#4E7599",
              "supp4": "#C19C31",
              "supp5": "#546B6B",
            },
          },
          "spacing": Object {
            "lg": "60",
            "md": "30",
            "sm": "20",
            "xl": "90",
            "xs": "10",
          },
          "type": "light",
          "typography": Object {
            "3xlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "4xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "5xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "disabledButtonText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "disabledText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "highlightText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "infoText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "inlineLink": Object {
              "color": "#146BD2",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "lTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "labelText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "mTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "normalText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "placeholderText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "sLink": Object {
              "color": "#146BD2",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "selectedNavText": Object {
              "color": "#CC0000",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "selectedText": Object {
              "background": "#414141",
              "color": "#F9F9F9",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "vizText": Object {
              "color": "#414141",
              "fontSize": "10px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "15px",
            },
            "xlTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "xsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
            "xxlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "xxsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
          },
          "viz": Object {
            "palette": Object {
              "categorical": Object {
                "cviz1": "#2DB3E0",
                "cviz10": "#419393",
                "cviz11": "#58C9DD",
                "cviz12": "#F8C189",
                "cviz13": "#528BBF",
                "cviz14": "#DE64BD",
                "cviz15": "#73BF9C",
                "cviz16": "#9672C1",
                "cviz17": "#EB95AF",
                "cviz18": "#646A98",
                "cviz19": "#D88136",
                "cviz2": "#FF990D",
                "cviz20": "#309B59",
                "cviz3": "#D31F6B",
                "cviz4": "#FFD00A",
                "cviz5": "#18C38A",
                "cviz6": "#098CB2",
                "cviz7": "#EA5B86",
                "cviz8": "#9B469B",
                "cviz9": "#F4763D",
              },
              "polarizes": Object {
                "cviz21": "#869F1E",
                "cviz22": "#A4991C",
                "cviz23": "#C4931A",
                "cviz24": "#E68C17",
                "cviz25": "#F27034",
                "cviz26": "#FF5252",
                "cviz27": "#EC3D57",
                "cviz28": "#D8265D",
                "sema1": "#63A621",
                "sema5": "#C51162",
              },
              "sequential": Object {
                "cviz1": "#2DB3E0",
                "cviz1_100": "#E3F1F6",
                "cviz1_200": "#CFEAF3",
                "cviz1_300": "#BAE3F3",
                "cviz1_400": "#A6DCEE",
                "cviz1_500": "#92D5EC",
                "cviz1_600": "#7ECEE9",
                "cviz1_700": "#69C7E7",
                "cviz1_800": "#55C0E4",
                "cviz1_900": "#40B9E2",
              },
              "undefinedState": Object {
                "atmo5": "#DEDEDE",
              },
            },
          },
        },
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiAppBar": Object {
            "colorDefault": Object {
              "backgroundColor": "#FFFFFF",
              "contrastText": "#414141",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "height": "50px",
              },
              "borderTop": "4px solid #CC0000",
            },
          },
          "MuiIconButton": Object {
            "root": Object {
              "&:focus": Object {
                "outlineColor": "Highlight",
                "outlineOffset": -2,
                "outlineStyle": "auto",
                "outlineWidth": 4,
              },
              "&:hover": Object {
                "backgroundColor": "#F0F0F0",
              },
              "borderRadius": 0,
              "padding": 0,
            },
          },
          "MuiToolbar": Object {
            "dense": Object {
              "minHeight": "46px",
            },
            "gutters": Object {
              "@media (min-width:600px)": Object {
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "paddingLeft": "20px",
              "paddingRight": "20px",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "minHeight": "46px",
              },
              "alignItems": "center",
            },
          },
        },
        "palette": Object {
          "acce0": "#FFFFFF",
          "acce1": "#414141",
          "acce2": "#146BD2",
          "acce2h": "#4389DB",
          "acce3": "#CC0000",
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "atmo1": "#FFFFFF",
          "atmo2": "#F9F9F9",
          "atmo3": "#F5F5F5",
          "atmo4": "#F0F0F0",
          "atmo5": "#DEDEDE",
          "atmo6": "#BCBCBC",
          "atmo7": "#999999",
          "augmentColor": [Function],
          "background": Object {
            "default": "#F9F9F9",
            "paper": "#fff",
          },
          "base1": "#FFFFFF",
          "base2": "#414141",
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(14, 74, 147)",
            "light": "#4389DB",
            "main": "#146BD2",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "rgb(45, 45, 45)",
            "light": "#999999",
            "main": "#414141",
          },
          "sema1": "#63A621",
          "sema10": "#EF9A9A",
          "sema11": "#E57373",
          "sema12": "#EF5350",
          "sema13": "#E53935",
          "sema14": "#C62828",
          "sema15": "#80DEEA",
          "sema16": "#4DD0E1",
          "sema17": "#26C6DA",
          "sema18": "#00ACC1",
          "sema19": "#00838F",
          "sema2": "#72CCCB",
          "sema3": "#E68C17",
          "sema4": "#FF5252",
          "sema5": "#C51162",
          "sema6": "#AA00FF",
          "sema7": "#D3E3F6",
          "sema8": "#DFECD1",
          "sema9": "#F5D8D8",
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "supp1": "#0F8B8D",
          "supp2": "#734B6D",
          "supp3": "#4E7599",
          "supp4": "#C19C31",
          "supp5": "#546B6B",
          "text": Object {
            "disabled": "#999999",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "#414141",
            "secondary": "rgba(0, 0, 0, 0.54)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {
          "MuiButtonBase": Object {
            "disableRipple": true,
          },
          "MuiInput": Object {
            "disableUnderline": true,
          },
        },
        "shadows": Array [
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
        ],
        "shape": Object {
          "borderRadius": 0,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "body2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "button": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": Array [
            "'Open Sans'",
            "Arial",
            "Helvetica",
            "sans-serif",
          ],
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h3": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h4": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h5": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "subtitle2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "12px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "16px",
          },
          "suppressDeprecationWarnings": true,
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <WithStyles(CssBaseline)>
      <CssBaseline
        classes={Object {}}
      />
    </WithStyles(CssBaseline)>
    <WithStyles(List)
      condensed={false}
      hasTooltips={false}
      id=""
      labels={
        Object {
          "selectAll": "All",
          "selectionConjunction": "of",
        }
      }
      multiSelect={false}
      onChange={[Function]}
      onClick={[Function]}
      selectDefault={false}
      selectable={true}
      showSelectAll={false}
      singleSelectionToggle={true}
      useRouter={false}
      useSelector={false}
      values={
        Array [
          Object {
            "iconCallback": [Function],
            "label": "Value 1",
          },
          Object {
            "label": "Value 2",
          },
          Object {
            "label": "Value 3",
            "showNavIcon": true,
          },
        ]
      }
    >
      <List
        classes={
          Object {
            "box": "HvList-box-340",
            "condensed": "HvList-condensed-329",
            "disabled": "HvList-disabled-334",
            "label": "HvList-label-336",
            "labelIconLeftPadding": "HvList-labelIconLeftPadding-337",
            "listItem": "HvList-listItem-328",
            "noIconLeftPadding": "HvList-noIconLeftPadding-338",
            "root": "HvList-root-327",
            "selectAll": "HvList-selectAll-333",
            "selected": "HvList-selected-332",
            "selector": "HvList-selector-330",
            "selectorContainer": "HvList-selectorContainer-331",
            "textDisabled": "HvList-textDisabled-335",
            "truncate": "HvList-truncate-339",
          }
        }
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={false}
        onChange={[Function]}
        onClick={[Function]}
        selectDefault={false}
        selectable={true}
        showSelectAll={false}
        singleSelectionToggle={true}
        useRouter={false}
        useSelector={false}
        values={
          Array [
            Object {
              "iconCallback": [Function],
              "label": "Value 1",
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
              "showNavIcon": true,
            },
          ]
        }
      >
        <div>
          <ul
            className="HvList-root-327"
            id="hv-list-7"
            role="listbox"
          >
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": 0,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="0"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-327"
                      id="hv-list-7"
                      role="listbox"
                    >
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <div
                          class="HvIconLineChart-root-348 HvIconLineChart-rootS-350"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        >
                          Value 3
                        </p>
                        <div
                          class="HvList-box-340 HvIconDropRightXS-root-378 HvIconDropRightXS-rootXs-379"
                        >
                          <svg
                            focusable="false"
                            height="12px"
                            viewBox="0 0 12 12"
                            width="12px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-343",
                    "externalReference": "Focus-externalReference-346",
                    "falseFocus": "Focus-falseFocus-347",
                    "focusDisabled": "Focus-focusDisabled-344",
                    "focused": "Focus-focused-345",
                    "root": "Focus-root-341",
                    "selected": "Focus-selected-342",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-327"
                        id="hv-list-7"
                        role="listbox"
                      >
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvIconLineChart-root-348 HvIconLineChart-rootS-350"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 3
                          </p>
                          <div
                            class="HvList-box-340 HvIconDropRightXS-root-378 HvIconDropRightXS-rootXs-379"
                          >
                            <svg
                              focusable="false"
                              height="12px"
                              viewBox="0 0 12 12"
                              width="12px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    className="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                    id="hv-list-7-item-0"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <WithStyles(LineChart)>
                      <LineChart
                        classes={
                          Object {
                            "root": "HvIconLineChart-root-348",
                            "rootL": "HvIconLineChart-rootL-352",
                            "rootM": "HvIconLineChart-rootM-351",
                            "rootS": "HvIconLineChart-rootS-350",
                            "rootXs": "HvIconLineChart-rootXs-349",
                          }
                        }
                      >
                        <div
                          className="HvIconLineChart-root-348 HvIconLineChart-rootS-350"
                        >
                          <svg
                            focusable={false}
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              className="color0"
                              d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </LineChart>
                    </WithStyles(LineChart)>
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                        component={null}
                        paragraph={false}
                        variant="normalText"
                      >
                        <ForwardRef
                          className="HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-355",
                              "4xlTitle": "HvTypography-4xlTitle-354",
                              "5xlTitle": "HvTypography-5xlTitle-353",
                              "baseFontFamily": "HvTypography-baseFontFamily-376",
                              "disabledButtonText": "HvTypography-disabledButtonText-367",
                              "disabledText": "HvTypography-disabledText-374",
                              "highlightText": "HvTypography-highlightText-363",
                              "infoText": "HvTypography-infoText-372",
                              "inlineLink": "HvTypography-inlineLink-366",
                              "lTitle": "HvTypography-lTitle-358",
                              "labelText": "HvTypography-labelText-371",
                              "mTitle": "HvTypography-mTitle-359",
                              "margin": "HvTypography-margin-377",
                              "normalText": "HvTypography-normalText-364",
                              "placeholderText": "HvTypography-placeholderText-368",
                              "sLink": "HvTypography-sLink-373",
                              "sText": "HvTypography-sText-370",
                              "sTitle": "HvTypography-sTitle-360",
                              "selectedNavText": "HvTypography-selectedNavText-369",
                              "selectedText": "HvTypography-selectedText-365",
                              "vizText": "HvTypography-vizText-375",
                              "xlTitle": "HvTypography-xlTitle-357",
                              "xsTitle": "HvTypography-xsTitle-361",
                              "xxlTitle": "HvTypography-xxlTitle-356",
                              "xxsTitle": "HvTypography-xxsTitle-362",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="normalText"
                        >
                          <p
                            className="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                          >
                            Value 1
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="1"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-327"
                      id="hv-list-7"
                      role="listbox"
                    >
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <div
                          class="HvIconLineChart-root-348 HvIconLineChart-rootS-350"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        >
                          Value 3
                        </p>
                        <div
                          class="HvList-box-340 HvIconDropRightXS-root-378 HvIconDropRightXS-rootXs-379"
                        >
                          <svg
                            focusable="false"
                            height="12px"
                            viewBox="0 0 12 12"
                            width="12px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-343",
                    "externalReference": "Focus-externalReference-346",
                    "falseFocus": "Focus-falseFocus-347",
                    "focusDisabled": "Focus-focusDisabled-344",
                    "focused": "Focus-focused-345",
                    "root": "Focus-root-341",
                    "selected": "Focus-selected-342",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-327"
                        id="hv-list-7"
                        role="listbox"
                      >
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvIconLineChart-root-348 HvIconLineChart-rootS-350"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 3
                          </p>
                          <div
                            class="HvList-box-340 HvIconDropRightXS-root-378 HvIconDropRightXS-rootXs-379"
                          >
                            <svg
                              focusable="false"
                              height="12px"
                              viewBox="0 0 12 12"
                              width="12px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    className="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                    id="hv-list-7-item-1"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        component={null}
                        paragraph={false}
                        variant="normalText"
                      >
                        <ForwardRef
                          className="HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-355",
                              "4xlTitle": "HvTypography-4xlTitle-354",
                              "5xlTitle": "HvTypography-5xlTitle-353",
                              "baseFontFamily": "HvTypography-baseFontFamily-376",
                              "disabledButtonText": "HvTypography-disabledButtonText-367",
                              "disabledText": "HvTypography-disabledText-374",
                              "highlightText": "HvTypography-highlightText-363",
                              "infoText": "HvTypography-infoText-372",
                              "inlineLink": "HvTypography-inlineLink-366",
                              "lTitle": "HvTypography-lTitle-358",
                              "labelText": "HvTypography-labelText-371",
                              "mTitle": "HvTypography-mTitle-359",
                              "margin": "HvTypography-margin-377",
                              "normalText": "HvTypography-normalText-364",
                              "placeholderText": "HvTypography-placeholderText-368",
                              "sLink": "HvTypography-sLink-373",
                              "sText": "HvTypography-sText-370",
                              "sTitle": "HvTypography-sTitle-360",
                              "selectedNavText": "HvTypography-selectedNavText-369",
                              "selectedText": "HvTypography-selectedText-365",
                              "vizText": "HvTypography-vizText-375",
                              "xlTitle": "HvTypography-xlTitle-357",
                              "xsTitle": "HvTypography-xsTitle-361",
                              "xxlTitle": "HvTypography-xxlTitle-356",
                              "xxsTitle": "HvTypography-xxsTitle-362",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="normalText"
                        >
                          <p
                            className="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 2
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="2"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-327"
                      id="hv-list-7"
                      role="listbox"
                    >
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-0"
                        role="option"
                        tabindex="0"
                      >
                        <div
                          class="HvIconLineChart-root-348 HvIconLineChart-rootS-350"
                        >
                          <svg
                            focusable="false"
                            height="16px"
                            viewBox="0 0 16 16"
                            width="16px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                        >
                          Value 1
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        >
                          Value 2
                        </p>
                      </li>
                      <li
                        class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                        id="hv-list-7-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <p
                          class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        >
                          Value 3
                        </p>
                        <div
                          class="HvList-box-340 HvIconDropRightXS-root-378 HvIconDropRightXS-rootXs-379"
                        >
                          <svg
                            focusable="false"
                            height="12px"
                            viewBox="0 0 12 12"
                            width="12px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              class="color0"
                              d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-343",
                    "externalReference": "Focus-externalReference-346",
                    "falseFocus": "Focus-falseFocus-347",
                    "focusDisabled": "Focus-focusDisabled-344",
                    "focused": "Focus-focused-345",
                    "root": "Focus-root-341",
                    "selected": "Focus-selected-342",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-327"
                        id="hv-list-7"
                        role="listbox"
                      >
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-0"
                          role="option"
                          tabindex="0"
                        >
                          <div
                            class="HvIconLineChart-root-348 HvIconLineChart-rootS-350"
                          >
                            <svg
                              focusable="false"
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M1.086 11.453l-.707-.707 5.559-5.558 4.2 4.2 4.832-4.831.707.707-5.539 5.536-4.2-4.2zM0 15h16v1H0z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-labelIconLeftPadding-337"
                          >
                            Value 1
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 2
                          </p>
                        </li>
                        <li
                          class="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                          id="hv-list-7-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <p
                            class="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 3
                          </p>
                          <div
                            class="HvList-box-340 HvIconDropRightXS-root-378 HvIconDropRightXS-rootXs-379"
                          >
                            <svg
                              focusable="false"
                              height="12px"
                              viewBox="0 0 12 12"
                              width="12px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                class="color0"
                                d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    className="HvList-listItem-328 Focus-root-341 Focus-focusDisabled-344"
                    id="hv-list-7-item-2"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <Text>
                      <WithStyles(ForwardRef)
                        className="HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                        component={null}
                        paragraph={false}
                        variant="normalText"
                      >
                        <ForwardRef
                          className="HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          classes={
                            Object {
                              "3xlTitle": "HvTypography-3xlTitle-355",
                              "4xlTitle": "HvTypography-4xlTitle-354",
                              "5xlTitle": "HvTypography-5xlTitle-353",
                              "baseFontFamily": "HvTypography-baseFontFamily-376",
                              "disabledButtonText": "HvTypography-disabledButtonText-367",
                              "disabledText": "HvTypography-disabledText-374",
                              "highlightText": "HvTypography-highlightText-363",
                              "infoText": "HvTypography-infoText-372",
                              "inlineLink": "HvTypography-inlineLink-366",
                              "lTitle": "HvTypography-lTitle-358",
                              "labelText": "HvTypography-labelText-371",
                              "mTitle": "HvTypography-mTitle-359",
                              "margin": "HvTypography-margin-377",
                              "normalText": "HvTypography-normalText-364",
                              "placeholderText": "HvTypography-placeholderText-368",
                              "sLink": "HvTypography-sLink-373",
                              "sText": "HvTypography-sText-370",
                              "sTitle": "HvTypography-sTitle-360",
                              "selectedNavText": "HvTypography-selectedNavText-369",
                              "selectedText": "HvTypography-selectedText-365",
                              "vizText": "HvTypography-vizText-375",
                              "xlTitle": "HvTypography-xlTitle-357",
                              "xsTitle": "HvTypography-xsTitle-361",
                              "xxlTitle": "HvTypography-xxlTitle-356",
                              "xxsTitle": "HvTypography-xxsTitle-362",
                            }
                          }
                          component={null}
                          paragraph={false}
                          variant="normalText"
                        >
                          <p
                            className="HvTypography-normalText-364 HvTypography-baseFontFamily-376 HvTypography-margin-377 HvList-label-336 HvList-truncate-339 HvList-noIconLeftPadding-338"
                          >
                            Value 3
                          </p>
                        </ForwardRef>
                      </WithStyles(ForwardRef)>
                    </Text>
                    <WithStyles(DropRightXS)
                      className="HvList-box-340"
                      iconSize="XS"
                    >
                      <DropRightXS
                        className="HvList-box-340"
                        classes={
                          Object {
                            "root": "HvIconDropRightXS-root-378",
                            "rootL": "HvIconDropRightXS-rootL-382",
                            "rootM": "HvIconDropRightXS-rootM-381",
                            "rootS": "HvIconDropRightXS-rootS-380",
                            "rootXs": "HvIconDropRightXS-rootXs-379",
                          }
                        }
                        iconSize="XS"
                      >
                        <div
                          className="HvList-box-340 HvIconDropRightXS-root-378 HvIconDropRightXS-rootXs-379"
                        >
                          <svg
                            focusable={false}
                            height="12px"
                            viewBox="0 0 12 12"
                            width="12px"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              className="color0"
                              d="M8.65 6.00006l-4.6 4.6-.7-.7L7.25 6l-3.9-3.9.7-.7z"
                              fill="#414141"
                            />
                          </svg>
                        </div>
                      </DropRightXS>
                    </WithStyles(DropRightXS)>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
          </ul>
        </div>
      </List>
    </WithStyles(List)>
  </ThemeProvider>
</HvProvider>
`;

exports[`<List /> Single selection with selectors should render correctly 1`] = `
<HvProvider
  changeTheme={[Function]}
  router={null}
  theme={null}
  uiKitTheme="dawn"
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1270,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "direction": "ltr",
        "hv": Object {
          "deprecated": Object {
            "palette": Object {
              "accent": Object {},
              "atmosphere": Object {},
              "base": Object {},
              "semantic": Object {},
              "support": Object {},
            },
            "typography": Object {
              "disabledText": Object {},
            },
            "viz": Object {
              "palette": Object {
                "categorical": Object {},
                "polarizes": Object {},
                "sequential": Object {},
                "undefinedState": Object {},
              },
            },
          },
          "name": "dawn",
          "palette": Object {
            "accent": Object {
              "acce0": "#FFFFFF",
              "acce1": "#414141",
              "acce2": "#146BD2",
              "acce2h": "#4389DB",
              "acce3": "#CC0000",
            },
            "atmosphere": Object {
              "atmo1": "#FFFFFF",
              "atmo2": "#F9F9F9",
              "atmo3": "#F5F5F5",
              "atmo4": "#F0F0F0",
              "atmo5": "#DEDEDE",
              "atmo6": "#BCBCBC",
              "atmo7": "#999999",
            },
            "base": Object {
              "base1": "#FFFFFF",
              "base2": "#414141",
            },
            "semantic": Object {
              "sema1": "#63A621",
              "sema10": "#EF9A9A",
              "sema11": "#E57373",
              "sema12": "#EF5350",
              "sema13": "#E53935",
              "sema14": "#C62828",
              "sema15": "#80DEEA",
              "sema16": "#4DD0E1",
              "sema17": "#26C6DA",
              "sema18": "#00ACC1",
              "sema19": "#00838F",
              "sema2": "#72CCCB",
              "sema3": "#E68C17",
              "sema4": "#FF5252",
              "sema5": "#C51162",
              "sema6": "#AA00FF",
              "sema7": "#D3E3F6",
              "sema8": "#DFECD1",
              "sema9": "#F5D8D8",
            },
            "support": Object {
              "supp1": "#0F8B8D",
              "supp2": "#734B6D",
              "supp3": "#4E7599",
              "supp4": "#C19C31",
              "supp5": "#546B6B",
            },
          },
          "spacing": Object {
            "lg": "60",
            "md": "30",
            "sm": "20",
            "xl": "90",
            "xs": "10",
          },
          "type": "light",
          "typography": Object {
            "3xlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "4xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "5xlTitle": Object {
              "color": "#414141",
              "fontSize": "52px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "60px",
            },
            "disabledButtonText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "disabledText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "highlightText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "infoText": Object {
              "color": "#999999",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "inlineLink": Object {
              "color": "#146BD2",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "lTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "labelText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "mTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "normalText": Object {
              "color": "#414141",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "placeholderText": Object {
              "color": "#999999",
              "fontSize": "14px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "sLink": Object {
              "color": "#146BD2",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sText": Object {
              "color": "#414141",
              "fontSize": "12px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "16px",
            },
            "sTitle": Object {
              "color": "#414141",
              "fontSize": "22px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "30px",
            },
            "selectedNavText": Object {
              "color": "#CC0000",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "selectedText": Object {
              "background": "#414141",
              "color": "#F9F9F9",
              "fontSize": "14px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "20px",
            },
            "vizText": Object {
              "color": "#414141",
              "fontSize": "10px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "15px",
            },
            "xlTitle": Object {
              "color": "#414141",
              "fontSize": "32px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "40px",
            },
            "xsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "600",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
            "xxlTitle": Object {
              "color": "#414141",
              "fontSize": "42px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "52px",
            },
            "xxsTitle": Object {
              "color": "#414141",
              "fontSize": "18px",
              "fontWeight": "400",
              "letterSpacing": "0.02em",
              "lineHeight": "28px",
            },
          },
          "viz": Object {
            "palette": Object {
              "categorical": Object {
                "cviz1": "#2DB3E0",
                "cviz10": "#419393",
                "cviz11": "#58C9DD",
                "cviz12": "#F8C189",
                "cviz13": "#528BBF",
                "cviz14": "#DE64BD",
                "cviz15": "#73BF9C",
                "cviz16": "#9672C1",
                "cviz17": "#EB95AF",
                "cviz18": "#646A98",
                "cviz19": "#D88136",
                "cviz2": "#FF990D",
                "cviz20": "#309B59",
                "cviz3": "#D31F6B",
                "cviz4": "#FFD00A",
                "cviz5": "#18C38A",
                "cviz6": "#098CB2",
                "cviz7": "#EA5B86",
                "cviz8": "#9B469B",
                "cviz9": "#F4763D",
              },
              "polarizes": Object {
                "cviz21": "#869F1E",
                "cviz22": "#A4991C",
                "cviz23": "#C4931A",
                "cviz24": "#E68C17",
                "cviz25": "#F27034",
                "cviz26": "#FF5252",
                "cviz27": "#EC3D57",
                "cviz28": "#D8265D",
                "sema1": "#63A621",
                "sema5": "#C51162",
              },
              "sequential": Object {
                "cviz1": "#2DB3E0",
                "cviz1_100": "#E3F1F6",
                "cviz1_200": "#CFEAF3",
                "cviz1_300": "#BAE3F3",
                "cviz1_400": "#A6DCEE",
                "cviz1_500": "#92D5EC",
                "cviz1_600": "#7ECEE9",
                "cviz1_700": "#69C7E7",
                "cviz1_800": "#55C0E4",
                "cviz1_900": "#40B9E2",
              },
              "undefinedState": Object {
                "atmo5": "#DEDEDE",
              },
            },
          },
        },
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiAppBar": Object {
            "colorDefault": Object {
              "backgroundColor": "#FFFFFF",
              "contrastText": "#414141",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "height": "50px",
              },
              "borderTop": "4px solid #CC0000",
            },
          },
          "MuiIconButton": Object {
            "root": Object {
              "&:focus": Object {
                "outlineColor": "Highlight",
                "outlineOffset": -2,
                "outlineStyle": "auto",
                "outlineWidth": 4,
              },
              "&:hover": Object {
                "backgroundColor": "#F0F0F0",
              },
              "borderRadius": 0,
              "padding": 0,
            },
          },
          "MuiToolbar": Object {
            "dense": Object {
              "minHeight": "46px",
            },
            "gutters": Object {
              "@media (min-width:600px)": Object {
                "paddingLeft": "20px",
                "paddingRight": "20px",
              },
              "paddingLeft": "20px",
              "paddingRight": "20px",
            },
            "root": Object {
              "@media (min-width: 600px)": Object {
                "minHeight": "46px",
              },
              "alignItems": "center",
            },
          },
        },
        "palette": Object {
          "acce0": "#FFFFFF",
          "acce1": "#414141",
          "acce2": "#146BD2",
          "acce2h": "#4389DB",
          "acce3": "#CC0000",
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "atmo1": "#FFFFFF",
          "atmo2": "#F9F9F9",
          "atmo3": "#F5F5F5",
          "atmo4": "#F0F0F0",
          "atmo5": "#DEDEDE",
          "atmo6": "#BCBCBC",
          "atmo7": "#999999",
          "augmentColor": [Function],
          "background": Object {
            "default": "#F9F9F9",
            "paper": "#fff",
          },
          "base1": "#FFFFFF",
          "base2": "#414141",
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(14, 74, 147)",
            "light": "#4389DB",
            "main": "#146BD2",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "rgb(45, 45, 45)",
            "light": "#999999",
            "main": "#414141",
          },
          "sema1": "#63A621",
          "sema10": "#EF9A9A",
          "sema11": "#E57373",
          "sema12": "#EF5350",
          "sema13": "#E53935",
          "sema14": "#C62828",
          "sema15": "#80DEEA",
          "sema16": "#4DD0E1",
          "sema17": "#26C6DA",
          "sema18": "#00ACC1",
          "sema19": "#00838F",
          "sema2": "#72CCCB",
          "sema3": "#E68C17",
          "sema4": "#FF5252",
          "sema5": "#C51162",
          "sema6": "#AA00FF",
          "sema7": "#D3E3F6",
          "sema8": "#DFECD1",
          "sema9": "#F5D8D8",
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "supp1": "#0F8B8D",
          "supp2": "#734B6D",
          "supp3": "#4E7599",
          "supp4": "#C19C31",
          "supp5": "#546B6B",
          "text": Object {
            "disabled": "#999999",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "#414141",
            "secondary": "rgba(0, 0, 0, 0.54)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {
          "MuiButtonBase": Object {
            "disableRipple": true,
          },
          "MuiInput": Object {
            "disableUnderline": true,
          },
        },
        "shadows": Array [
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
          "none",
        ],
        "shape": Object {
          "borderRadius": 0,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "body2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "button": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
            "textTransform": "uppercase",
          },
          "caption": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 1.66,
          },
          "fontFamily": Array [
            "'Open Sans'",
            "Arial",
            "Helvetica",
            "sans-serif",
          ],
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "32px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "40px",
          },
          "h3": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h4": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "22px",
            "fontWeight": "400",
            "letterSpacing": "0.02em",
            "lineHeight": "30px",
          },
          "h5": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "14px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "20px",
          },
          "subtitle2": Object {
            "color": "#414141",
            "fontFamily": Array [
              "'Open Sans'",
              "Arial",
              "Helvetica",
              "sans-serif",
            ],
            "fontSize": "12px",
            "fontWeight": "600",
            "letterSpacing": "0.02em",
            "lineHeight": "16px",
          },
          "suppressDeprecationWarnings": true,
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <WithStyles(CssBaseline)>
      <CssBaseline
        classes={Object {}}
      />
    </WithStyles(CssBaseline)>
    <WithStyles(List)
      condensed={false}
      hasTooltips={false}
      id=""
      labels={
        Object {
          "selectAll": "All",
          "selectionConjunction": "of",
        }
      }
      multiSelect={false}
      onChange={[Function]}
      onClick={[Function]}
      selectDefault={true}
      selectable={true}
      showSelectAll={false}
      singleSelectionToggle={true}
      useRouter={false}
      useSelector={true}
      values={
        Array [
          Object {
            "label": "Value 1",
          },
          Object {
            "label": "Value 2",
          },
          Object {
            "label": "Value 3",
          },
        ]
      }
    >
      <List
        classes={
          Object {
            "box": "HvList-box-244",
            "condensed": "HvList-condensed-233",
            "disabled": "HvList-disabled-238",
            "label": "HvList-label-240",
            "labelIconLeftPadding": "HvList-labelIconLeftPadding-241",
            "listItem": "HvList-listItem-232",
            "noIconLeftPadding": "HvList-noIconLeftPadding-242",
            "root": "HvList-root-231",
            "selectAll": "HvList-selectAll-237",
            "selected": "HvList-selected-236",
            "selector": "HvList-selector-234",
            "selectorContainer": "HvList-selectorContainer-235",
            "textDisabled": "HvList-textDisabled-239",
            "truncate": "HvList-truncate-243",
          }
        }
        condensed={false}
        hasTooltips={false}
        id=""
        labels={
          Object {
            "selectAll": "All",
            "selectionConjunction": "of",
          }
        }
        multiSelect={false}
        onChange={[Function]}
        onClick={[Function]}
        selectDefault={true}
        selectable={true}
        showSelectAll={false}
        singleSelectionToggle={true}
        useRouter={false}
        useSelector={true}
        values={
          Array [
            Object {
              "label": "Value 1",
            },
            Object {
              "label": "Value 2",
            },
            Object {
              "label": "Value 3",
            },
          ]
        }
      >
        <div>
          <ul
            className="HvList-root-231"
            id="hv-list-6"
            role="listbox"
          >
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": 0,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="0"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-231"
                      id="hv-list-6"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-selected-246 Focus-focusDisabled-248"
                        id="hv-list-6-item-0"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-0-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-0-selector-input"
                                tabindex="0"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonSelected-root-287 HvIconRadioButtonSelected-rootS-289"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 12a4.013 4.013 0 0 1-4-4 4.013 4.013 0 0 1 4-4 4.013 4.013 0 0 1 4 4 4.013 4.013 0 0 1-4 4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                        id="hv-list-6-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-1-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-1-selector-input"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                        id="hv-list-6-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-2-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-2-selector-input"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={true}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-247",
                    "externalReference": "Focus-externalReference-250",
                    "falseFocus": "Focus-falseFocus-251",
                    "focusDisabled": "Focus-focusDisabled-248",
                    "focused": "Focus-focused-249",
                    "root": "Focus-root-245",
                    "selected": "Focus-selected-246",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": 0,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-231"
                        id="hv-list-6"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-selected-246 Focus-focusDisabled-248"
                          id="hv-list-6-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-0-selector-input"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonSelected-root-287 HvIconRadioButtonSelected-rootS-289"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 12a4.013 4.013 0 0 1-4-4 4.013 4.013 0 0 1 4-4 4.013 4.013 0 0 1 4 4 4.013 4.013 0 0 1-4 4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                          id="hv-list-6-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-1-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                          id="hv-list-6-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-2-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={true}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    aria-selected={true}
                    className="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-selected-246 Focus-focusDisabled-248"
                    id="hv-list-6-item-0"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={true}
                  >
                    <WithStyles(HvRadio)
                      checked={true}
                      className=""
                      classes={
                        Object {
                          "container": "HvList-selectorContainer-235",
                          "labelTypography": "HvList-truncate-243",
                        }
                      }
                      disabled={false}
                      id="hv-list-6-item-0-selector"
                      label="Value 1"
                      labelPlacement="end"
                      onChange={[Function]}
                      value=""
                    >
                      <HvRadio
                        checked={true}
                        className=""
                        classes={
                          Object {
                            "container": "HvRadioButton-container-252 HvList-selectorContainer-235",
                            "disableFocus": "HvRadioButton-disableFocus-253",
                            "icon": "HvRadioButton-icon-259",
                            "labelDisabled": "HvRadioButton-labelDisabled-255",
                            "labelEnd": "HvRadioButton-labelEnd-256",
                            "labelStart": "HvRadioButton-labelStart-257",
                            "labelTypography": "HvRadioButton-labelTypography-254 HvList-truncate-243",
                            "radio": "HvRadioButton-radio-258",
                          }
                        }
                        disabled={false}
                        id="hv-list-6-item-0-selector"
                        label="Value 1"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          className="HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          classes={
                            Object {
                              "disabled": "HvRadioButton-labelDisabled-255",
                              "label": "HvRadioButton-labelTypography-254 HvList-truncate-243",
                            }
                          }
                          control={
                            <ForwardRef(WithStyles)
                              checked={true}
                              checkedIcon={
                                <ForwardRef(WithStyles)
                                  className="HvRadioButton-icon-259"
                                />
                              }
                              className="HvRadioButton-radio-258"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <ForwardRef(WithStyles)
                                  className="HvRadioButton-icon-259"
                                />
                              }
                              id="hv-list-6-item-0-selector-input"
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          id="hv-list-6-item-0-selector"
                          label="Value 1"
                          labelPlacement="end"
                        >
                          <ForwardRef(FormControlLabel)
                            className="HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            classes={
                              Object {
                                "disabled": "Mui-disabled HvRadioButton-labelDisabled-255",
                                "label": "MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                className="HvRadioButton-radio-258"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                id="hv-list-6-item-0-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            id="hv-list-6-item-0-selector"
                            label="Value 1"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                              id="hv-list-6-item-0-selector"
                            >
                              <WithStyles(ForwardRef(Radio))
                                checked={true}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                className="HvRadioButton-radio-258"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                id="hv-list-6-item-0-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <ForwardRef(Radio)
                                  checked={true}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon-259"
                                    />
                                  }
                                  className="HvRadioButton-radio-258"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiRadio-colorPrimary",
                                      "colorSecondary": "MuiRadio-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiRadio-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon-259"
                                    />
                                  }
                                  id="hv-list-6-item-0-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={true}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon-259"
                                      />
                                    }
                                    className="HvRadioButton-radio-258"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon-259"
                                      />
                                    }
                                    id="hv-list-6-item-0-selector-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="radio"
                                    value=""
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={true}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon-259"
                                        />
                                      }
                                      className="HvRadioButton-radio-258"
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-272 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-273 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-274",
                                          "root": "PrivateSwitchBase-root-271 MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon-259"
                                        />
                                      }
                                      id="hv-list-6-item-0-selector-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="radio"
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={true}
                                                    className="PrivateSwitchBase-input-274"
                                                    disabled={false}
                                                    id="hv-list-6-item-0-selector-input"
                                                    onChange={[Function]}
                                                    type="radio"
                                                    value=""
                                                  />
                                                  <WithStyles(RadioButtonSelected)
                                                    className="HvRadioButton-icon-259"
                                                  >
                                                    <RadioButtonSelected
                                                      className="HvRadioButton-icon-259"
                                                      classes={
                                                        Object {
                                                          "root": "HvIconRadioButtonSelected-root-287",
                                                          "rootL": "HvIconRadioButtonSelected-rootL-291",
                                                          "rootM": "HvIconRadioButtonSelected-rootM-290",
                                                          "rootS": "HvIconRadioButtonSelected-rootS-289",
                                                          "rootXs": "HvIconRadioButtonSelected-rootXs-288",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="HvRadioButton-icon-259 HvIconRadioButtonSelected-root-287 HvIconRadioButtonSelected-rootS-289"
                                                      >
                                                        <svg
                                                          focusable={false}
                                                          height="16px"
                                                          viewBox="0 0 16 16"
                                                          width="16px"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            className="color0"
                                                            d="M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                                                            fill="#414141"
                                                          />
                                                          <path
                                                            className="color1"
                                                            d="M8 12a4.013 4.013 0 0 1-4-4 4.013 4.013 0 0 1 4-4 4.013 4.013 0 0 1 4 4 4.013 4.013 0 0 1-4 4z"
                                                            fill="#FFFFFF"
                                                          />
                                                        </svg>
                                                      </div>
                                                    </RadioButtonSelected>
                                                  </WithStyles(RadioButtonSelected)>
                                                </span>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Radio)>
                              </WithStyles(ForwardRef(Radio))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                                  >
                                    Value 1
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </HvRadio>
                    </WithStyles(HvRadio)>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="1"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-231"
                      id="hv-list-6"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-selected-246 Focus-focusDisabled-248"
                        id="hv-list-6-item-0"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-0-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-0-selector-input"
                                tabindex="0"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonSelected-root-287 HvIconRadioButtonSelected-rootS-289"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 12a4.013 4.013 0 0 1-4-4 4.013 4.013 0 0 1 4-4 4.013 4.013 0 0 1 4 4 4.013 4.013 0 0 1-4 4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                        id="hv-list-6-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-1-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-1-selector-input"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                        id="hv-list-6-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-2-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-2-selector-input"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-247",
                    "externalReference": "Focus-externalReference-250",
                    "falseFocus": "Focus-falseFocus-251",
                    "focusDisabled": "Focus-focusDisabled-248",
                    "focused": "Focus-focused-249",
                    "root": "Focus-root-245",
                    "selected": "Focus-selected-246",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-231"
                        id="hv-list-6"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-selected-246 Focus-focusDisabled-248"
                          id="hv-list-6-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-0-selector-input"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonSelected-root-287 HvIconRadioButtonSelected-rootS-289"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 12a4.013 4.013 0 0 1-4-4 4.013 4.013 0 0 1 4-4 4.013 4.013 0 0 1 4 4 4.013 4.013 0 0 1-4 4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                          id="hv-list-6-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-1-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                          id="hv-list-6-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-2-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    className="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                    id="hv-list-6-item-1"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <WithStyles(HvRadio)
                      checked={false}
                      className=""
                      classes={
                        Object {
                          "container": "HvList-selectorContainer-235",
                          "labelTypography": "HvList-truncate-243",
                        }
                      }
                      disabled={false}
                      id="hv-list-6-item-1-selector"
                      label="Value 2"
                      labelPlacement="end"
                      onChange={[Function]}
                      value=""
                    >
                      <HvRadio
                        checked={false}
                        className=""
                        classes={
                          Object {
                            "container": "HvRadioButton-container-252 HvList-selectorContainer-235",
                            "disableFocus": "HvRadioButton-disableFocus-253",
                            "icon": "HvRadioButton-icon-259",
                            "labelDisabled": "HvRadioButton-labelDisabled-255",
                            "labelEnd": "HvRadioButton-labelEnd-256",
                            "labelStart": "HvRadioButton-labelStart-257",
                            "labelTypography": "HvRadioButton-labelTypography-254 HvList-truncate-243",
                            "radio": "HvRadioButton-radio-258",
                          }
                        }
                        disabled={false}
                        id="hv-list-6-item-1-selector"
                        label="Value 2"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          className="HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          classes={
                            Object {
                              "disabled": "HvRadioButton-labelDisabled-255",
                              "label": "HvRadioButton-labelTypography-254 HvList-truncate-243",
                            }
                          }
                          control={
                            <ForwardRef(WithStyles)
                              checked={false}
                              checkedIcon={
                                <ForwardRef(WithStyles)
                                  className="HvRadioButton-icon-259"
                                />
                              }
                              className="HvRadioButton-radio-258"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <ForwardRef(WithStyles)
                                  className="HvRadioButton-icon-259"
                                />
                              }
                              id="hv-list-6-item-1-selector-input"
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          id="hv-list-6-item-1-selector"
                          label="Value 2"
                          labelPlacement="end"
                        >
                          <ForwardRef(FormControlLabel)
                            className="HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            classes={
                              Object {
                                "disabled": "Mui-disabled HvRadioButton-labelDisabled-255",
                                "label": "MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                className="HvRadioButton-radio-258"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                id="hv-list-6-item-1-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            id="hv-list-6-item-1-selector"
                            label="Value 2"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                              id="hv-list-6-item-1-selector"
                            >
                              <WithStyles(ForwardRef(Radio))
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                className="HvRadioButton-radio-258"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                id="hv-list-6-item-1-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <ForwardRef(Radio)
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon-259"
                                    />
                                  }
                                  className="HvRadioButton-radio-258"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiRadio-colorPrimary",
                                      "colorSecondary": "MuiRadio-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiRadio-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon-259"
                                    />
                                  }
                                  id="hv-list-6-item-1-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon-259"
                                      />
                                    }
                                    className="HvRadioButton-radio-258"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon-259"
                                      />
                                    }
                                    id="hv-list-6-item-1-selector-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="radio"
                                    value=""
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon-259"
                                        />
                                      }
                                      className="HvRadioButton-radio-258"
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-272 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-273 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-274",
                                          "root": "PrivateSwitchBase-root-271 MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon-259"
                                        />
                                      }
                                      id="hv-list-6-item-1-selector-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="radio"
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-274"
                                                    disabled={false}
                                                    id="hv-list-6-item-1-selector-input"
                                                    onChange={[Function]}
                                                    type="radio"
                                                    value=""
                                                  />
                                                  <WithStyles(RadioButtonUnselected)
                                                    className="HvRadioButton-icon-259"
                                                  >
                                                    <RadioButtonUnselected
                                                      className="HvRadioButton-icon-259"
                                                      classes={
                                                        Object {
                                                          "root": "HvIconRadioButtonUnselected-root-322",
                                                          "rootL": "HvIconRadioButtonUnselected-rootL-326",
                                                          "rootM": "HvIconRadioButtonUnselected-rootM-325",
                                                          "rootS": "HvIconRadioButtonUnselected-rootS-324",
                                                          "rootXs": "HvIconRadioButtonUnselected-rootXs-323",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                                      >
                                                        <svg
                                                          focusable={false}
                                                          height="16px"
                                                          viewBox="0 0 16 16"
                                                          width="16px"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            className="color0"
                                                            d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                                            fill="#FFFFFF"
                                                          />
                                                          <path
                                                            className="color1"
                                                            d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                                            fill="#414141"
                                                          />
                                                        </svg>
                                                      </div>
                                                    </RadioButtonUnselected>
                                                  </WithStyles(RadioButtonUnselected)>
                                                </span>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Radio)>
                              </WithStyles(ForwardRef(Radio))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                                  >
                                    Value 2
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </HvRadio>
                    </WithStyles(HvRadio)>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
            <WithStyles(Focus)
              configuration={
                Object {
                  "tabIndex": -1,
                }
              }
              disabled={false}
              focusDisabled={true}
              focusOnClick={false}
              key="2"
              rootRef={
                Object {
                  "current": <div>
                    <ul
                      class="HvList-root-231"
                      id="hv-list-6"
                      role="listbox"
                    >
                      <li
                        aria-selected="true"
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-selected-246 Focus-focusDisabled-248"
                        id="hv-list-6-item-0"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-0-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-0-selector-input"
                                tabindex="0"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonSelected-root-287 HvIconRadioButtonSelected-rootS-289"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                                    fill="#414141"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 12a4.013 4.013 0 0 1-4-4 4.013 4.013 0 0 1 4-4 4.013 4.013 0 0 1 4 4 4.013 4.013 0 0 1-4 4z"
                                    fill="#FFFFFF"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 1
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                        id="hv-list-6-item-1"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-1-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-1-selector-input"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 2
                          </span>
                        </label>
                      </li>
                      <li
                        class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                        id="hv-list-6-item-2"
                        role="option"
                        tabindex="-1"
                      >
                        <label
                          class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          id="hv-list-6-item-2-selector"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-274"
                                id="hv-list-6-item-2-selector-input"
                                tabindex="-1"
                                type="radio"
                                value=""
                              />
                              <div
                                class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                              >
                                <svg
                                  focusable="false"
                                  height="16px"
                                  viewBox="0 0 16 16"
                                  width="16px"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    class="color0"
                                    d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                    fill="#FFFFFF"
                                  />
                                  <path
                                    class="color1"
                                    d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                    fill="#414141"
                                  />
                                </svg>
                              </div>
                            </span>
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                          >
                            Value 3
                          </span>
                        </label>
                      </li>
                    </ul>
                  </div>,
                }
              }
              selected={false}
              strategy="listbox"
              useArrows={true}
              useFalseFocus={false}
            >
              <Focus
                classes={
                  Object {
                    "disabled": "Focus-disabled-247",
                    "externalReference": "Focus-externalReference-250",
                    "falseFocus": "Focus-falseFocus-251",
                    "focusDisabled": "Focus-focusDisabled-248",
                    "focused": "Focus-focused-249",
                    "root": "Focus-root-245",
                    "selected": "Focus-selected-246",
                  }
                }
                configuration={
                  Object {
                    "tabIndex": -1,
                  }
                }
                disabled={false}
                focusDisabled={true}
                focusOnClick={false}
                rootRef={
                  Object {
                    "current": <div>
                      <ul
                        class="HvList-root-231"
                        id="hv-list-6"
                        role="listbox"
                      >
                        <li
                          aria-selected="true"
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-selected-246 Focus-focusDisabled-248"
                          id="hv-list-6-item-0"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-0-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258 PrivateSwitchBase-checked-272 Mui-checked"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  checked=""
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-0-selector-input"
                                  tabindex="0"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonSelected-root-287 HvIconRadioButtonSelected-rootS-289"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8z"
                                      fill="#414141"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 12a4.013 4.013 0 0 1-4-4 4.013 4.013 0 0 1 4-4 4.013 4.013 0 0 1 4 4 4.013 4.013 0 0 1-4 4z"
                                      fill="#FFFFFF"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 1
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                          id="hv-list-6-item-1"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-1-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-1-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 2
                            </span>
                          </label>
                        </li>
                        <li
                          class="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                          id="hv-list-6-item-2"
                          role="option"
                          tabindex="-1"
                        >
                          <label
                            class="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            id="hv-list-6-item-2-selector"
                          >
                            <span
                              aria-disabled="false"
                              class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                            >
                              <span
                                class="MuiIconButton-label"
                              >
                                <input
                                  class="PrivateSwitchBase-input-274"
                                  id="hv-list-6-item-2-selector-input"
                                  tabindex="-1"
                                  type="radio"
                                  value=""
                                />
                                <div
                                  class="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                >
                                  <svg
                                    focusable="false"
                                    height="16px"
                                    viewBox="0 0 16 16"
                                    width="16px"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      class="color0"
                                      d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                      fill="#FFFFFF"
                                    />
                                    <path
                                      class="color1"
                                      d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                      fill="#414141"
                                    />
                                  </svg>
                                </div>
                              </span>
                            </span>
                            <span
                              class="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                            >
                              Value 3
                            </span>
                          </label>
                        </li>
                      </ul>
                    </div>,
                  }
                }
                selected={false}
                strategy="listbox"
                useArrows={true}
                useFalseFocus={false}
              >
                <ConditionalWrapper
                  condition={false}
                  wrapper={[Function]}
                >
                  <li
                    className="HvList-listItem-232 HvList-selector-234 Focus-root-245 Focus-focusDisabled-248"
                    id="hv-list-6-item-2"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    role="option"
                    selected={false}
                  >
                    <WithStyles(HvRadio)
                      checked={false}
                      className=""
                      classes={
                        Object {
                          "container": "HvList-selectorContainer-235",
                          "labelTypography": "HvList-truncate-243",
                        }
                      }
                      disabled={false}
                      id="hv-list-6-item-2-selector"
                      label="Value 3"
                      labelPlacement="end"
                      onChange={[Function]}
                      value=""
                    >
                      <HvRadio
                        checked={false}
                        className=""
                        classes={
                          Object {
                            "container": "HvRadioButton-container-252 HvList-selectorContainer-235",
                            "disableFocus": "HvRadioButton-disableFocus-253",
                            "icon": "HvRadioButton-icon-259",
                            "labelDisabled": "HvRadioButton-labelDisabled-255",
                            "labelEnd": "HvRadioButton-labelEnd-256",
                            "labelStart": "HvRadioButton-labelStart-257",
                            "labelTypography": "HvRadioButton-labelTypography-254 HvList-truncate-243",
                            "radio": "HvRadioButton-radio-258",
                          }
                        }
                        disabled={false}
                        id="hv-list-6-item-2-selector"
                        label="Value 3"
                        labelPlacement="end"
                        onChange={[Function]}
                        value=""
                      >
                        <WithStyles(ForwardRef(FormControlLabel))
                          className="HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                          classes={
                            Object {
                              "disabled": "HvRadioButton-labelDisabled-255",
                              "label": "HvRadioButton-labelTypography-254 HvList-truncate-243",
                            }
                          }
                          control={
                            <ForwardRef(WithStyles)
                              checked={false}
                              checkedIcon={
                                <ForwardRef(WithStyles)
                                  className="HvRadioButton-icon-259"
                                />
                              }
                              className="HvRadioButton-radio-258"
                              color="default"
                              disableRipple={true}
                              disabled={false}
                              icon={
                                <ForwardRef(WithStyles)
                                  className="HvRadioButton-icon-259"
                                />
                              }
                              id="hv-list-6-item-2-selector-input"
                              onBlur={[Function]}
                              onChange={[Function]}
                              value=""
                            />
                          }
                          id="hv-list-6-item-2-selector"
                          label="Value 3"
                          labelPlacement="end"
                        >
                          <ForwardRef(FormControlLabel)
                            className="HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                            classes={
                              Object {
                                "disabled": "Mui-disabled HvRadioButton-labelDisabled-255",
                                "label": "MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243",
                                "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                "root": "MuiFormControlLabel-root",
                              }
                            }
                            control={
                              <ForwardRef(WithStyles)
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                className="HvRadioButton-radio-258"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                id="hv-list-6-item-2-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              />
                            }
                            id="hv-list-6-item-2-selector"
                            label="Value 3"
                            labelPlacement="end"
                          >
                            <label
                              className="MuiFormControlLabel-root HvRadioButton-container-252 HvList-selectorContainer-235 HvRadioButton-labelEnd-256"
                              id="hv-list-6-item-2-selector"
                            >
                              <WithStyles(ForwardRef(Radio))
                                checked={false}
                                checkedIcon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                className="HvRadioButton-radio-258"
                                color="default"
                                disableRipple={true}
                                disabled={false}
                                icon={
                                  <ForwardRef(WithStyles)
                                    className="HvRadioButton-icon-259"
                                  />
                                }
                                id="hv-list-6-item-2-selector-input"
                                onBlur={[Function]}
                                onChange={[Function]}
                                value=""
                              >
                                <ForwardRef(Radio)
                                  checked={false}
                                  checkedIcon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon-259"
                                    />
                                  }
                                  className="HvRadioButton-radio-258"
                                  classes={
                                    Object {
                                      "checked": "Mui-checked",
                                      "colorPrimary": "MuiRadio-colorPrimary",
                                      "colorSecondary": "MuiRadio-colorSecondary",
                                      "disabled": "Mui-disabled",
                                      "root": "MuiRadio-root",
                                    }
                                  }
                                  color="default"
                                  disableRipple={true}
                                  disabled={false}
                                  icon={
                                    <ForwardRef(WithStyles)
                                      className="HvRadioButton-icon-259"
                                    />
                                  }
                                  id="hv-list-6-item-2-selector-input"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value=""
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon-259"
                                      />
                                    }
                                    className="HvRadioButton-radio-258"
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "root": "MuiRadio-root",
                                      }
                                    }
                                    color="default"
                                    disableRipple={true}
                                    disabled={false}
                                    icon={
                                      <ForwardRef(WithStyles)
                                        className="HvRadioButton-icon-259"
                                      />
                                    }
                                    id="hv-list-6-item-2-selector-input"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="radio"
                                    value=""
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon-259"
                                        />
                                      }
                                      className="HvRadioButton-radio-258"
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-272 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-273 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-274",
                                          "root": "PrivateSwitchBase-root-271 MuiRadio-root",
                                        }
                                      }
                                      color="default"
                                      disableRipple={true}
                                      disabled={false}
                                      icon={
                                        <ForwardRef(WithStyles)
                                          className="HvRadioButton-icon-259"
                                        />
                                      }
                                      id="hv-list-6-item-2-selector-input"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      type="radio"
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                        color="default"
                                        component="span"
                                        disableRipple={true}
                                        disabled={false}
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          color="default"
                                          component="span"
                                          disableRipple={true}
                                          disabled={false}
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                            component="span"
                                            disableRipple={true}
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disableRipple={true}
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-271 MuiRadio-root HvRadioButton-radio-258"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-274"
                                                    disabled={false}
                                                    id="hv-list-6-item-2-selector-input"
                                                    onChange={[Function]}
                                                    type="radio"
                                                    value=""
                                                  />
                                                  <WithStyles(RadioButtonUnselected)
                                                    className="HvRadioButton-icon-259"
                                                  >
                                                    <RadioButtonUnselected
                                                      className="HvRadioButton-icon-259"
                                                      classes={
                                                        Object {
                                                          "root": "HvIconRadioButtonUnselected-root-322",
                                                          "rootL": "HvIconRadioButtonUnselected-rootL-326",
                                                          "rootM": "HvIconRadioButtonUnselected-rootM-325",
                                                          "rootS": "HvIconRadioButtonUnselected-rootS-324",
                                                          "rootXs": "HvIconRadioButtonUnselected-rootXs-323",
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="HvRadioButton-icon-259 HvIconRadioButtonUnselected-root-322 HvIconRadioButtonUnselected-rootS-324"
                                                      >
                                                        <svg
                                                          focusable={false}
                                                          height="16px"
                                                          viewBox="0 0 16 16"
                                                          width="16px"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            className="color0"
                                                            d="M8 15.5a7.525 7.525 0 1 1 5.3-2.2A7.446 7.446 0 0 1 8 15.5z"
                                                            fill="#FFFFFF"
                                                          />
                                                          <path
                                                            className="color1"
                                                            d="M8 15a7.023 7.023 0 1 0-4.943-2.057A6.953 6.953 0 0 0 8 15m0 1a8 8 0 1 1 8-8 8 8 0 0 1-8 8z"
                                                            fill="#414141"
                                                          />
                                                        </svg>
                                                      </div>
                                                    </RadioButtonUnselected>
                                                  </WithStyles(RadioButtonUnselected)>
                                                </span>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                </ForwardRef(Radio)>
                              </WithStyles(ForwardRef(Radio))>
                              <WithStyles(ForwardRef(Typography))
                                className="MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243"
                                component="span"
                              >
                                <ForwardRef(Typography)
                                  className="MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                >
                                  <span
                                    className="MuiTypography-root MuiFormControlLabel-label HvRadioButton-labelTypography-254 HvList-truncate-243 MuiTypography-body1"
                                  >
                                    Value 3
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </label>
                          </ForwardRef(FormControlLabel)>
                        </WithStyles(ForwardRef(FormControlLabel))>
                      </HvRadio>
                    </WithStyles(HvRadio)>
                  </li>
                </ConditionalWrapper>
              </Focus>
            </WithStyles(Focus)>
          </ul>
        </div>
      </List>
    </WithStyles(List)>
  </ThemeProvider>
</HvProvider>
`;
