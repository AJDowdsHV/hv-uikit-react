// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Custom Pagination should render correctly 1`] = `
<WithStyles(WithLabels)
  canNext={true}
  canPrevious={true}
  page={2}
  pageSize={5}
  pageSizeOptions={
    Array [
      5,
      10,
    ]
  }
  pages={4}
  showPageJump={false}
  showPageSizeOptions={true}
>
  <WithLabels
    canNext={true}
    canPrevious={true}
    classes={
      Object {
        "icon": "HvPagination-icon",
        "iconContainer": "HvPagination-iconContainer",
        "pageInfo": "HvPagination-pageInfo",
        "pageJump": "HvPagination-pageJump",
        "pageNavigator": "HvPagination-pageNavigator",
        "pageSizeInput": "HvPagination-pageSizeInput",
        "pageSizeInputContainer": "HvPagination-pageSizeInputContainer",
        "pageSizeInputRoot": "HvPagination-pageSizeInputRoot",
        "pageSizeOptions": "HvPagination-pageSizeOptions",
        "pageSizeOptionsSelect": "HvPagination-pageSizeOptionsSelect",
        "root": "HvPagination-root",
        "selectDownIcon": "HvPagination-selectDownIcon",
      }
    }
    page={2}
    pageSize={5}
    pageSizeOptions={
      Array [
        5,
        10,
      ]
    }
    pages={4}
    showPageJump={false}
    showPageSizeOptions={true}
  >
    <Pagination
      canNext={true}
      canPrevious={true}
      classes={
        Object {
          "icon": "HvPagination-icon",
          "iconContainer": "HvPagination-iconContainer",
          "pageInfo": "HvPagination-pageInfo",
          "pageJump": "HvPagination-pageJump",
          "pageNavigator": "HvPagination-pageNavigator",
          "pageSizeInput": "HvPagination-pageSizeInput",
          "pageSizeInputContainer": "HvPagination-pageSizeInputContainer",
          "pageSizeInputRoot": "HvPagination-pageSizeInputRoot",
          "pageSizeOptions": "HvPagination-pageSizeOptions",
          "pageSizeOptionsSelect": "HvPagination-pageSizeOptionsSelect",
          "root": "HvPagination-root",
          "selectDownIcon": "HvPagination-selectDownIcon",
        }
      }
      labels={
        Object {
          "pageSizeEntryName": "rows",
          "pageSizePrev": "Show",
          "pageSizeSelectorDescription": "Select how many to display",
          "pagesSeparator": "of",
          "paginationFirstPageTitle": "First page",
          "paginationInputLabel": "Page input",
          "paginationLastPageTitle": "Last page",
          "paginationNextPageTitle": "Next page",
          "paginationPreviousPageTitle": "Previous page",
        }
      }
      page={2}
      pageSize={5}
      pageSizeOptions={
        Array [
          5,
          10,
        ]
      }
      pages={4}
      showPageJump={false}
      showPageSizeOptions={true}
    >
      <div
        className="HvPagination-root"
      >
        <div
          className="HvPagination-pageSizeOptions"
        >
          <WithStyles(ForwardRef)
            component="span"
            variant="sText"
          >
            <ForwardRef
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              component="span"
              variant="sText"
            >
              <span
                className="HvTypography-root HvTypography-sText"
              >
                Show
              </span>
            </ForwardRef>
          </WithStyles(ForwardRef)>
          <select
            aria-label="Select how many to display"
            className="HvPagination-pageSizeOptionsSelect"
            disabled={false}
            onChange={[Function]}
            value={5}
          >
            <option
              key="5"
              value={5}
            >
              5
            </option>
            <option
              key="10"
              value={10}
            >
              10
            </option>
          </select>
          <WithStyles(DropDownXS)
            className="HvPagination-selectDownIcon"
          >
            <DropDownXS
              className="HvPagination-selectDownIcon"
              classes={
                Object {
                  "root": "HvIconDropDownXS-root",
                  "rootL": "HvIconDropDownXS-rootL",
                  "rootM": "HvIconDropDownXS-rootM",
                  "rootS": "HvIconDropDownXS-rootS",
                  "rootXs": "HvIconDropDownXS-rootXs",
                }
              }
            >
              <div
                className="HvPagination-selectDownIcon HvIconDropDownXS-root HvIconDropDownXS-rootXs"
              >
                <svg
                  focusable={false}
                  height="12px"
                  viewBox="0 0 12 12"
                  width="12px"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    className="color0"
                    d="M5.99994 8.65L1.4 4.05l.7-.7L6 7.25l3.9-3.9.7.7z"
                    fill="#414141"
                  />
                </svg>
              </div>
            </DropDownXS>
          </WithStyles(DropDownXS)>
          <WithStyles(ForwardRef)
            component="span"
            variant="sText"
          >
            <ForwardRef
              classes={
                Object {
                  "3xlTitle": "HvTypography-3xlTitle",
                  "4xlTitle": "HvTypography-4xlTitle",
                  "5xlTitle": "HvTypography-5xlTitle",
                  "disabledButtonText": "HvTypography-disabledButtonText",
                  "highlightText": "HvTypography-highlightText",
                  "infoText": "HvTypography-infoText",
                  "inlineLink": "HvTypography-inlineLink",
                  "lTitle": "HvTypography-lTitle",
                  "labelText": "HvTypography-labelText",
                  "mTitle": "HvTypography-mTitle",
                  "normalText": "HvTypography-normalText",
                  "placeholderText": "HvTypography-placeholderText",
                  "root": "HvTypography-root",
                  "sLink": "HvTypography-sLink",
                  "sText": "HvTypography-sText",
                  "sTitle": "HvTypography-sTitle",
                  "selectedNavText": "HvTypography-selectedNavText",
                  "selectedText": "HvTypography-selectedText",
                  "vizText": "HvTypography-vizText",
                  "xlTitle": "HvTypography-xlTitle",
                  "xsTitle": "HvTypography-xsTitle",
                  "xxlTitle": "HvTypography-xxlTitle",
                  "xxsTitle": "HvTypography-xxsTitle",
                }
              }
              component="span"
              variant="sText"
            >
              <span
                className="HvTypography-root HvTypography-sText"
              >
                rows
              </span>
            </ForwardRef>
          </WithStyles(ForwardRef)>
        </div>
        <div
          className="HvPagination-pageNavigator"
        >
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
            title="First page"
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
              title="First page"
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
                title="First page"
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                  title="First page"
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    title="First page"
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <WithStyles(Start)
                        className="HvPagination-icon"
                      >
                        <Start
                          className="HvPagination-icon"
                          classes={
                            Object {
                              "root": "HvIconStart-root",
                              "rootL": "HvIconStart-rootL",
                              "rootM": "HvIconStart-rootM",
                              "rootS": "HvIconStart-rootS",
                              "rootXs": "HvIconStart-rootXs",
                            }
                          }
                        >
                          <div
                            className="HvPagination-icon HvIconStart-root HvIconStart-rootS"
                          >
                            <svg
                              focusable={false}
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M12.7 15.5L5.3 8.1001l7.4-7.5.7.80005-6.7 6.7 6.7 6.7zM3 0h1v16H3z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </Start>
                      </WithStyles(Start)>
                    </span>
                    <NoSsr />
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
            title="Previous page"
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
              title="Previous page"
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
                title="Previous page"
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                  title="Previous page"
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    title="Previous page"
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <WithStyles(Backwards)
                        className="HvPagination-icon"
                      >
                        <Backwards
                          className="HvPagination-icon"
                          classes={
                            Object {
                              "root": "HvIconBackwards-root",
                              "rootL": "HvIconBackwards-rootL",
                              "rootM": "HvIconBackwards-rootM",
                              "rootS": "HvIconBackwards-rootS",
                              "rootXs": "HvIconBackwards-rootXs",
                            }
                          }
                        >
                          <div
                            className="HvPagination-icon HvIconBackwards-root HvIconBackwards-rootS"
                          >
                            <svg
                              focusable={false}
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M11.35 15.45l-7.4-7.4 7.4-7.5.7.8-6.7 6.7 6.7 6.7z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </Backwards>
                      </WithStyles(Backwards)>
                    </span>
                    <NoSsr />
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <div
            className="HvPagination-pageInfo"
          >
            <WithStyles(ForwardRef)
              component="span"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                >
                  3
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
            <WithStyles(ForwardRef)
              component="span"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                >
                   of 
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
            <WithStyles(ForwardRef)
              component="span"
              variant="sText"
            >
              <ForwardRef
                classes={
                  Object {
                    "3xlTitle": "HvTypography-3xlTitle",
                    "4xlTitle": "HvTypography-4xlTitle",
                    "5xlTitle": "HvTypography-5xlTitle",
                    "disabledButtonText": "HvTypography-disabledButtonText",
                    "highlightText": "HvTypography-highlightText",
                    "infoText": "HvTypography-infoText",
                    "inlineLink": "HvTypography-inlineLink",
                    "lTitle": "HvTypography-lTitle",
                    "labelText": "HvTypography-labelText",
                    "mTitle": "HvTypography-mTitle",
                    "normalText": "HvTypography-normalText",
                    "placeholderText": "HvTypography-placeholderText",
                    "root": "HvTypography-root",
                    "sLink": "HvTypography-sLink",
                    "sText": "HvTypography-sText",
                    "sTitle": "HvTypography-sTitle",
                    "selectedNavText": "HvTypography-selectedNavText",
                    "selectedText": "HvTypography-selectedText",
                    "vizText": "HvTypography-vizText",
                    "xlTitle": "HvTypography-xlTitle",
                    "xsTitle": "HvTypography-xsTitle",
                    "xxlTitle": "HvTypography-xxlTitle",
                    "xxsTitle": "HvTypography-xxsTitle",
                  }
                }
                component="span"
                variant="sText"
              >
                <span
                  className="HvTypography-root HvTypography-sText"
                >
                  4
                </span>
              </ForwardRef>
            </WithStyles(ForwardRef)>
          </div>
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
            title="Next page"
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
              title="Next page"
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
                title="Next page"
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                  title="Next page"
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    title="Next page"
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <WithStyles(Forwards)
                        className="HvPagination-icon"
                      >
                        <Forwards
                          className="HvPagination-icon"
                          classes={
                            Object {
                              "root": "HvIconForwards-root",
                              "rootL": "HvIconForwards-rootL",
                              "rootM": "HvIconForwards-rootM",
                              "rootS": "HvIconForwards-rootS",
                              "rootXs": "HvIconForwards-rootXs",
                            }
                          }
                        >
                          <div
                            className="HvPagination-icon HvIconForwards-root HvIconForwards-rootS"
                          >
                            <svg
                              focusable={false}
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M4.7 15.45l-.8-.7 6.8-6.7-6.8-6.7.8-.8 7.4 7.5z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </Forwards>
                      </WithStyles(Forwards)>
                    </span>
                    <NoSsr />
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <WithStyles(ForwardRef(IconButton))
            className="HvPagination-iconContainer"
            disabled={false}
            onClick={[Function]}
            title="Last page"
          >
            <ForwardRef(IconButton)
              className="HvPagination-iconContainer"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disabled={false}
              onClick={[Function]}
              title="Last page"
            >
              <WithStyles(ForwardRef(ButtonBase))
                centerRipple={true}
                className="MuiIconButton-root HvPagination-iconContainer"
                disabled={false}
                focusRipple={true}
                onClick={[Function]}
                title="Last page"
              >
                <ForwardRef(ButtonBase)
                  centerRipple={true}
                  className="MuiIconButton-root HvPagination-iconContainer"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                  onClick={[Function]}
                  title="Last page"
                >
                  <button
                    className="MuiButtonBase-root MuiIconButton-root HvPagination-iconContainer"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    title="Last page"
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <WithStyles(End)
                        className="HvPagination-icon"
                      >
                        <End
                          className="HvPagination-icon"
                          classes={
                            Object {
                              "root": "HvIconEnd-root",
                              "rootL": "HvIconEnd-rootL",
                              "rootM": "HvIconEnd-rootM",
                              "rootS": "HvIconEnd-rootS",
                              "rootXs": "HvIconEnd-rootXs",
                            }
                          }
                        >
                          <div
                            className="HvPagination-icon HvIconEnd-root HvIconEnd-rootS"
                          >
                            <svg
                              focusable={false}
                              height="16px"
                              viewBox="0 0 16 16"
                              width="16px"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                className="color0"
                                d="M3.70227 15.4056l-.8-.80005 6.8-6.69995-6.8-6.69995.8-.7 7.4 7.3999zM12.1 0h1v16h-1z"
                                fill="#414141"
                              />
                            </svg>
                          </div>
                        </End>
                      </WithStyles(End)>
                    </span>
                    <NoSsr />
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
        </div>
      </div>
    </Pagination>
  </WithLabels>
</WithStyles(WithLabels)>
`;
